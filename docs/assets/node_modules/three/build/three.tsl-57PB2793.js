import{TSL as e}from"./three.webgpu-DD9BFIZX.js";/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */e.BRDF_GGX;e.BRDF_Lambert;e.BasicShadowFilter;e.Break;e.Continue;e.DFGApprox;e.D_GGX;e.Discard;e.EPSILON;e.F_Schlick;const r=e.Fn;e.INFINITY;const a=e.If,o=e.Loop;e.NodeShaderStage;e.NodeType;e.NodeUpdateType;e.NodeAccess;e.PCFShadowFilter;e.PCFSoftShadowFilter;e.PI;e.PI2;e.Return;e.Schlick_to_F0;e.ScriptableNodeResources;e.ShaderNode;e.TBNViewMatrix;e.VSMShadowFilter;e.V_GGX_SmithCorrelated;e.abs;e.acesFilmicToneMapping;e.acos;e.add;e.addNodeElement;e.agxToneMapping;e.all;e.alphaT;e.and;e.anisotropy;e.anisotropyB;e.anisotropyT;e.any;e.append;e.array;e.arrayBuffer;const i=e.asin;e.assign;e.atan;e.atan2;e.atomicAdd;e.atomicAnd;e.atomicFunc;e.atomicMax;e.atomicMin;e.atomicOr;e.atomicStore;e.atomicSub;e.atomicXor;e.atomicLoad;e.attenuationColor;e.attenuationDistance;e.attribute;e.attributeArray;e.backgroundBlurriness;e.backgroundIntensity;e.backgroundRotation;e.batch;e.billboarding;e.bitAnd;e.bitNot;e.bitOr;e.bitXor;e.bitangentGeometry;e.bitangentLocal;e.bitangentView;e.bitangentWorld;e.bitcast;e.blendBurn;e.blendColor;e.blendDodge;e.blendOverlay;e.blendScreen;e.blur;e.bool;e.buffer;e.bufferAttribute;e.bumpMap;e.burn;e.bvec2;e.bvec3;e.bvec4;e.bypass;e.cache;e.call;e.cameraFar;e.cameraIndex;e.cameraNear;e.cameraNormalMatrix;e.cameraPosition;e.cameraProjectionMatrix;e.cameraProjectionMatrixInverse;e.cameraViewMatrix;e.cameraWorldMatrix;e.cbrt;e.cdl;e.ceil;e.checker;e.cineonToneMapping;e.clamp;e.clearcoat;e.clearcoatRoughness;e.code;e.color;e.colorSpaceToWorking;e.colorToDirection;e.compute;e.cond;e.Const;e.context;e.convert;e.convertColorSpace;e.convertToTexture;const n=e.cos;e.cross;e.cubeTexture;e.dFdx;e.dFdy;e.dashSize;e.defaultBuildStages;e.defaultShaderStages;e.defined;e.degrees;e.deltaTime;e.densityFog;e.densityFogFactor;e.depth;e.depthPass;e.difference;e.diffuseColor;e.directPointLight;e.directionToColor;e.dispersion;e.distance;e.div;e.dodge;e.dot;e.drawIndex;e.dynamicBufferAttribute;e.element;e.emissive;e.equal;e.equals;e.equirectUV;const s=e.exp;e.exp2;e.expression;e.faceDirection;e.faceForward;e.faceforward;const l=e.float;e.floor;e.fog;e.fract;e.frameGroup;e.frameId;e.frontFacing;e.fwidth;e.gain;e.gapSize;e.getConstNodeType;e.getCurrentStack;e.getDirection;e.getDistanceAttenuation;e.getGeometryRoughness;e.getNormalFromDepth;e.getParallaxCorrectNormal;e.getRoughness;e.getScreenPosition;e.getShIrradianceAt;e.getTextureIndex;e.getViewPosition;e.glsl;e.glslFn;e.grayscale;e.greaterThan;e.greaterThanEqual;e.hash;e.highpModelNormalViewMatrix;e.highpModelViewMatrix;e.hue;e.instance;const c=e.instanceIndex;e.instancedArray;e.instancedBufferAttribute;e.instancedDynamicBufferAttribute;e.instancedMesh;e.int;e.inverseSqrt;e.inversesqrt;e.invocationLocalIndex;e.invocationSubgroupIndex;e.ior;e.iridescence;e.iridescenceIOR;e.iridescenceThickness;e.ivec2;e.ivec3;e.ivec4;e.js;e.label;e.length;e.lengthSq;e.lessThan;e.lessThanEqual;e.lightPosition;e.lightTargetDirection;e.lightTargetPosition;e.lightViewPosition;e.lightingContext;e.lights;e.linearDepth;e.linearToneMapping;e.localId;e.globalId;e.log;e.log2;e.logarithmicDepthToViewZ;e.loop;e.luminance;e.mediumpModelViewMatrix;e.mat2;e.mat3;e.mat4;e.matcapUV;e.materialAO;e.materialAlphaTest;e.materialAnisotropy;e.materialAnisotropyVector;e.materialAttenuationColor;e.materialAttenuationDistance;e.materialClearcoat;e.materialClearcoatNormal;e.materialClearcoatRoughness;e.materialColor;e.materialDispersion;e.materialEmissive;e.materialIOR;e.materialIridescence;e.materialIridescenceIOR;e.materialIridescenceThickness;e.materialLightMap;e.materialLineDashOffset;e.materialLineDashSize;e.materialLineGapSize;e.materialLineScale;e.materialLineWidth;e.materialMetalness;e.materialNormal;e.materialOpacity;e.materialPointSize;e.materialReference;e.materialReflectivity;e.materialRefractionRatio;e.materialRotation;e.materialRoughness;e.materialSheen;e.materialSheenRoughness;e.materialShininess;e.materialSpecular;e.materialSpecularColor;e.materialSpecularIntensity;e.materialSpecularStrength;e.materialThickness;e.materialTransmission;e.max;e.maxMipLevel;e.metalness;e.min;e.mix;e.mixElement;e.mod;e.modInt;e.modelDirection;e.modelNormalMatrix;e.modelPosition;e.modelScale;e.modelViewMatrix;e.modelViewPosition;e.modelViewProjection;e.modelWorldMatrix;e.modelWorldMatrixInverse;e.morphReference;e.mrt;e.mul;e.mx_aastep;e.mx_cell_noise_float;e.mx_contrast;e.mx_fractal_noise_float;e.mx_fractal_noise_vec2;e.mx_fractal_noise_vec3;e.mx_fractal_noise_vec4;e.mx_hsvtorgb;e.mx_noise_float;e.mx_noise_vec3;e.mx_noise_vec4;e.mx_ramplr;e.mx_ramptb;e.mx_rgbtohsv;e.mx_safepower;e.mx_splitlr;e.mx_splittb;e.mx_srgb_texture_to_lin_rec709;e.mx_transform_uv;e.mx_worley_noise_float;e.mx_worley_noise_vec2;e.mx_worley_noise_vec3;const m=e.negate;e.neutralToneMapping;e.nodeArray;e.nodeImmutable;e.nodeObject;e.nodeObjects;e.nodeProxy;e.normalFlat;e.normalGeometry;e.normalLocal;e.normalMap;e.normalView;e.normalWorld;e.normalize;e.not;e.notEqual;e.numWorkgroups;e.objectDirection;e.objectGroup;e.objectPosition;e.objectScale;e.objectViewPosition;e.objectWorldMatrix;e.oneMinus;e.or;e.orthographicDepthToViewZ;e.oscSawtooth;e.oscSine;e.oscSquare;e.oscTriangle;e.output;e.outputStruct;e.overlay;e.overloadingFn;e.parabola;e.parallaxDirection;e.parallaxUV;e.parameter;e.pass;e.passTexture;e.pcurve;e.perspectiveDepthToViewZ;e.pmremTexture;e.pointUV;e.pointWidth;e.positionGeometry;e.positionLocal;e.positionPrevious;e.positionView;e.positionViewDirection;e.positionWorld;e.positionWorldDirection;e.posterize;e.pow;e.pow2;e.pow3;e.pow4;e.property;e.radians;e.rand;e.range;e.rangeFog;e.rangeFogFactor;e.reciprocal;e.reference;e.referenceBuffer;e.reflect;e.reflectVector;e.reflectView;e.reflector;e.refract;e.refractVector;e.refractView;e.reinhardToneMapping;e.remainder;e.remap;e.remapClamp;e.renderGroup;e.renderOutput;e.rendererReference;e.rotate;e.rotateUV;e.roughness;e.round;e.rtt;e.sRGBTransferEOTF;e.sRGBTransferOETF;e.sampler;e.saturate;e.saturation;e.screen;e.screenCoordinate;e.screenSize;e.screenUV;e.scriptable;e.scriptableValue;e.select;e.setCurrentStack;e.shaderStages;e.shadow;e.shadowPositionWorld;e.sharedUniformGroup;e.shapeCircle;e.sheen;e.sheenRoughness;e.shiftLeft;e.shiftRight;e.shininess;e.sign;const p=e.sin;e.sinc;e.skinning;e.skinningReference;e.smoothstep;e.smoothstepElement;e.specularColor;e.specularF90;e.spherizeUV;e.split;e.spritesheetUV;const d=e.sqrt;e.stack;e.step;const u=e.storage;e.storageBarrier;e.storageObject;e.storageTexture;e.string;e.struct;e.sub;e.subgroupIndex;e.subgroupSize;e.tan;e.tangentGeometry;e.tangentLocal;e.tangentView;e.tangentWorld;e.temp;e.texture;e.texture3D;e.textureBarrier;e.textureBicubic;e.textureCubeUV;e.textureLoad;e.textureSize;e.textureStore;e.thickness;e.threshold;e.time;e.timerDelta;e.timerGlobal;e.timerLocal;e.toOutputColorSpace;e.toWorkingColorSpace;e.toneMapping;e.toneMappingExposure;e.toonOutlinePass;e.transformDirection;e.transformNormal;e.transformNormalToView;e.transformedBentNormalView;e.transformedBitangentView;e.transformedBitangentWorld;e.transformedClearcoatNormalView;e.transformedNormalView;e.transformedNormalWorld;e.transformedTangentView;e.transformedTangentWorld;e.transmission;e.transpose;e.tri;e.tri3;e.triNoise3D;e.triplanarTexture;e.triplanarTextures;e.trunc;e.tslFn;e.uint;const g=e.uniform;e.uniformArray;e.uniformGroup;e.uniforms;e.userData;e.uv;e.uvec2;e.uvec3;e.uvec4;e.Var;e.varying;e.varyingProperty;e.vec2;e.vec3;e.vec4;e.vectorComponents;e.velocity;e.vertexColor;e.vertexIndex;e.vibrance;e.viewZToLogarithmicDepth;e.viewZToOrthographicDepth;e.viewZToPerspectiveDepth;e.viewport;e.viewportBottomLeft;e.viewportCoordinate;e.viewportDepthTexture;e.viewportLinearDepth;e.viewportMipTexture;e.viewportResolution;e.viewportSafeUV;e.viewportSharedTexture;e.viewportSize;e.viewportTexture;e.viewportTopLeft;e.viewportUV;e.wgsl;e.wgslFn;e.workgroupArray;e.workgroupBarrier;e.workgroupId;e.workingToColorSpace;e.xor;export{r as Fn,a as If,o as Loop,i as asin,n as cos,s as exp,l as float,c as instanceIndex,m as negate,p as sin,d as sqrt,u as storage,g as uniform};
