import{InstancedBufferAttribute as da,Color as Pt,HalfFloatType as it,SRGBColorSpace as q,NoToneMapping as qs,Vector4 as he,PCFShadowMap as wg,Scene as ha,Vector2 as We,RenderTarget as ss,LinearFilter as zt,LinearSRGBColorSpace as ys,RGBAFormat as es,Matrix4 as Ie,Frustum as Mg,BackSide as vt,FrontSide as Ro,DoubleSide as Xs,WebGLCoordinateSystem as Un,PointLight as Bg,DirectionalLight as Fg,RectAreaLight as Pg,SpotLight as il,AmbientLight as Ug,HemisphereLight as Dg,LightProbe as Lg,LinearToneMapping as Ig,ReinhardToneMapping as Vg,CineonToneMapping as Gg,ACESFilmicToneMapping as Og,AgXToneMapping as kg,NeutralToneMapping as zg,Matrix3 as Zn,ColorManagement as yt,Vector3 as j,DynamicDrawUsage as Os,Mesh as Qs,OrthographicCamera as ol,Material as Iu,NormalBlending as js,EventDispatcher as pa,PerspectiveCamera as Kr,ArrayCamera as Wg,DepthStencilFormat as Jn,DepthFormat as er,UnsignedInt248Type as tr,UnsignedIntType as Fe,DepthTexture as ns,UnsignedByteType as _t,WebXRController as $g,EquirectangularReflectionMapping as sr,EquirectangularRefractionMapping as nr,CubeUVReflectionMapping as Ao,SphereGeometry as Hg,CubeReflectionMapping as Zs,CubeRefractionMapping as Js,Camera as qg,Plane as al,WebGPUCoordinateSystem as on,warnOnce as Dn,createCanvasElement as Xg,REVISION as ul,IntType as ze,MirroredRepeatWrapping as fi,ClampToEdgeWrapping as fa,RepeatWrapping as gi,LinearMipmapLinearFilter as xs,LinearMipmapNearestFilter as Eo,NearestMipmapLinearFilter as Ln,NearestMipmapNearestFilter as cl,NearestFilter as Vt,NotEqualCompare as ll,GreaterCompare as dl,GreaterEqualCompare as hl,EqualCompare as pl,LessEqualCompare as fl,LessCompare as ga,AlwaysCompare as gl,NeverCompare as ml,FloatType as nt,ReverseSubtractEquation as yl,SubtractEquation as xl,AddEquation as Is,OneMinusDstAlphaFactor as Tl,OneMinusDstColorFactor as _l,OneMinusSrcAlphaFactor as bl,OneMinusSrcColorFactor as Nl,DstAlphaFactor as Sl,DstColorFactor as vl,SrcAlphaSaturateFactor as Rl,SrcAlphaFactor as Al,SrcColorFactor as El,OneFactor as Cl,ZeroFactor as wl,CullFaceNone as jg,CullFaceBack as Kg,CullFaceFront as Yg,NoBlending as In,CustomBlending as Ml,MultiplyBlending as Yr,SubtractiveBlending as Qr,AdditiveBlending as Zr,NotEqualDepth as Bl,GreaterDepth as Fl,GreaterEqualDepth as Pl,EqualDepth as Ul,LessEqualDepth as Dl,LessDepth as Ll,AlwaysDepth as Il,NeverDepth as Vl,NoColorSpace as Vn,UnsignedShort4444Type as Qg,UnsignedShort5551Type as Zg,UnsignedInt5999Type as Gl,ByteType as Rn,ShortType as An,UnsignedShortType as ks,AlphaFormat as Jg,RGBFormat as ma,LuminanceFormat as em,LuminanceAlphaFormat as tm,RedFormat as ya,RedIntegerFormat as xa,RGFormat as Gn,RGIntegerFormat as Ta,RGBAIntegerFormat as _a,RGB_S3TC_DXT1_Format as ki,RGBA_S3TC_DXT1_Format as Vr,RGBA_S3TC_DXT3_Format as Gr,RGBA_S3TC_DXT5_Format as Or,RGB_PVRTC_4BPPV1_Format as Vu,RGB_PVRTC_2BPPV1_Format as Gu,RGBA_PVRTC_4BPPV1_Format as Ou,RGBA_PVRTC_2BPPV1_Format as ku,RGB_ETC1_Format as zu,RGB_ETC2_Format as Co,RGBA_ETC2_EAC_Format as wo,RGBA_ASTC_4x4_Format as Mo,RGBA_ASTC_5x4_Format as Bo,RGBA_ASTC_5x5_Format as Fo,RGBA_ASTC_6x5_Format as Po,RGBA_ASTC_6x6_Format as Uo,RGBA_ASTC_8x5_Format as Do,RGBA_ASTC_8x6_Format as Lo,RGBA_ASTC_8x8_Format as Io,RGBA_ASTC_10x5_Format as Vo,RGBA_ASTC_10x6_Format as Go,RGBA_ASTC_10x8_Format as Oo,RGBA_ASTC_10x10_Format as ko,RGBA_ASTC_12x10_Format as zo,RGBA_ASTC_12x12_Format as Wo,RGBA_BPTC_Format as zi,RED_RGTC1_Format as sm,SIGNED_RED_RGTC1_Format as Wu,RED_GREEN_RGTC2_Format as $u,SIGNED_RED_GREEN_RGTC2_Format as Hu,DataTexture as nm,MeshPhongMaterial as rm,MeshStandardMaterial as im,MeshPhysicalMaterial as om,MeshToonMaterial as am,MeshBasicMaterial as Ol,MeshLambertMaterial as um,MeshNormalMaterial as cm,MeshMatcapMaterial as lm,LineBasicMaterial as dm,LineDashedMaterial as hm,PointsMaterial as pm,SpriteMaterial as fm,ShadowMaterial as gm,SRGBTransfer as qu,FramebufferTexture as kl,Matrix2 as zl,MathUtils as Wl,VSMShadowMap as _r,Texture as $l,TangentSpaceNormalMap as Xu,ObjectSpaceNormalMap as mm,StaticDrawUsage as ym,InterleavedBuffer as xm,InterleavedBufferAttribute as Tm,InstancedInterleavedBuffer as _m,UVMapping as bm,Euler as Nm,BufferAttribute as kr,BufferGeometry as Hl,Float32BufferAttribute as ju,RAD2DEG as Sm,Uint32BufferAttribute as vm,Uint16BufferAttribute as Rm,arrayNeedsUint32 as Am,NotEqualStencilFunc as Em,GreaterStencilFunc as Cm,GreaterEqualStencilFunc as wm,EqualStencilFunc as Mm,LessEqualStencilFunc as Bm,LessStencilFunc as Fm,AlwaysStencilFunc as Pm,NeverStencilFunc as Um,DecrementWrapStencilOp as Dm,IncrementWrapStencilOp as Lm,DecrementStencilOp as Im,IncrementStencilOp as Vm,InvertStencilOp as Gm,ReplaceStencilOp as Om,ZeroStencilOp as km,KeepStencilOp as zm,MaxEquation as Wm,MinEquation as $m,CubeTexture as ql,Float16BufferAttribute as Xl,RGBIntegerFormat as Hm,AddOperation as qm,MixOperation as Xm,MultiplyOperation as jm,Object3D as Km,LinearMipMapLinearFilter as Ym,DataArrayTexture as Qm,WebGLCubeRenderTarget as Zm,BoxGeometry as jl,CubeCamera as Jm,BasicShadowMap as ey}from"./three.core-BhFki44V.js";import{ArcCurve as XA,BasicDepthPacking as jA,Box3 as KA,Cache as YA,CatmullRomCurve3 as QA,CircleGeometry as ZA,ConstantAlphaFactor as JA,ConstantColorFactor as e0,Controls as t0,CubicBezierCurve as s0,CubicBezierCurve3 as n0,Curve as r0,CurvePath as i0,CustomToneMapping as o0,CylinderGeometry as a0,Data3DTexture as u0,DefaultLoadingManager as c0,EllipseCurve as l0,ExtrudeGeometry as d0,Fog as h0,GLSL3 as p0,Group as f0,ImageLoader as g0,ImageUtils as m0,InstancedBufferGeometry as y0,Layers as x0,Light as T0,Line as _0,Line3 as b0,LineCurve as N0,LineCurve3 as S0,LineSegments as v0,LinearTransfer as R0,Loader as A0,LoadingManager as E0,MOUSE as C0,MeshDepthMaterial as w0,MeshDistanceMaterial as M0,OneMinusConstantAlphaFactor as B0,OneMinusConstantColorFactor as F0,PCFSoftShadowMap as P0,Path as U0,PlaneGeometry as D0,Points as L0,QuadraticBezierCurve as I0,QuadraticBezierCurve3 as V0,Quaternion as G0,RGBADepthPacking as O0,RGB_BPTC_SIGNED_Format as k0,RGB_BPTC_UNSIGNED_Format as z0,Ray as W0,ShaderMaterial as $0,Shape as H0,ShapePath as q0,ShapeUtils as X0,Source as j0,Sphere as K0,Spherical as Y0,SphericalHarmonics3 as Q0,SplineCurve as Z0,TOUCH as J0,TextureLoader as eE,Triangle as tE,TriangleFanDrawMode as sE,TriangleStripDrawMode as nE,TrianglesDrawMode as rE,TubeGeometry as iE,WebGLRenderTarget as oE,WireframeGeometry as aE}from"./three.core-BhFki44V.js";/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ty=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"];class sy{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=e.object.isSkinnedMesh===!0,this.refreshUniforms=ty,this.renderId=0}firstInitialization(e){return this.renderObjects.has(e)===!1?(this.getRenderObjectData(e),!0):!1}getRenderObjectData(e){let t=this.renderObjects.get(e);if(t===void 0){const{geometry:s,material:n,object:r}=e;if(t={material:this.getMaterialData(n),geometry:{id:s.id,attributes:this.getAttributesData(s.attributes),indexVersion:s.index?s.index.version:null,drawRange:{start:s.drawRange.start,count:s.drawRange.count}},worldMatrix:r.matrixWorld.clone()},r.center&&(t.center=r.center.clone()),r.morphTargetInfluences&&(t.morphTargetInfluences=r.morphTargetInfluences.slice()),e.bundle!==null&&(t.version=e.bundle.version),t.material.transmission>0){const{width:i,height:a}=e.context;t.bufferWidth=i,t.bufferHeight=a}this.renderObjects.set(e,t)}return t}getAttributesData(e){const t={};for(const s in e){const n=e[s];t[s]={version:n.version}}return t}containsNode(e){const t=e.material;for(const s in t)if(t[s]&&t[s].isNode)return!0;return e.renderer.nodes.modelViewMatrix!==null||e.renderer.nodes.modelNormalViewMatrix!==null}getMaterialData(e){const t={};for(const s of this.refreshUniforms){const n=e[s];n!=null&&(typeof n=="object"&&n.clone!==void 0?n.isTexture===!0?t[s]={id:n.id,version:n.version}:t[s]=n.clone():t[s]=n)}return t}equals(e){const{object:t,material:s,geometry:n}=e,r=this.getRenderObjectData(e);if(r.worldMatrix.equals(t.matrixWorld)!==!0)return r.worldMatrix.copy(t.matrixWorld),!1;const i=r.material;for(const m in i){const b=i[m],_=s[m];if(b.equals!==void 0){if(b.equals(_)===!1)return b.copy(_),!1}else if(_.isTexture===!0){if(b.id!==_.id||b.version!==_.version)return b.id=_.id,b.version=_.version,!1}else if(b!==_)return i[m]=_,!1}if(i.transmission>0){const{width:m,height:b}=e.context;if(r.bufferWidth!==m||r.bufferHeight!==b)return r.bufferWidth=m,r.bufferHeight=b,!1}const a=r.geometry,u=n.attributes,c=a.attributes,l=Object.keys(c),d=Object.keys(u);if(a.id!==n.id)return a.id=n.id,!1;if(l.length!==d.length)return r.geometry.attributes=this.getAttributesData(u),!1;for(const m of l){const b=c[m],_=u[m];if(_===void 0)return delete c[m],!1;if(b.version!==_.version)return b.version=_.version,!1}const h=n.index,p=a.indexVersion,f=h?h.version:null;if(p!==f)return a.indexVersion=f,!1;if(a.drawRange.start!==n.drawRange.start||a.drawRange.count!==n.drawRange.count)return a.drawRange.start=n.drawRange.start,a.drawRange.count=n.drawRange.count,!1;if(r.morphTargetInfluences){let m=!1;for(let b=0;b<r.morphTargetInfluences.length;b++)r.morphTargetInfluences[b]!==t.morphTargetInfluences[b]&&(m=!0);if(m)return!0}return r.center&&r.center.equals(t.center)===!1?(r.center.copy(t.center),!0):(e.bundle!==null&&(r.version=e.bundle.version),!0)}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e))return!0;const{renderId:s}=t;if(this.renderId!==s)return this.renderId=s,!0;const n=e.object.static===!0,r=e.bundle!==null&&e.bundle.static===!0&&this.getRenderObjectData(e).version===e.bundle.version;return n||r?!1:this.equals(e)!==!0}}function On(o,e=0){let t=3735928559^e,s=1103547991^e;if(o instanceof Array)for(let n=0,r;n<o.length;n++)r=o[n],t=Math.imul(t^r,2654435761),s=Math.imul(s^r,1597334677);else for(let n=0,r;n<o.length;n++)r=o.charCodeAt(n),t=Math.imul(t^r,2654435761),s=Math.imul(s^r,1597334677);return t=Math.imul(t^t>>>16,2246822507),t^=Math.imul(s^s>>>13,3266489909),s=Math.imul(s^s>>>16,2246822507),s^=Math.imul(t^t>>>13,3266489909),4294967296*(2097151&s)+(t>>>0)}const Kl=o=>On(o),mi=o=>On(o),kn=(...o)=>On(o);function Yl(o,e=!1){const t=[];o.isNode===!0&&(t.push(o.id),o=o.getSelf());for(const{property:s,childNode:n}of Jr(o))t.push(On(s.slice(0,-4)),n.getCacheKey(e));return On(t)}function*Jr(o,e=!1){for(const t in o){if(t.startsWith("_")===!0)continue;const s=o[t];if(Array.isArray(s)===!0)for(let n=0;n<s.length;n++){const r=s[n];r&&(r.isNode===!0||e&&typeof r.toJSON=="function")&&(yield{property:t,index:n,childNode:r})}else if(s&&s.isNode===!0)yield{property:t,childNode:s};else if(typeof s=="object")for(const n in s){const r=s[n];r&&(r.isNode===!0||e&&typeof r.toJSON=="function")&&(yield{property:t,index:n,childNode:r})}}}const ny=new Map([[1,"float"],[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),Ku=new WeakMap;function Ql(o){return ny.get(o)}function ei(o){if(/[iu]?vec\d/.test(o))return o.startsWith("ivec")?Int32Array:o.startsWith("uvec")?Uint32Array:Float32Array;if(/mat\d/.test(o)||/float/.test(o))return Float32Array;if(/uint/.test(o))return Uint32Array;if(/int/.test(o))return Int32Array;throw new Error(`THREE.NodeUtils: Unsupported type: ${o}`)}function ba(o){if(/float|int|uint/.test(o))return 1;if(/vec2/.test(o))return 2;if(/vec3/.test(o))return 3;if(/vec4/.test(o)||/mat2/.test(o))return 4;if(/mat3/.test(o))return 9;if(/mat4/.test(o))return 16;console.error("THREE.TSL: Unsupported type:",o)}function Zt(o){if(o==null)return null;const e=typeof o;return o.isNode===!0?"node":e==="number"?"float":e==="boolean"?"bool":e==="string"?"string":e==="function"?"shader":o.isVector2===!0?"vec2":o.isVector3===!0?"vec3":o.isVector4===!0?"vec4":o.isMatrix2===!0?"mat2":o.isMatrix3===!0?"mat3":o.isMatrix4===!0?"mat4":o.isColor===!0?"color":o instanceof ArrayBuffer?"ArrayBuffer":null}function Zl(o,...e){const t=o?o.slice(-4):void 0;return e.length===1&&(t==="vec2"?e=[e[0],e[0]]:t==="vec3"?e=[e[0],e[0],e[0]]:t==="vec4"&&(e=[e[0],e[0],e[0],e[0]])),o==="color"?new Pt(...e):t==="vec2"?new We(...e):t==="vec3"?new j(...e):t==="vec4"?new he(...e):t==="mat2"?new zl(...e):t==="mat3"?new Zn(...e):t==="mat4"?new Ie(...e):o==="bool"?e[0]||!1:o==="float"||o==="int"||o==="uint"?e[0]||0:o==="string"?e[0]||"":o==="ArrayBuffer"?td(e[0]):null}function Jl(o){let e=Ku.get(o);return e===void 0&&(e={},Ku.set(o,e)),e}function ed(o){let e="";const t=new Uint8Array(o);for(let s=0;s<t.length;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function td(o){return Uint8Array.from(atob(o),e=>e.charCodeAt(0)).buffer}const $o={VERTEX:"vertex",FRAGMENT:"fragment"},z={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},ry={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX2:"mat2",MATRIX3:"mat3",MATRIX4:"mat4"},Ve={READ_ONLY:"readOnly",WRITE_ONLY:"writeOnly",READ_WRITE:"readWrite"},sd=["fragment","vertex"],Ho=["setup","analyze","generate"],qo=[...sd,"compute"],Ss=["x","y","z","w"];let iy=0;class O extends pa{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=z.NONE,this.updateBeforeType=z.NONE,this.updateAfterType=z.NONE,this.uuid=Wl.generateUUID(),this.version=0,this.global=!1,this.isNode=!0,this._cacheKey=null,this._cacheKeyVersion=0,Object.defineProperty(this,"id",{value:iy++})}set needsUpdate(e){e===!0&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,z.FRAME)}onRenderUpdate(e){return this.onUpdate(e,z.RENDER)}onObjectUpdate(e){return this.onUpdate(e,z.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of Jr(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return e=e||this.version!==this._cacheKeyVersion,(e===!0||this._cacheKey===null)&&(this._cacheKey=kn(Yl(this,e),this.customCacheKey()),this._cacheKeyVersion=this.version),this._cacheKey}customCacheKey(){return 0}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getMemberType(){return"void"}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);let s=0;for(const n of this.getChildren())t["node"+s++]=n;return t.outputNode||null}analyze(e){if(e.increaseUsage(this)===1){const s=e.getNodeProperties(this);for(const n of Object.values(s))n&&n.isNode===!0&&n.build(e)}}generate(e,t){const{outputNode:s}=e.getNodeProperties(this);if(s&&s.isNode===!0)return s.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const s=this.getShared(e);if(this!==s)return s.build(e,t);e.addNode(this),e.addChain(this);let n=null;const r=e.getBuildStage();if(r==="setup"){this.updateReference(e);const i=e.getNodeProperties(this);if(i.initialized!==!0){i.initialized=!0;const a=this.setup(e),u=a&&a.isNode===!0;for(const c of Object.values(i))c&&c.isNode===!0&&c.build(e);u&&a.build(e),i.outputNode=a}}else if(r==="analyze")this.analyze(e);else if(r==="generate")if(this.generate.length===1){const a=this.getNodeType(e),u=e.getDataFromNode(this);n=u.snippet,n===void 0?(n=this.generate(e)||"",u.snippet=n):u.flowCodes!==void 0&&e.context.nodeBlock!==void 0&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),n=e.format(n,a,t)}else n=this.generate(e,t)||"";return e.removeChain(this),e.addSequentialNode(this),n}getSerializeChildren(){return Jr(this)}serialize(e){const t=this.getSerializeChildren(),s={};for(const{property:n,index:r,childNode:i}of t)r!==void 0?(s[n]===void 0&&(s[n]=Number.isInteger(r)?[]:{}),s[n][r]=i.toJSON(e.meta).uuid):s[n]=i.toJSON(e.meta).uuid;Object.keys(s).length>0&&(e.inputNodes=s)}deserialize(e){if(e.inputNodes!==void 0){const t=e.meta.nodes;for(const s in e.inputNodes)if(Array.isArray(e.inputNodes[s])){const n=[];for(const r of e.inputNodes[s])n.push(t[r]);this[s]=n}else if(typeof e.inputNodes[s]=="object"){const n={};for(const r in e.inputNodes[s]){const i=e.inputNodes[s][r];n[r]=t[i]}this[s]=n}else{const n=e.inputNodes[s];this[s]=t[n]}}}toJSON(e){const{uuid:t,type:s}=this,n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{},nodes:{}});let r=e.nodes[t];r===void 0&&(r={uuid:t,type:s,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},n!==!0&&(e.nodes[r.uuid]=r),this.serialize(r),delete r.meta);function i(a){const u=[];for(const c in a){const l=a[c];delete l.metadata,u.push(l)}return u}if(n){const a=i(e.textures),u=i(e.images),c=i(e.nodes);a.length>0&&(r.textures=a),u.length>0&&(r.images=u),c.length>0&&(r.nodes=c)}return r}}class vs extends O{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=this.node.build(e),s=this.indexNode.build(e,"uint");return`${t}[ ${s} ]`}}class nd extends O{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let s=null;for(const n of this.convertTo.split("|"))(s===null||e.getTypeLength(t)===e.getTypeLength(n))&&(s=n);return s}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const s=this.node,n=this.getNodeType(e),r=s.build(e,n);return e.format(r,n,t)}}class Te extends O{static get type(){return"TempNode"}constructor(e=null){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if(e.getBuildStage()==="generate"){const n=e.getVectorType(this.getNodeType(e,t)),r=e.getDataFromNode(this);if(r.propertyName!==void 0)return e.format(r.propertyName,n,t);if(n!=="void"&&t!=="void"&&this.hasDependencies(e)){const i=super.build(e,n),a=e.getVarFromNode(this,null,n),u=e.getPropertyName(a);return e.addLineFlowCode(`${u} = ${i}`,this),r.snippet=i,r.propertyName=u,e.format(r.propertyName,n,t)}}return super.build(e,t)}}class oy extends Te{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return this.nodeType!==null?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((t,s)=>t+e.getTypeLength(s.getNodeType(e)),0))}generate(e,t){const s=this.getNodeType(e),n=this.nodes,r=e.getComponentType(s),i=[];for(const u of n){let c=u.build(e);const l=e.getComponentType(u.getNodeType(e));l!==r&&(c=e.format(c,l,r)),i.push(c)}const a=`${e.getType(s)}( ${i.join(", ")} )`;return e.format(a,s,t)}}const ay=Ss.join("");class Xo extends O{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(Ss.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const s=this.node,n=e.getTypeLength(s.getNodeType(e));let r=null;if(n>1){let i=null;this.getVectorLength()>=n&&(i=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const u=s.build(e,i);this.components.length===n&&this.components===ay.slice(0,this.components.length)?r=e.format(u,i,t):r=e.format(`${u}.${this.components}`,this.getNodeType(e),t)}else r=s.build(e,t);return r}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class uy extends Te{static get type(){return"SetNode"}constructor(e,t,s){super(),this.sourceNode=e,this.components=t,this.targetNode=s}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:s,targetNode:n}=this,r=this.getNodeType(e),i=e.getComponentType(n.getNodeType(e)),a=e.getTypeFromLength(s.length,i),u=n.build(e,a),c=t.build(e,r),l=e.getTypeLength(r),d=[];for(let h=0;h<l;h++){const p=Ss[h];p===s[0]?(d.push(u),h+=s.length-1):d.push(c+"."+p)}return`${e.getType(r)}( ${d.join(", ")} )`}}class cy extends Te{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:s}=this,n=this.getNodeType(e),r=s.build(e),i=e.getVarFromNode(this),a=e.getPropertyName(i);e.addLineFlowCode(a+" = "+r,this);const u=e.getTypeLength(n),c=[];let l=0;for(let d=0;d<u;d++){const h=Ss[d];h===t[l]?(c.push("1.0 - "+(a+"."+h)),l++):c.push(a+"."+h)}return`${e.getType(n)}( ${c.join(", ")} )`}}class Na extends O{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return this.nodeType===null?Zt(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=Zt(this.value),e.nodeType=this.nodeType,e.valueType==="ArrayBuffer"&&(e.value=ed(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?Zl(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}const Yu=/float|u?int/;class pt extends Na{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const s=this.getNodeType(e);return Yu.test(s)&&Yu.test(t)?e.generateConst(t,this.value):e.format(this.generateConst(e),s,t)}}class ly extends O{static get type(){return"MemberNode"}constructor(e,t){super(),this.node=e,this.property=t,this.isMemberNode=!0}getNodeType(e){return this.node.getMemberType(e,this.property)}generate(e){return this.node.build(e)+"."+this.property}}let en=null;const zs=new Map;function R(o,e){if(zs.has(o)){console.warn(`Redefinition of method chaining ${o}`);return}if(typeof e!="function")throw new Error(`Node element ${o} is not a function`);zs.set(o,e)}const rd=o=>o.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Qu=o=>rd(o).split("").sort().join(""),id={setup(o,e){const t=e.shift();return o(rr(t),...e)},get(o,e,t){if(typeof e=="string"&&o[e]===void 0){if(o.isStackNode!==!0&&e==="assign")return(...s)=>(en.assign(t,...s),t);if(zs.has(e)){const s=zs.get(e);return o.isStackNode?(...n)=>t.add(s(...n)):(...n)=>s(t,...n)}else{if(e==="self")return o;if(e.endsWith("Assign")&&zs.has(e.slice(0,e.length-6))){const s=zs.get(e.slice(0,e.length-6));return o.isStackNode?(...n)=>t.assign(n[0],s(...n)):(...n)=>t.assign(s(t,...n))}else{if(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0)return e=rd(e),E(new Xo(t,e));if(/^set[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=Qu(e.slice(3).toLowerCase()),s=>E(new uy(o,e,s));if(/^flip[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=Qu(e.slice(4).toLowerCase()),()=>E(new cy(E(o),e));if(e==="width"||e==="height"||e==="depth")return e==="width"?e="x":e==="height"?e="y":e==="depth"&&(e="z"),E(new Xo(o,e));if(/^\d+$/.test(e)===!0)return E(new vs(t,new pt(Number(e),"uint")));if(/^get$/.test(e)===!0)return s=>E(new ly(t,s))}}}return Reflect.get(o,e,t)},set(o,e,t,s){return typeof e=="string"&&o[e]===void 0&&(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0||e==="width"||e==="height"||e==="depth"||/^\d+$/.test(e)===!0)?(s[e].assign(t),!0):Reflect.set(o,e,t,s)}},Wi=new WeakMap,Zu=new WeakMap,dy=function(o,e=null){const t=Zt(o);if(t==="node"){let s=Wi.get(o);return s===void 0&&(s=new Proxy(o,id),Wi.set(o,s),Wi.set(s,s)),s}else{if(e===null&&(t==="float"||t==="boolean")||t&&t!=="shader"&&t!=="string")return E(jo(o,e));if(t==="shader")return N(o)}return o},hy=function(o,e=null){for(const t in o)o[t]=E(o[t],e);return o},py=function(o,e=null){const t=o.length;for(let s=0;s<t;s++)o[s]=E(o[s],e);return o},fy=function(o,e=null,t=null,s=null){const n=r=>E(s!==null?Object.assign(r,s):r);return e===null?(...r)=>n(new o(...Ts(r))):t!==null?(t=E(t),(...r)=>n(new o(e,...Ts(r),t))):(...r)=>n(new o(e,...Ts(r)))},gy=function(o,...e){return E(new o(...Ts(e)))};class my extends O{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}getMemberType(e,t){return this.getOutputNode(e).getMemberType(e,t)}call(e){const{shaderNode:t,inputNodes:s}=this,n=e.getNodeProperties(t);if(n.onceOutput)return n.onceOutput;let r=null;if(t.layout){let i=Zu.get(e.constructor);i===void 0&&(i=new WeakMap,Zu.set(e.constructor,i));let a=i.get(t);a===void 0&&(a=E(e.buildFunctionNode(t)),i.set(t,a)),e.currentFunctionNode!==null&&e.currentFunctionNode.includes.push(a),r=E(a.call(s))}else{const i=t.jsFunc,a=s!==null||i.length>1?i(s||[],e):i(e);r=E(a)}return t.once&&(n.onceOutput=r),r}getOutputNode(e){const t=e.getNodeProperties(this);return t.outputNode===null&&(t.outputNode=this.setupOutput(e)),t.outputNode}setup(e){return this.getOutputNode(e)}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){return this.getOutputNode(e).build(e,t)}}class yy extends O{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return rr(e),E(new my(this,e))}setup(){return this.call()}}const xy=[!1,!0],Ty=[0,1,2,3],_y=[-1,-2],od=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],Sa=new Map;for(const o of xy)Sa.set(o,new pt(o));const va=new Map;for(const o of Ty)va.set(o,new pt(o,"uint"));const Ra=new Map([...va].map(o=>new pt(o.value,"int")));for(const o of _y)Ra.set(o,new pt(o,"int"));const yi=new Map([...Ra].map(o=>new pt(o.value)));for(const o of od)yi.set(o,new pt(o));for(const o of od)yi.set(-o,new pt(-o));const xi={bool:Sa,uint:va,ints:Ra,float:yi},Ju=new Map([...Sa,...yi]),jo=(o,e)=>Ju.has(o)?Ju.get(o):o.isNode===!0?o:new pt(o,e),by=o=>{try{return o.getNodeType()}catch{return}},Ee=function(o,e=null){return(...t)=>{if((t.length===0||!["bool","float","int","uint"].includes(o)&&t.every(n=>typeof n!="object"))&&(t=[Zl(o,...t)]),t.length===1&&e!==null&&e.has(t[0]))return E(e.get(t[0]));if(t.length===1){const n=jo(t[0],o);return by(n)===o?E(n):E(new nd(n,o))}const s=t.map(n=>jo(n));return E(new oy(s,o))}},zn=o=>typeof o=="object"&&o!==null?o.value:o,ad=o=>o!=null?o.nodeType||o.convertTo||(typeof o=="string"?o:null):null;function En(o,e){return new Proxy(new yy(o,e),id)}const E=(o,e=null)=>dy(o,e),rr=(o,e=null)=>new hy(o,e),Ts=(o,e=null)=>new py(o,e),A=(...o)=>new fy(...o),F=(...o)=>new gy(...o),N=(o,e)=>{const t=new En(o,e),s=(...n)=>{let r;return rr(n),n[0]&&n[0].isNode?r=[...n]:r=n[0],t.call(r)};return s.shaderNode=t,s.setLayout=n=>(t.setLayout(n),s),s.once=()=>(t.once=!0,s),s},Ny=(...o)=>(console.warn("TSL.ShaderNode: tslFn() has been renamed to Fn()."),N(...o));R("toGlobal",o=>(o.global=!0,o));const Wn=o=>{en=o},Aa=()=>en,H=(...o)=>en.If(...o);function ud(o){return en&&en.add(o),o}R("append",ud);const cd=new Ee("color"),g=new Ee("float",xi.float),y=new Ee("int",xi.ints),L=new Ee("uint",xi.uint),Wt=new Ee("bool",xi.bool),w=new Ee("vec2"),Ce=new Ee("ivec2"),ld=new Ee("uvec2"),dd=new Ee("bvec2"),T=new Ee("vec3"),hd=new Ee("ivec3"),an=new Ee("uvec3"),Ea=new Ee("bvec3"),V=new Ee("vec4"),pd=new Ee("ivec4"),fd=new Ee("uvec4"),gd=new Ee("bvec4"),Ti=new Ee("mat2"),Oe=new Ee("mat3"),_s=new Ee("mat4"),Sy=(o="")=>E(new pt(o,"string")),vy=o=>E(new pt(o,"ArrayBuffer"));R("toColor",cd);R("toFloat",g);R("toInt",y);R("toUint",L);R("toBool",Wt);R("toVec2",w);R("toIVec2",Ce);R("toUVec2",ld);R("toBVec2",dd);R("toVec3",T);R("toIVec3",hd);R("toUVec3",an);R("toBVec3",Ea);R("toVec4",V);R("toIVec4",pd);R("toUVec4",fd);R("toBVec4",gd);R("toMat2",Ti);R("toMat3",Oe);R("toMat4",_s);const md=A(vs),yd=(o,e)=>E(new nd(E(o),e)),Ry=(o,e)=>E(new Xo(E(o),e));R("element",md);R("convert",yd);class ec extends Te{static get type(){return"ArrayNode"}constructor(e,t,s=null){super(e),this.count=t,this.values=s,this.isArrayNode=!0}getNodeType(e){return this.nodeType===null&&(this.nodeType=this.values[0].getNodeType(e)),this.nodeType}getElementType(e){return this.getNodeType(e)}generate(e){const t=this.getNodeType(e);return e.generateArray(t,this.count,this.values)}}const xd=(...o)=>{let e;if(o.length===1){const t=o[0];e=new ec(null,t.length,t)}else{const t=o[0],s=o[1];e=new ec(t,s)}return E(e)};R("toArray",(o,e)=>xd(Array(e).fill(o)));class Td extends O{static get type(){return"UniformGroupNode"}constructor(e,t=!1,s=1){super("string"),this.name=e,this.shared=t,this.order=s,this.isUniformGroup=!0}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const _d=o=>new Td(o),_i=(o,e=0)=>new Td(o,!0,e),bd=_i("frame"),k=_i("render"),Ca=_d("object");class ir extends Na{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=Ca}label(e){return this.name=e,this}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const s=this.getSelf();return e=e.bind(s),super.onUpdate(n=>{const r=e(n,s);r!==void 0&&(this.value=r)},t)}generate(e,t){const s=this.getNodeType(e),n=this.getUniformHash(e);let r=e.getNodeFromHash(n);r===void 0&&(e.setHashNode(this,n),r=this);const i=r.getInputType(e),a=e.getUniformFromNode(r,i,e.shaderStage,this.name||e.context.label),u=e.getPropertyName(a);return e.context.label!==void 0&&delete e.context.label,e.format(u,s,t)}}const G=(o,e)=>{const t=ad(e||o),s=o&&o.isNode===!0?o.node&&o.node.value||o.value:o;return E(new ir(s,t))};class re extends O{static get type(){return"PropertyNode"}constructor(e,t=null,s=!1){super(e),this.name=t,this.varying=s,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return this.varying===!0?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const Nd=(o,e)=>E(new re(o,e)),$n=(o,e)=>E(new re(o,e,!0)),ee=F(re,"vec4","DiffuseColor"),Ko=F(re,"vec3","EmissiveColor"),xt=F(re,"float","Roughness"),Hn=F(re,"float","Metalness"),ti=F(re,"float","Clearcoat"),qn=F(re,"float","ClearcoatRoughness"),gs=F(re,"vec3","Sheen"),bi=F(re,"float","SheenRoughness"),Ni=F(re,"float","Iridescence"),wa=F(re,"float","IridescenceIOR"),Ma=F(re,"float","IridescenceThickness"),si=F(re,"float","AlphaT"),jt=F(re,"float","Anisotropy"),Cn=F(re,"vec3","AnisotropyT"),bs=F(re,"vec3","AnisotropyB"),$e=F(re,"color","SpecularColor"),Xn=F(re,"float","SpecularF90"),ni=F(re,"float","Shininess"),jn=F(re,"vec4","Output"),zr=F(re,"float","dashSize"),Yo=F(re,"float","gapSize"),Ay=F(re,"float","pointWidth"),wn=F(re,"float","IOR"),ri=F(re,"float","Transmission"),Ba=F(re,"float","Thickness"),Fa=F(re,"float","AttenuationDistance"),Pa=F(re,"color","AttenuationColor"),Ua=F(re,"float","Dispersion");class Ey extends Te{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return t!=="void"?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(e.isAvailable("swizzleAssign")===!1&&t.isSplitNode&&t.components.length>1){const s=e.getTypeLength(t.node.getNodeType(e));return Ss.join("").slice(0,s)!==t.components}return!1}generate(e,t){const{targetNode:s,sourceNode:n}=this,r=this.needsSplitAssign(e),i=s.getNodeType(e),a=s.context({assign:!0}).build(e),u=n.build(e,i),c=n.getNodeType(e),l=e.getDataFromNode(this);let d;if(l.initialized===!0)t!=="void"&&(d=a);else if(r){const h=e.getVarFromNode(this,null,i),p=e.getPropertyName(h);e.addLineFlowCode(`${p} = ${u}`,this);const f=s.node.context({assign:!0}).build(e);for(let m=0;m<s.components.length;m++){const b=s.components[m];e.addLineFlowCode(`${f}.${b} = ${p}[ ${m} ]`,this)}t!=="void"&&(d=a)}else d=`${a} = ${u}`,(t==="void"||c==="void")&&(e.addLineFlowCode(d,this),t!=="void"&&(d=a));return l.initialized=!0,e.format(d,i,t)}}const Sd=A(Ey);R("assign",Sd);class Cy extends Te{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],s=this.functionNode,n=s.getInputs(e),r=this.parameters,i=(u,c)=>{const l=c.type,d=l==="pointer";let h;return d?h="&"+u.build(e):h=u.build(e,l),h};if(Array.isArray(r))for(let u=0;u<r.length;u++)t.push(i(r[u],n[u]));else for(const u of n){const c=r[u.name];if(c!==void 0)t.push(i(c,u));else throw new Error(`FunctionCallNode: Input '${u.name}' not found in FunctionNode.`)}return`${s.build(e,"property")}( ${t.join(", ")} )`}}const vd=(o,...e)=>(e=e.length>1||e[0]&&e[0].isNode===!0?Ts(e):rr(e[0]),E(new Cy(E(o),e)));R("call",vd);class pe extends Te{static get type(){return"OperatorNode"}constructor(e,t,s,...n){if(super(),n.length>0){let r=new pe(e,t,s);for(let i=0;i<n.length-1;i++)r=new pe(e,r,n[i]);t=r,s=n[n.length-1]}this.op=e,this.aNode=t,this.bNode=s,this.isOperatorNode=!0}getNodeType(e,t){const s=this.op,n=this.aNode,r=this.bNode,i=n.getNodeType(e),a=typeof r<"u"?r.getNodeType(e):null;if(i==="void"||a==="void")return"void";if(s==="%")return i;if(s==="~"||s==="&"||s==="|"||s==="^"||s===">>"||s==="<<")return e.getIntegerType(i);if(s==="!"||s==="=="||s==="&&"||s==="||"||s==="^^")return"bool";if(s==="<"||s===">"||s==="<="||s===">="){const u=t?e.getTypeLength(t):Math.max(e.getTypeLength(i),e.getTypeLength(a));return u>1?`bvec${u}`:"bool"}else{if(e.isMatrix(i)){if(a==="float")return i;if(e.isVector(a))return e.getVectorFromMatrix(i);if(e.isMatrix(a))return i}else if(e.isMatrix(a)){if(i==="float")return a;if(e.isVector(i))return e.getVectorFromMatrix(a)}return e.getTypeLength(a)>e.getTypeLength(i)?a:i}}generate(e,t){const s=this.op,n=this.aNode,r=this.bNode,i=this.getNodeType(e,t);let a=null,u=null;i!=="void"?(a=n.getNodeType(e),u=typeof r<"u"?r.getNodeType(e):null,s==="<"||s===">"||s==="<="||s===">="||s==="=="?e.isVector(a)?u=a:a!==u&&(a=u="float"):s===">>"||s==="<<"?(a=i,u=e.changeComponentType(u,"uint")):e.isMatrix(a)?u==="float"?u="float":e.isVector(u)?u=e.getVectorFromMatrix(a):e.isMatrix(u)||(a=u=i):e.isMatrix(u)?a==="float"?a="float":e.isVector(a)?a=e.getVectorFromMatrix(u):a=u=i:a=u=i):a=u=i;const c=n.build(e,a),l=typeof r<"u"?r.build(e,u):null,d=e.getTypeLength(t),h=e.getFunctionOperator(s);if(t!=="void")return s==="<"&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThan",t)}( ${c}, ${l} )`,i,t):e.format(`( ${c} < ${l} )`,i,t):s==="<="&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThanEqual",t)}( ${c}, ${l} )`,i,t):e.format(`( ${c} <= ${l} )`,i,t):s===">"&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThan",t)}( ${c}, ${l} )`,i,t):e.format(`( ${c} > ${l} )`,i,t):s===">="&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThanEqual",t)}( ${c}, ${l} )`,i,t):e.format(`( ${c} >= ${l} )`,i,t):s==="!"||s==="~"?e.format(`(${s}${c})`,a,t):h?e.format(`${h}( ${c}, ${l} )`,i,t):e.isMatrix(a)&&u==="float"?e.format(`( ${l} ${s} ${c} )`,i,t):a==="float"&&e.isMatrix(u)?e.format(`${c} ${s} ${l}`,i,t):e.format(`( ${c} ${s} ${l} )`,i,t);if(a!=="void")return h?e.format(`${h}( ${c}, ${l} )`,i,t):e.isMatrix(a)&&u==="float"?e.format(`${l} ${s} ${c}`,i,t):e.format(`${c} ${s} ${l}`,i,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const Ne=A(pe,"+"),K=A(pe,"-"),W=A(pe,"*"),ht=A(pe,"/"),Da=A(pe,"%"),Rd=A(pe,"=="),Ad=A(pe,"!="),Ed=A(pe,"<"),La=A(pe,">"),Cd=A(pe,"<="),wd=A(pe,">="),Md=A(pe,"&&"),Bd=A(pe,"||"),Fd=A(pe,"!"),Pd=A(pe,"^^"),Ud=A(pe,"&"),Dd=A(pe,"~"),Ld=A(pe,"|"),Id=A(pe,"^"),Vd=A(pe,"<<"),Gd=A(pe,">>");R("add",Ne);R("sub",K);R("mul",W);R("div",ht);R("modInt",Da);R("equal",Rd);R("notEqual",Ad);R("lessThan",Ed);R("greaterThan",La);R("lessThanEqual",Cd);R("greaterThanEqual",wd);R("and",Md);R("or",Bd);R("not",Fd);R("xor",Pd);R("bitAnd",Ud);R("bitNot",Dd);R("bitOr",Ld);R("bitXor",Id);R("shiftLeft",Vd);R("shiftRight",Gd);const Od=(...o)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),Da(...o));R("remainder",Od);class S extends Te{static get type(){return"MathNode"}constructor(e,t,s=null,n=null){super(),this.method=e,this.aNode=t,this.bNode=s,this.cNode=n,this.isMathNode=!0}getInputType(e){const t=this.aNode.getNodeType(e),s=this.bNode?this.bNode.getNodeType(e):null,n=this.cNode?this.cNode.getNodeType(e):null,r=e.isMatrix(t)?0:e.getTypeLength(t),i=e.isMatrix(s)?0:e.getTypeLength(s),a=e.isMatrix(n)?0:e.getTypeLength(n);return r>i&&r>a?t:i>a?s:a>r?n:t}getNodeType(e){const t=this.method;return t===S.LENGTH||t===S.DISTANCE||t===S.DOT?"float":t===S.CROSS?"vec3":t===S.ALL?"bool":t===S.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):t===S.MOD?this.aNode.getNodeType(e):this.getInputType(e)}generate(e,t){let s=this.method;const n=this.getNodeType(e),r=this.getInputType(e),i=this.aNode,a=this.bNode,u=this.cNode,c=e.renderer.coordinateSystem;if(s===S.TRANSFORM_DIRECTION){let l=i,d=a;e.isMatrix(l.getNodeType(e))?d=V(T(d),0):l=V(T(l),0);const h=W(l,d).xyz;return $t(h).build(e,t)}else{if(s===S.NEGATE)return e.format("( - "+i.build(e,r)+" )",n,t);if(s===S.ONE_MINUS)return K(1,i).build(e,t);if(s===S.RECIPROCAL)return ht(1,i).build(e,t);if(s===S.DIFFERENCE)return ae(K(i,a)).build(e,t);{const l=[];return s===S.CROSS||s===S.MOD?l.push(i.build(e,n),a.build(e,n)):c===Un&&s===S.STEP?l.push(i.build(e,e.getTypeLength(i.getNodeType(e))===1?"float":r),a.build(e,r)):c===Un&&(s===S.MIN||s===S.MAX)||s===S.MOD?l.push(i.build(e,r),a.build(e,e.getTypeLength(a.getNodeType(e))===1?"float":r)):s===S.REFRACT?l.push(i.build(e,r),a.build(e,r),u.build(e,"float")):s===S.MIX?l.push(i.build(e,r),a.build(e,r),u.build(e,e.getTypeLength(u.getNodeType(e))===1?"float":r)):(c===on&&s===S.ATAN&&a!==null&&(s="atan2"),l.push(i.build(e,r)),a!==null&&l.push(a.build(e,r)),u!==null&&l.push(u.build(e,r))),e.format(`${e.getMethod(s,n)}( ${l.join(", ")} )`,n,t)}}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}S.ALL="all";S.ANY="any";S.RADIANS="radians";S.DEGREES="degrees";S.EXP="exp";S.EXP2="exp2";S.LOG="log";S.LOG2="log2";S.SQRT="sqrt";S.INVERSE_SQRT="inversesqrt";S.FLOOR="floor";S.CEIL="ceil";S.NORMALIZE="normalize";S.FRACT="fract";S.SIN="sin";S.COS="cos";S.TAN="tan";S.ASIN="asin";S.ACOS="acos";S.ATAN="atan";S.ABS="abs";S.SIGN="sign";S.LENGTH="length";S.NEGATE="negate";S.ONE_MINUS="oneMinus";S.DFDX="dFdx";S.DFDY="dFdy";S.ROUND="round";S.RECIPROCAL="reciprocal";S.TRUNC="trunc";S.FWIDTH="fwidth";S.TRANSPOSE="transpose";S.BITCAST="bitcast";S.EQUALS="equals";S.MIN="min";S.MAX="max";S.MOD="mod";S.STEP="step";S.REFLECT="reflect";S.DISTANCE="distance";S.DIFFERENCE="difference";S.DOT="dot";S.CROSS="cross";S.POW="pow";S.TRANSFORM_DIRECTION="transformDirection";S.MIX="mix";S.CLAMP="clamp";S.REFRACT="refract";S.SMOOTHSTEP="smoothstep";S.FACEFORWARD="faceforward";const kd=g(1e-6),wy=g(1e6),ii=g(Math.PI),My=g(Math.PI*2),Ia=A(S,S.ALL),zd=A(S,S.ANY),Wd=A(S,S.RADIANS),$d=A(S,S.DEGREES),Va=A(S,S.EXP),tn=A(S,S.EXP2),Si=A(S,S.LOG),bt=A(S,S.LOG2),Ut=A(S,S.SQRT),Ga=A(S,S.INVERSE_SQRT),Nt=A(S,S.FLOOR),vi=A(S,S.CEIL),$t=A(S,S.NORMALIZE),Ht=A(S,S.FRACT),Je=A(S,S.SIN),Lt=A(S,S.COS),Hd=A(S,S.TAN),qd=A(S,S.ASIN),Xd=A(S,S.ACOS),Oa=A(S,S.ATAN),ae=A(S,S.ABS),Kn=A(S,S.SIGN),Ot=A(S,S.LENGTH),jd=A(S,S.NEGATE),Kd=A(S,S.ONE_MINUS),ka=A(S,S.DFDX),za=A(S,S.DFDY),Yd=A(S,S.ROUND),Qd=A(S,S.RECIPROCAL),Wa=A(S,S.TRUNC),Zd=A(S,S.FWIDTH),Jd=A(S,S.TRANSPOSE),By=A(S,S.BITCAST),eh=A(S,S.EQUALS),je=A(S,S.MIN),xe=A(S,S.MAX),$a=A(S,S.MOD),Ri=A(S,S.STEP),th=A(S,S.REFLECT),sh=A(S,S.DISTANCE),nh=A(S,S.DIFFERENCE),rs=A(S,S.DOT),Ai=A(S,S.CROSS),dt=A(S,S.POW),Ha=A(S,S.POW,2),rh=A(S,S.POW,3),ih=A(S,S.POW,4),oh=A(S,S.TRANSFORM_DIRECTION),ah=o=>W(Kn(o),dt(ae(o),1/3)),qa=o=>rs(o,o),se=A(S,S.MIX),Rt=(o,e=0,t=1)=>E(new S(S.CLAMP,E(o),E(e),E(t))),uh=o=>Rt(o),Xa=A(S,S.REFRACT),At=A(S,S.SMOOTHSTEP),ja=A(S,S.FACEFORWARD),ch=N(([o])=>{const s=43758.5453,n=rs(o.xy,w(12.9898,78.233)),r=$a(n,ii);return Ht(Je(r).mul(s))}),lh=(o,e,t)=>se(e,t,o),dh=(o,e,t)=>At(e,t,o),hh=(o,e)=>(console.warn('THREE.TSL: "atan2" is overloaded. Use "atan" instead.'),Oa(o,e)),Fy=ja,Py=Ga;R("all",Ia);R("any",zd);R("equals",eh);R("radians",Wd);R("degrees",$d);R("exp",Va);R("exp2",tn);R("log",Si);R("log2",bt);R("sqrt",Ut);R("inverseSqrt",Ga);R("floor",Nt);R("ceil",vi);R("normalize",$t);R("fract",Ht);R("sin",Je);R("cos",Lt);R("tan",Hd);R("asin",qd);R("acos",Xd);R("atan",Oa);R("abs",ae);R("sign",Kn);R("length",Ot);R("lengthSq",qa);R("negate",jd);R("oneMinus",Kd);R("dFdx",ka);R("dFdy",za);R("round",Yd);R("reciprocal",Qd);R("trunc",Wa);R("fwidth",Zd);R("atan2",hh);R("min",je);R("max",xe);R("mod",$a);R("step",Ri);R("reflect",th);R("distance",sh);R("dot",rs);R("cross",Ai);R("pow",dt);R("pow2",Ha);R("pow3",rh);R("pow4",ih);R("transformDirection",oh);R("mix",lh);R("clamp",Rt);R("refract",Xa);R("smoothstep",dh);R("faceForward",ja);R("difference",nh);R("saturate",uh);R("cbrt",ah);R("transpose",Jd);R("rand",ch);class Uy extends O{static get type(){return"ConditionalNode"}constructor(e,t,s=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=s}getNodeType(e){const{ifNode:t,elseNode:s}=e.getNodeProperties(this);if(t===void 0)return this.setup(e),this.getNodeType(e);const n=t.getNodeType(e);if(s!==null){const r=s.getNodeType(e);if(e.getTypeLength(r)>e.getTypeLength(n))return r}return n}setup(e){const t=this.condNode.cache(),s=this.ifNode.cache(),n=this.elseNode?this.elseNode.cache():null,r=e.context.nodeBlock;e.getDataFromNode(s).parentNodeBlock=r,n!==null&&(e.getDataFromNode(n).parentNodeBlock=r);const i=e.getNodeProperties(this);i.condNode=t,i.ifNode=s.context({nodeBlock:s}),i.elseNode=n?n.context({nodeBlock:n}):null}generate(e,t){const s=this.getNodeType(e),n=e.getDataFromNode(this);if(n.nodeProperty!==void 0)return n.nodeProperty;const{condNode:r,ifNode:i,elseNode:a}=e.getNodeProperties(this),u=t!=="void",c=u?Nd(s).build(e):"";n.nodeProperty=c;const l=r.build(e,"bool");e.addFlowCode(`
${e.tab}if ( ${l} ) {

`).addFlowTab();let d=i.build(e,s);if(d&&(u?d=c+" = "+d+";":d="return "+d+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+d+`

`+e.tab+"}"),a!==null){e.addFlowCode(` else {

`).addFlowTab();let h=a.build(e,s);h&&(u?h=c+" = "+h+";":h="return "+h+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+h+`

`+e.tab+`}

`)}else e.addFlowCode(`

`);return e.format(c,s,t)}}const Pe=A(Uy);R("select",Pe);const ph=(...o)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),Pe(...o));R("cond",ph);class fh extends O{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){this.node.build(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value});const s=this.node.build(e);return e.setContext(t),s}generate(e,t){const s=e.getContext();e.setContext({...e.context,...this.value});const n=this.node.build(e,t);return e.setContext(s),n}}const Ei=A(fh),gh=(o,e)=>Ei(o,{label:e});R("context",Ei);R("label",gh);class Wr extends O{static get type(){return"VarNode"}constructor(e,t=null,s=!1){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0,this.readOnly=s}getHash(e){return this.name||super.getHash(e)}getMemberType(e,t){return this.node.getMemberType(e,t)}getElementType(e){return this.node.getElementType(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:s,readOnly:n}=this,{renderer:r}=e,i=r.backend.isWebGPUBackend===!0;let a=!1,u=!1;n&&(a=e.isDeterministic(t),u=i?n:a);const c=e.getVectorType(this.getNodeType(e)),l=t.build(e,c),d=e.getVarFromNode(this,s,c,void 0,u),h=e.getPropertyName(d);let p=h;if(u)if(i)p=a?`const ${h}`:`let ${h}`;else{const f=e.getArrayCount(t);p=`const ${e.getVar(d.type,h,f)}`}return e.addLineFlowCode(`${p} = ${l}`,this),h}}const Ka=A(Wr),mh=(o,e=null)=>Ka(o,e).append(),yh=(o,e=null)=>Ka(o,e,!0).append();R("toVar",mh);R("toConst",yh);const xh=o=>(console.warn('TSL: "temp( node )" is deprecated. Use "Var( node )" or "node.toVar()" instead.'),Ka(o));R("temp",xh);class Dy extends O{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let s=t.varying;if(s===void 0){const n=this.name,r=this.getNodeType(e);t.varying=s=e.getVaryingFromNode(this,n,r),t.node=this.node}return s.needsInterpolation||(s.needsInterpolation=e.shaderStage==="fragment"),s}setup(e){this.setupVarying(e)}analyze(e){return this.setupVarying(e),this.node.analyze(e)}generate(e){const t=e.getNodeProperties(this),s=this.setupVarying(e),n=e.shaderStage==="fragment"&&t.reassignPosition===!0&&e.context.needsPositionReassign;if(t.propertyName===void 0||n){const r=this.getNodeType(e),i=e.getPropertyName(s,$o.VERTEX);e.flowNodeFromShaderStage($o.VERTEX,this.node,r,i),t.propertyName=i,n?t.reassignPosition=!1:t.reassignPosition===void 0&&e.context.isPositionNodeInput&&(t.reassignPosition=!0)}return e.getPropertyName(s)}}const ke=A(Dy),Th=o=>ke(o);R("toVarying",ke);R("toVertexStage",Th);R("varying",(...o)=>(console.warn("TSL.VaryingNode: .varying() has been renamed to .toVarying()."),ke(...o)));R("vertexStage",(...o)=>(console.warn("TSL.VaryingNode: .vertexStage() has been renamed to .toVertexStage()."),ke(...o)));const _h=N(([o])=>{const e=o.mul(.9478672986).add(.0521327014).pow(2.4),t=o.mul(.0773993808),s=o.lessThanEqual(.04045);return se(e,t,s)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),bh=N(([o])=>{const e=o.pow(.41666).mul(1.055).sub(.055),t=o.mul(12.92),s=o.lessThanEqual(.0031308);return se(e,t,s)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),or="WorkingColorSpace",Ya="OutputColorSpace";class ar extends Te{static get type(){return"ColorSpaceNode"}constructor(e,t,s){super("vec4"),this.colorNode=e,this.source=t,this.target=s}resolveColorSpace(e,t){return t===or?yt.workingColorSpace:t===Ya?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,s=this.resolveColorSpace(e,this.source),n=this.resolveColorSpace(e,this.target);let r=t;return yt.enabled===!1||s===n||!s||!n||(yt.getTransfer(s)===qu&&(r=V(_h(r.rgb),r.a)),yt.getPrimaries(s)!==yt.getPrimaries(n)&&(r=V(Oe(yt._getMatrix(new Zn,s,n)).mul(r.rgb),r.a)),yt.getTransfer(n)===qu&&(r=V(bh(r.rgb),r.a))),r}}const Nh=o=>E(new ar(E(o),or,Ya)),Sh=o=>E(new ar(E(o),Ya,or)),vh=(o,e)=>E(new ar(E(o),or,e)),Qa=(o,e)=>E(new ar(E(o),e,or)),Ly=(o,e,t)=>E(new ar(E(o),e,t));R("toOutputColorSpace",Nh);R("toWorkingColorSpace",Sh);R("workingToColorSpace",vh);R("colorSpaceToWorking",Qa);let Iy=class extends vs{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),s=this.referenceNode.getNodeType(),n=this.getNodeType();return e.format(t,s,n)}};class Rh extends O{static get type(){return"ReferenceBaseNode"}constructor(e,t,s=null,n=null){super(),this.property=e,this.uniformType=t,this.object=s,this.count=n,this.properties=e.split("."),this.reference=s,this.node=null,this.group=null,this.updateType=z.OBJECT}setGroup(e){return this.group=e,this}element(e){return E(new Iy(this,E(e)))}setNodeType(e){const t=G(null,e).getSelf();this.group!==null&&t.setGroup(this.group),this.node=t}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let s=e[t[0]];for(let n=1;n<t.length;n++)s=s[t[n]];return s}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const Vy=(o,e,t)=>E(new Rh(o,e,t));class Gy extends Rh{static get type(){return"RendererReferenceNode"}constructor(e,t,s=null){super(e,t,s),this.renderer=s,this.setGroup(k)}updateReference(e){return this.reference=this.renderer!==null?this.renderer:e.renderer,this.reference}}const Ah=(o,e,t=null)=>E(new Gy(o,e,t));class Oy extends Te{static get type(){return"ToneMappingNode"}constructor(e,t=Ch,s=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=s}customCacheKey(){return kn(this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,s=this.toneMapping;if(s===qs)return t;let n=null;const r=e.renderer.library.getToneMappingFunction(s);return r!==null?n=V(r(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",s),n=t),n}}const Eh=(o,e,t)=>E(new Oy(o,E(e),E(t))),Ch=Ah("toneMappingExposure","float");R("toneMapping",(o,e,t)=>Eh(e,t,o));class ky extends Na{static get type(){return"BufferAttributeNode"}constructor(e,t=null,s=0,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=s,this.bufferOffset=n,this.usage=ym,this.instanced=!1,this.attribute=null,this.global=!0,e&&e.isBufferAttribute===!0&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(this.bufferStride===0&&this.bufferOffset===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return this.bufferType===null&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(this.attribute!==null)return;const t=this.getNodeType(e),s=this.value,n=e.getTypeLength(t),r=this.bufferStride||n,i=this.bufferOffset,a=s.isInterleavedBuffer===!0?s:new xm(s,r),u=new Tm(a,n,i);a.setUsage(this.usage),this.attribute=u,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),s=e.getBufferAttributeFromNode(this,t),n=e.getPropertyName(s);let r=null;return e.shaderStage==="vertex"||e.shaderStage==="compute"?(this.name=n,r=n):r=ke(this).build(e,t),r}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const ur=(o,e=null,t=0,s=0)=>E(new ky(o,e,t,s)),wh=(o,e=null,t=0,s=0)=>ur(o,e,t,s).setUsage(Os),oi=(o,e=null,t=0,s=0)=>ur(o,e,t,s).setInstanced(!0),Qo=(o,e=null,t=0,s=0)=>wh(o,e,t,s).setInstanced(!0);R("toAttribute",o=>ur(o.value));class zy extends O{static get type(){return"ComputeNode"}constructor(e,t,s=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=s,this.dispatchCount=0,this.version=1,this.name="",this.updateBeforeType=z.OBJECT,this.onInitFunction=null,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}label(e){return this.name=e,this}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let s=t[0];for(let n=1;n<t.length;n++)s*=t[n];this.dispatchCount=Math.ceil(e/s)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if(t==="compute"){const s=this.computeNode.build(e,"void");s!==""&&e.addLineFlowCode(s,this)}}}const Mh=(o,e,t)=>E(new zy(E(o),e,t));R("compute",Mh);class Wy extends O{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){const t=e.getCache(),s=e.getCacheFromNode(this,this.parent);e.setCache(s);const n=this.node.getNodeType(e);return e.setCache(t),n}build(e,...t){const s=e.getCache(),n=e.getCacheFromNode(this,this.parent);e.setCache(n);const r=this.node.build(e,...t);return e.setCache(s),r}}const Mn=(o,e)=>E(new Wy(E(o),e));R("cache",Mn);class $y extends O{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return t!==""&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const Bh=A($y);R("bypass",Bh);class Fh extends O{static get type(){return"RemapNode"}constructor(e,t,s,n=g(0),r=g(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=s,this.outLowNode=n,this.outHighNode=r,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:s,outLowNode:n,outHighNode:r,doClamp:i}=this;let a=e.sub(t).div(s.sub(t));return i===!0&&(a=a.clamp()),a.mul(r.sub(n)).add(n)}}const Ph=A(Fh,null,null,{doClamp:!1}),Uh=A(Fh);R("remap",Ph);R("remapClamp",Uh);class $r extends O{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const s=this.getNodeType(e),n=this.snippet;if(s==="void")e.addLineFlowCode(n,this);else return e.format(`( ${n} )`,s,t)}}const ts=A($r),Dh=o=>(o?Pe(o,ts("discard")):ts("discard")).append(),Hy=()=>ts("return").append();R("discard",Dh);class qy extends Te{static get type(){return"RenderOutputNode"}constructor(e,t,s){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=s,this.isRenderOutputNode=!0}setup({context:e}){let t=this.colorNode||e.color;const s=(this.toneMapping!==null?this.toneMapping:e.toneMapping)||qs,n=(this.outputColorSpace!==null?this.outputColorSpace:e.outputColorSpace)||Vn;return s!==qs&&(t=t.toneMapping(s)),n!==Vn&&n!==yt.workingColorSpace&&(t=t.workingToColorSpace(n)),t}}const Lh=(o,e=null,t=null)=>E(new qy(E(o),e,t));R("renderOutput",Lh);function Xy(o){console.warn("THREE.TSLBase: AddNodeElement has been removed in favor of tree-shaking. Trying add",o)}class Ih extends O{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(t===null){const s=this.getAttributeName(e);if(e.hasGeometryAttribute(s)){const n=e.geometry.getAttribute(s);t=e.getTypeFromAttribute(n)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),s=this.getNodeType(e);if(e.hasGeometryAttribute(t)===!0){const r=e.geometry.getAttribute(t),i=e.getTypeFromAttribute(r),a=e.getAttribute(t,i);return e.shaderStage==="vertex"?e.format(a.name,i,s):ke(this).build(e,s)}else return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(s)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const Et=(o,e)=>E(new Ih(o,e)),de=(o=0)=>Et("uv"+(o>0?o:""),"vec2");class jy extends O{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const s=this.textureNode.build(e,"property"),n=this.levelNode===null?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${s}, ${n} )`,this.getNodeType(e),t)}}const Jt=A(jy);class Ky extends ir{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=z.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,s=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(s&&s.width!==void 0){const{width:n,height:r}=s;this.value=Math.log2(Math.max(n,r))}}}const Vh=A(Ky);class Ct extends ir{static get type(){return"TextureNode"}constructor(e,t=null,s=null,n=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=s,this.biasNode=n,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=z.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(t===null)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===Fe?"uvec4":this.value.type===ze?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return de(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return this._matrixUniform===null&&(this._matrixUniform=G(this.value.matrix)),this._matrixUniform.mul(T(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?z.RENDER:z.NONE,this}setupUV(e,t){const s=this.value;return e.isFlipY()&&(s.image instanceof ImageBitmap&&s.flipY===!0||s.isRenderTargetTexture===!0||s.isFramebufferTexture===!0||s.isDepthTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(y(Jt(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;const s=this.value;if(!s||s.isTexture!==!0)throw new Error("THREE.TSL: `texture( value )` function expects a valid instance of THREE.Texture().");let n=this.uvNode;(n===null||e.context.forceUVContext===!0)&&e.context.getUV&&(n=e.context.getUV(this)),n||(n=this.getDefaultUV()),this.updateMatrix===!0&&(n=this.getTransformedUV(n)),n=this.setupUV(e,n);let r=this.levelNode;r===null&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),t.uvNode=n,t.levelNode=r,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,this.sampler===!0?"vec2":"ivec2")}generateSnippet(e,t,s,n,r,i,a,u){const c=this.value;let l;return n?l=e.generateTextureLevel(c,t,s,n,i):r?l=e.generateTextureBias(c,t,s,r,i):u?l=e.generateTextureGrad(c,t,s,u,i):a?l=e.generateTextureCompare(c,t,s,a,i):this.sampler===!1?l=e.generateTextureLoad(c,t,s,i):l=e.generateTexture(c,t,s,i),l}generate(e,t){const s=this.value,n=e.getNodeProperties(this),r=super.generate(e,"property");if(t==="sampler")return r+"_sampler";if(e.isReference(t))return r;{const i=e.getDataFromNode(this);let a=i.propertyName;if(a===void 0){const{uvNode:l,levelNode:d,biasNode:h,compareNode:p,depthNode:f,gradNode:m}=n,b=this.generateUV(e,l),_=d?d.build(e,"float"):null,C=h?h.build(e,"float"):null,M=f?f.build(e,"int"):null,P=p?p.build(e,"float"):null,I=m?[m[0].build(e,"vec2"),m[1].build(e,"vec2")]:null,B=e.getVarFromNode(this);a=e.getPropertyName(B);const U=this.generateSnippet(e,r,b,_,C,M,P,I);e.addLineFlowCode(`${a} = ${U}`,this),i.snippet=U,i.propertyName=a}let u=a;const c=this.getNodeType(e);return e.needsToWorkingColorSpace(s)&&(u=Qa(ts(u,c),s.colorSpace).setup(e).build(e,c)),e.format(u,c,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){return console.warn("THREE.TextureNode: .uv() has been renamed. Use .sample() instead."),this.sample(e)}sample(e){const t=this.clone();return t.uvNode=E(e),t.referenceNode=this.getSelf(),E(t)}blur(e){const t=this.clone();return t.biasNode=E(e).mul(Vh(t)),t.referenceNode=this.getSelf(),E(t)}level(e){const t=this.clone();return t.levelNode=E(e),t.referenceNode=this.getSelf(),E(t)}size(e){return Jt(this,e)}bias(e){const t=this.clone();return t.biasNode=E(e),t.referenceNode=this.getSelf(),E(t)}compare(e){const t=this.clone();return t.compareNode=E(e),t.referenceNode=this.getSelf(),E(t)}grad(e,t){const s=this.clone();return s.gradNode=[E(e),E(t)],s.referenceNode=this.getSelf(),E(s)}depth(e){const t=this.clone();return t.depthNode=E(e),t.referenceNode=this.getSelf(),E(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;t!==null&&(t.value=e.matrix),e.matrixAutoUpdate===!0&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e}}const X=A(Ct),ge=(...o)=>X(...o).setSampler(!1),Yy=o=>(o.isNode===!0?o:X(o)).convert("sampler");class Za extends ir{static get type(){return"BufferNode"}constructor(e,t,s=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=s}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const cr=(o,e,t)=>E(new Za(o,e,t));class Qy extends vs{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),s=this.getNodeType(),n=this.node.getPaddedType();return e.format(t,n,s)}}class Gh extends Za{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null),this.array=e,this.elementType=t===null?Zt(e[0]):t,this.paddedType=this.getPaddedType(),this.updateType=z.RENDER,this.isArrayBufferNode=!0}getNodeType(){return this.paddedType}getElementType(){return this.elementType}getPaddedType(){const e=this.elementType;let t="vec4";return e==="mat2"?t="mat2":/mat/.test(e)===!0?t="mat4":e.charAt(0)==="i"?t="ivec4":e.charAt(0)==="u"&&(t="uvec4"),t}update(){const{array:e,value:t}=this,s=this.elementType;if(s==="float"||s==="int"||s==="uint")for(let n=0;n<e.length;n++){const r=n*4;t[r]=e[n]}else if(s==="color")for(let n=0;n<e.length;n++){const r=n*4,i=e[n];t[r]=i.r,t[r+1]=i.g,t[r+2]=i.b||0}else if(s==="mat2")for(let n=0;n<e.length;n++){const r=n*4,i=e[n];t[r]=i.elements[0],t[r+1]=i.elements[1],t[r+2]=i.elements[2],t[r+3]=i.elements[3]}else if(s==="mat3")for(let n=0;n<e.length;n++){const r=n*16,i=e[n];t[r]=i.elements[0],t[r+1]=i.elements[1],t[r+2]=i.elements[2],t[r+4]=i.elements[3],t[r+5]=i.elements[4],t[r+6]=i.elements[5],t[r+8]=i.elements[6],t[r+9]=i.elements[7],t[r+10]=i.elements[8],t[r+15]=1}else if(s==="mat4")for(let n=0;n<e.length;n++){const r=n*16,i=e[n];for(let a=0;a<i.elements.length;a++)t[r+a]=i.elements[a]}else for(let n=0;n<e.length;n++){const r=n*4,i=e[n];t[r]=i.x,t[r+1]=i.y,t[r+2]=i.z||0,t[r+3]=i.w||0}}setup(e){const t=this.array.length,s=this.elementType;let n=Float32Array;const r=this.paddedType,i=e.getTypeLength(r);return s.charAt(0)==="i"&&(n=Int32Array),s.charAt(0)==="u"&&(n=Uint32Array),this.value=new n(t*i),this.bufferCount=t,this.bufferType=r,super.setup(e)}element(e){return E(new Qy(this,E(e)))}}const lt=(o,e)=>E(new Gh(o,e)),Zy=(o,e)=>(console.warn("TSL.UniformArrayNode: uniforms() has been renamed to uniformArray()."),E(new Gh(o,e))),Ja=G(0,"uint").setGroup(_i("cameraIndex")).toVarying("v_cameraIndex"),Kt=G("float").label("cameraNear").setGroup(k).onRenderUpdate(({camera:o})=>o.near),Yt=G("float").label("cameraFar").setGroup(k).onRenderUpdate(({camera:o})=>o.far),Rs=N(({camera:o})=>{let e;if(o.isArrayCamera&&o.cameras.length>0){const t=[];for(const n of o.cameras)t.push(n.projectionMatrix);e=lt(t).setGroup(k).label("cameraProjectionMatrices").element(Ja).toVar("cameraProjectionMatrix")}else e=G("mat4").label("cameraProjectionMatrix").setGroup(k).onRenderUpdate(({camera:t})=>t.projectionMatrix);return e}).once()(),Jy=G("mat4").label("cameraProjectionMatrixInverse").setGroup(k).onRenderUpdate(({camera:o})=>o.projectionMatrixInverse),Ye=N(({camera:o})=>{let e;if(o.isArrayCamera&&o.cameras.length>0){const t=[];for(const n of o.cameras)t.push(n.matrixWorldInverse);e=lt(t).setGroup(k).label("cameraViewMatrices").element(Ja).toVar("cameraViewMatrix")}else e=G("mat4").label("cameraViewMatrix").setGroup(k).onRenderUpdate(({camera:t})=>t.matrixWorldInverse);return e}).once()(),ex=G("mat4").label("cameraWorldMatrix").setGroup(k).onRenderUpdate(({camera:o})=>o.matrixWorld),tx=G("mat3").label("cameraNormalMatrix").setGroup(k).onRenderUpdate(({camera:o})=>o.normalMatrix),Oh=G(new j).label("cameraPosition").setGroup(k).onRenderUpdate(({camera:o},e)=>e.value.setFromMatrixPosition(o.matrixWorld));class J extends O{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=z.OBJECT,this._uniformNode=new ir(null)}getNodeType(){const e=this.scope;if(e===J.WORLD_MATRIX)return"mat4";if(e===J.POSITION||e===J.VIEW_POSITION||e===J.DIRECTION||e===J.SCALE)return"vec3"}update(e){const t=this.object3d,s=this._uniformNode,n=this.scope;if(n===J.WORLD_MATRIX)s.value=t.matrixWorld;else if(n===J.POSITION)s.value=s.value||new j,s.value.setFromMatrixPosition(t.matrixWorld);else if(n===J.SCALE)s.value=s.value||new j,s.value.setFromMatrixScale(t.matrixWorld);else if(n===J.DIRECTION)s.value=s.value||new j,t.getWorldDirection(s.value);else if(n===J.VIEW_POSITION){const r=e.camera;s.value=s.value||new j,s.value.setFromMatrixPosition(t.matrixWorld),s.value.applyMatrix4(r.matrixWorldInverse)}}generate(e){const t=this.scope;return t===J.WORLD_MATRIX?this._uniformNode.nodeType="mat4":(t===J.POSITION||t===J.VIEW_POSITION||t===J.DIRECTION||t===J.SCALE)&&(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}J.WORLD_MATRIX="worldMatrix";J.POSITION="position";J.SCALE="scale";J.VIEW_POSITION="viewPosition";J.DIRECTION="direction";const sx=A(J,J.DIRECTION),nx=A(J,J.WORLD_MATRIX),kh=A(J,J.POSITION),rx=A(J,J.SCALE),ix=A(J,J.VIEW_POSITION);class wt extends J{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}const ox=F(wt,wt.DIRECTION),rt=F(wt,wt.WORLD_MATRIX),ax=F(wt,wt.POSITION),ux=F(wt,wt.SCALE),cx=F(wt,wt.VIEW_POSITION),zh=G(new Zn).onObjectUpdate(({object:o},e)=>e.value.getNormalMatrix(o.matrixWorld)),lx=G(new Ie).onObjectUpdate(({object:o},e)=>e.value.copy(o.matrixWorld).invert()),As=N(o=>o.renderer.nodes.modelViewMatrix||Wh).once()().toVar("modelViewMatrix"),Wh=Ye.mul(rt),dx=N(o=>(o.context.isHighPrecisionModelViewMatrix=!0,G("mat4").onObjectUpdate(({object:e,camera:t})=>e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld)))).once()().toVar("highpModelViewMatrix"),hx=N(o=>{const e=o.context.isHighPrecisionModelViewMatrix;return G("mat3").onObjectUpdate(({object:t,camera:s})=>(e!==!0&&t.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix)))}).once()().toVar("highpModelNormalViewMatrix"),lr=Et("position","vec3"),fe=lr.toVarying("positionLocal"),ai=lr.toVarying("positionPrevious"),kt=rt.mul(fe).xyz.toVarying("v_positionWorld").context({needsPositionReassign:!0}),eu=fe.transformDirection(rt).toVarying("v_positionWorldDirection").normalize().toVar("positionWorldDirection").context({needsPositionReassign:!0}),ye=N(o=>o.context.setupPositionView(),"vec3").once()().toVarying("v_positionView").context({needsPositionReassign:!0}),ue=ye.negate().toVarying("v_positionViewDirection").normalize().toVar("positionViewDirection");class px extends O{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){const{renderer:t,material:s}=e;return t.coordinateSystem===Un&&s.side===vt?"false":e.getFrontFacing()}}const $h=F(px),dr=g($h).mul(2).sub(1),Ci=Et("normal","vec3"),Ke=N(o=>o.geometry.hasAttribute("normal")===!1?(console.warn('TSL.NormalNode: Vertex attribute "normal" not found on geometry.'),T(0,1,0)):Ci,"vec3").once()().toVar("normalLocal"),Hh=ye.dFdx().cross(ye.dFdy()).normalize().toVar("normalFlat"),at=N(o=>{let e;return o.material.flatShading===!0?e=Hh:e=ke(tu(Ke),"v_normalView").normalize(),e},"vec3").once()().toVar("normalView"),wi=ke(at.transformDirection(Ye),"v_normalWorld").normalize().toVar("normalWorld"),me=N(o=>o.context.setupNormal().context({getUV:null}),"vec3").once()().mul(dr).toVar("transformedNormalView"),Mi=me.transformDirection(Ye).toVar("transformedNormalWorld"),Ws=N(o=>o.context.setupClearcoatNormal().context({getUV:null}),"vec3").once()().mul(dr).toVar("transformedClearcoatNormalView"),qh=N(([o,e=rt])=>{const t=Oe(e),s=o.div(T(t[0].dot(t[0]),t[1].dot(t[1]),t[2].dot(t[2])));return t.mul(s).xyz}),tu=N(([o],e)=>{const t=e.renderer.nodes.modelNormalViewMatrix;if(t!==null)return t.transformDirection(o);const s=zh.mul(o);return Ye.transformDirection(s)}),Xh=G(0).onReference(({material:o})=>o).onRenderUpdate(({material:o})=>o.refractionRatio),jh=ue.negate().reflect(me),Kh=ue.negate().refract(me,Xh),Yh=jh.transformDirection(Ye).toVar("reflectVector"),Qh=Kh.transformDirection(Ye).toVar("reflectVector");class fx extends Ct{static get type(){return"CubeTextureNode"}constructor(e,t=null,s=null,n=null){super(e,t,s,n),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===Zs?Yh:e.mapping===Js?Qh:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),T(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const s=this.value;return e.renderer.coordinateSystem===on||!s.isRenderTargetTexture?T(t.x.negate(),t.yz):t}generateUV(e,t){return t.build(e,"vec3")}}const sn=A(fx);class gx extends vs{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),s=this.referenceNode.getNodeType(),n=this.getNodeType();return e.format(t,s,n)}}class Bi extends O{static get type(){return"ReferenceNode"}constructor(e,t,s=null,n=null){super(),this.property=e,this.uniformType=t,this.object=s,this.count=n,this.properties=e.split("."),this.reference=s,this.node=null,this.group=null,this.name=null,this.updateType=z.OBJECT}element(e){return E(new gx(this,E(e)))}setGroup(e){return this.group=e,this}label(e){return this.name=e,this}setNodeType(e){let t=null;this.count!==null?t=cr(null,e,this.count):Array.isArray(this.getValueFromReference())?t=lt(null,e):e==="texture"?t=X(null):e==="cubeTexture"?t=sn(null):t=G(null,e),this.group!==null&&t.setGroup(this.group),this.name!==null&&t.label(this.name),this.node=t.getSelf()}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let s=e[t[0]];for(let n=1;n<t.length;n++)s=s[t[n]];return s}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const ie=(o,e,t)=>E(new Bi(o,e,t)),Zo=(o,e,t,s)=>E(new Bi(o,e,s,t));class mx extends Bi{static get type(){return"MaterialReferenceNode"}constructor(e,t,s=null){super(e,t,s),this.material=s,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=this.material!==null?this.material:e.material,this.reference}}const Gt=(o,e,t=null)=>E(new mx(o,e,t)),Fi=N(o=>(o.geometry.hasAttribute("tangent")===!1&&o.geometry.computeTangents(),Et("tangent","vec4")))(),hr=Fi.xyz.toVar("tangentLocal"),pr=As.mul(V(hr,0)).xyz.toVarying("v_tangentView").normalize().toVar("tangentView"),Zh=pr.transformDirection(Ye).toVarying("v_tangentWorld").normalize().toVar("tangentWorld"),su=pr.toVar("transformedTangentView"),yx=su.transformDirection(Ye).normalize().toVar("transformedTangentWorld"),fr=o=>o.mul(Fi.w).xyz,xx=ke(fr(Ci.cross(Fi)),"v_bitangentGeometry").normalize().toVar("bitangentGeometry"),Tx=ke(fr(Ke.cross(hr)),"v_bitangentLocal").normalize().toVar("bitangentLocal"),Jh=ke(fr(at.cross(pr)),"v_bitangentView").normalize().toVar("bitangentView"),_x=ke(fr(wi.cross(Zh)),"v_bitangentWorld").normalize().toVar("bitangentWorld"),ep=fr(me.cross(su)).normalize().toVar("transformedBitangentView"),bx=ep.transformDirection(Ye).normalize().toVar("transformedBitangentWorld"),ms=Oe(pr,Jh,at),tp=ue.mul(ms),Nx=(o,e)=>o.sub(tp.mul(e)),sp=(()=>{let o=bs.cross(ue);return o=o.cross(bs).normalize(),o=se(o,me,jt.mul(xt.oneMinus()).oneMinus().pow2().pow2()).normalize(),o})(),Sx=N(o=>{const{eye_pos:e,surf_norm:t,mapN:s,uv:n}=o,r=e.dFdx(),i=e.dFdy(),a=n.dFdx(),u=n.dFdy(),c=t,l=i.cross(c),d=c.cross(r),h=l.mul(a.x).add(d.mul(u.x)),p=l.mul(a.y).add(d.mul(u.y)),f=h.dot(h).max(p.dot(p)),m=dr.mul(f.inverseSqrt());return Ne(h.mul(s.x,m),p.mul(s.y,m),c.mul(s.z)).normalize()});class vx extends Te{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=Xu}setup(e){const{normalMapType:t,scaleNode:s}=this;let n=this.node.mul(2).sub(1);s!==null&&(n=T(n.xy.mul(s),n.z));let r=null;return t===mm?r=tu(n):t===Xu&&(e.hasGeometryAttribute("tangent")===!0?r=ms.mul(n).normalize():r=Sx({eye_pos:ye,surf_norm:at,mapN:n,uv:de()})),r}}const Jo=A(vx),Rx=N(({textureNode:o,bumpScale:e})=>{const t=n=>o.cache().context({getUV:r=>n(r.uvNode||de()),forceUVContext:!0}),s=g(t(n=>n));return w(g(t(n=>n.add(n.dFdx()))).sub(s),g(t(n=>n.add(n.dFdy()))).sub(s)).mul(e)}),Ax=N(o=>{const{surf_pos:e,surf_norm:t,dHdxy:s}=o,n=e.dFdx().normalize(),r=e.dFdy().normalize(),i=t,a=r.cross(i),u=i.cross(n),c=n.dot(a).mul(dr),l=c.sign().mul(s.x.mul(a).add(s.y.mul(u)));return c.abs().mul(t).sub(l).normalize()});class Ex extends Te{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=this.scaleNode!==null?this.scaleNode:1,t=Rx({textureNode:this.textureNode,bumpScale:e});return Ax({surf_pos:ye,surf_norm:at,dHdxy:t})}}const np=A(Ex),tc=new Map;class v extends O{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let s=tc.get(e);return s===void 0&&(s=Gt(e,t),tc.set(e,s)),s}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e==="map"?"map":e+"Map","texture")}setup(e){const t=e.context.material,s=this.scope;let n=null;if(s===v.COLOR){const r=t.color!==void 0?this.getColor(s):T();t.map&&t.map.isTexture===!0?n=r.mul(this.getTexture("map")):n=r}else if(s===v.OPACITY){const r=this.getFloat(s);t.alphaMap&&t.alphaMap.isTexture===!0?n=r.mul(this.getTexture("alpha")):n=r}else if(s===v.SPECULAR_STRENGTH)t.specularMap&&t.specularMap.isTexture===!0?n=this.getTexture("specular").r:n=g(1);else if(s===v.SPECULAR_INTENSITY){const r=this.getFloat(s);t.specularIntensityMap&&t.specularIntensityMap.isTexture===!0?n=r.mul(this.getTexture(s).a):n=r}else if(s===v.SPECULAR_COLOR){const r=this.getColor(s);t.specularColorMap&&t.specularColorMap.isTexture===!0?n=r.mul(this.getTexture(s).rgb):n=r}else if(s===v.ROUGHNESS){const r=this.getFloat(s);t.roughnessMap&&t.roughnessMap.isTexture===!0?n=r.mul(this.getTexture(s).g):n=r}else if(s===v.METALNESS){const r=this.getFloat(s);t.metalnessMap&&t.metalnessMap.isTexture===!0?n=r.mul(this.getTexture(s).b):n=r}else if(s===v.EMISSIVE){const r=this.getFloat("emissiveIntensity"),i=this.getColor(s).mul(r);t.emissiveMap&&t.emissiveMap.isTexture===!0?n=i.mul(this.getTexture(s)):n=i}else if(s===v.NORMAL)t.normalMap?(n=Jo(this.getTexture("normal"),this.getCache("normalScale","vec2")),n.normalMapType=t.normalMapType):t.bumpMap?n=np(this.getTexture("bump").r,this.getFloat("bumpScale")):n=at;else if(s===v.CLEARCOAT){const r=this.getFloat(s);t.clearcoatMap&&t.clearcoatMap.isTexture===!0?n=r.mul(this.getTexture(s).r):n=r}else if(s===v.CLEARCOAT_ROUGHNESS){const r=this.getFloat(s);t.clearcoatRoughnessMap&&t.clearcoatRoughnessMap.isTexture===!0?n=r.mul(this.getTexture(s).r):n=r}else if(s===v.CLEARCOAT_NORMAL)t.clearcoatNormalMap?n=Jo(this.getTexture(s),this.getCache(s+"Scale","vec2")):n=at;else if(s===v.SHEEN){const r=this.getColor("sheenColor").mul(this.getFloat("sheen"));t.sheenColorMap&&t.sheenColorMap.isTexture===!0?n=r.mul(this.getTexture("sheenColor").rgb):n=r}else if(s===v.SHEEN_ROUGHNESS){const r=this.getFloat(s);t.sheenRoughnessMap&&t.sheenRoughnessMap.isTexture===!0?n=r.mul(this.getTexture(s).a):n=r,n=n.clamp(.07,1)}else if(s===v.ANISOTROPY)if(t.anisotropyMap&&t.anisotropyMap.isTexture===!0){const r=this.getTexture(s);n=Ti(Vs.x,Vs.y,Vs.y.negate(),Vs.x).mul(r.rg.mul(2).sub(w(1)).normalize().mul(r.b))}else n=Vs;else if(s===v.IRIDESCENCE_THICKNESS){const r=ie("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const i=ie("0","float",t.iridescenceThicknessRange);n=r.sub(i).mul(this.getTexture(s).g).add(i)}else n=r}else if(s===v.TRANSMISSION){const r=this.getFloat(s);t.transmissionMap?n=r.mul(this.getTexture(s).r):n=r}else if(s===v.THICKNESS){const r=this.getFloat(s);t.thicknessMap?n=r.mul(this.getTexture(s).g):n=r}else if(s===v.IOR)n=this.getFloat(s);else if(s===v.LIGHT_MAP)n=this.getTexture(s).rgb.mul(this.getFloat("lightMapIntensity"));else if(s===v.AO)n=this.getTexture(s).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const r=this.getNodeType(e);n=this.getCache(s,r)}return n}}v.ALPHA_TEST="alphaTest";v.COLOR="color";v.OPACITY="opacity";v.SHININESS="shininess";v.SPECULAR="specular";v.SPECULAR_STRENGTH="specularStrength";v.SPECULAR_INTENSITY="specularIntensity";v.SPECULAR_COLOR="specularColor";v.REFLECTIVITY="reflectivity";v.ROUGHNESS="roughness";v.METALNESS="metalness";v.NORMAL="normal";v.CLEARCOAT="clearcoat";v.CLEARCOAT_ROUGHNESS="clearcoatRoughness";v.CLEARCOAT_NORMAL="clearcoatNormal";v.EMISSIVE="emissive";v.ROTATION="rotation";v.SHEEN="sheen";v.SHEEN_ROUGHNESS="sheenRoughness";v.ANISOTROPY="anisotropy";v.IRIDESCENCE="iridescence";v.IRIDESCENCE_IOR="iridescenceIOR";v.IRIDESCENCE_THICKNESS="iridescenceThickness";v.IOR="ior";v.TRANSMISSION="transmission";v.THICKNESS="thickness";v.ATTENUATION_DISTANCE="attenuationDistance";v.ATTENUATION_COLOR="attenuationColor";v.LINE_SCALE="scale";v.LINE_DASH_SIZE="dashSize";v.LINE_GAP_SIZE="gapSize";v.LINE_WIDTH="linewidth";v.LINE_DASH_OFFSET="dashOffset";v.POINT_SIZE="size";v.DISPERSION="dispersion";v.LIGHT_MAP="light";v.AO="ao";const rp=F(v,v.ALPHA_TEST),ip=F(v,v.COLOR),op=F(v,v.SHININESS),ap=F(v,v.EMISSIVE),nu=F(v,v.OPACITY),up=F(v,v.SPECULAR),ea=F(v,v.SPECULAR_INTENSITY),cp=F(v,v.SPECULAR_COLOR),Bn=F(v,v.SPECULAR_STRENGTH),Hr=F(v,v.REFLECTIVITY),lp=F(v,v.ROUGHNESS),dp=F(v,v.METALNESS),hp=F(v,v.NORMAL),pp=F(v,v.CLEARCOAT),fp=F(v,v.CLEARCOAT_ROUGHNESS),gp=F(v,v.CLEARCOAT_NORMAL),mp=F(v,v.ROTATION),yp=F(v,v.SHEEN),xp=F(v,v.SHEEN_ROUGHNESS),Tp=F(v,v.ANISOTROPY),_p=F(v,v.IRIDESCENCE),bp=F(v,v.IRIDESCENCE_IOR),Np=F(v,v.IRIDESCENCE_THICKNESS),Sp=F(v,v.TRANSMISSION),vp=F(v,v.THICKNESS),Rp=F(v,v.IOR),Ap=F(v,v.ATTENUATION_DISTANCE),Ep=F(v,v.ATTENUATION_COLOR),Cp=F(v,v.LINE_SCALE),wp=F(v,v.LINE_DASH_SIZE),Mp=F(v,v.LINE_GAP_SIZE),Cx=F(v,v.LINE_WIDTH),Bp=F(v,v.LINE_DASH_OFFSET),Fp=F(v,v.POINT_SIZE),Pp=F(v,v.DISPERSION),ru=F(v,v.LIGHT_MAP),Up=F(v,v.AO),Vs=G(new We).onReference(function(o){return o.material}).onRenderUpdate(function({material:o}){this.value.set(o.anisotropy*Math.cos(o.anisotropyRotation),o.anisotropy*Math.sin(o.anisotropyRotation))}),iu=N(o=>o.context.setupModelViewProjection(),"vec4").once()().toVarying("v_modelViewProjection");class ce extends O{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isIndexNode=!0}generate(e){const t=this.getNodeType(e),s=this.scope;let n;if(s===ce.VERTEX)n=e.getVertexIndex();else if(s===ce.INSTANCE)n=e.getInstanceIndex();else if(s===ce.DRAW)n=e.getDrawIndex();else if(s===ce.INVOCATION_LOCAL)n=e.getInvocationLocalIndex();else if(s===ce.INVOCATION_SUBGROUP)n=e.getInvocationSubgroupIndex();else if(s===ce.SUBGROUP)n=e.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+s);let r;return e.shaderStage==="vertex"||e.shaderStage==="compute"?r=n:r=ke(this).build(e,t),r}}ce.VERTEX="vertex";ce.INSTANCE="instance";ce.SUBGROUP="subgroup";ce.INVOCATION_LOCAL="invocationLocal";ce.INVOCATION_SUBGROUP="invocationSubgroup";ce.DRAW="draw";const Dp=F(ce,ce.VERTEX),gr=F(ce,ce.INSTANCE),wx=F(ce,ce.SUBGROUP),Mx=F(ce,ce.INVOCATION_SUBGROUP),Bx=F(ce,ce.INVOCATION_LOCAL),Lp=F(ce,ce.DRAW);class Ip extends O{static get type(){return"InstanceNode"}constructor(e,t,s){super("void"),this.count=e,this.instanceMatrix=t,this.instanceColor=s,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=z.FRAME,this.buffer=null,this.bufferColor=null}setup(e){const{count:t,instanceMatrix:s,instanceColor:n}=this;let{instanceMatrixNode:r,instanceColorNode:i}=this;if(r===null){if(t<=1e3)r=cr(s.array,"mat4",Math.max(t,1)).element(gr);else{const u=new _m(s.array,16,1);this.buffer=u;const c=s.usage===Os?Qo:oi,l=[c(u,"vec4",16,0),c(u,"vec4",16,4),c(u,"vec4",16,8),c(u,"vec4",16,12)];r=_s(...l)}this.instanceMatrixNode=r}if(n&&i===null){const u=new da(n.array,3),c=n.usage===Os?Qo:oi;this.bufferColor=u,i=T(c(u,"vec3",3,0)),this.instanceColorNode=i}const a=r.mul(fe).xyz;if(fe.assign(a),e.hasGeometryAttribute("normal")){const u=qh(Ke,r);Ke.assign(u)}this.instanceColorNode!==null&&$n("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMatrix.usage!==Os&&this.buffer!==null&&this.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMatrix.version),this.instanceColor&&this.instanceColor.usage!==Os&&this.bufferColor!==null&&this.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceColor.version)}}const Fx=A(Ip);class Px extends Ip{static get type(){return"InstancedMeshNode"}constructor(e){const{count:t,instanceMatrix:s,instanceColor:n}=e;super(t,s,n),this.instancedMesh=e}}const Vp=A(Px);class Ux extends O{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){this.batchingIdNode===null&&(e.getDrawIndex()===null?this.batchingIdNode=gr:this.batchingIdNode=Lp);const s=N(([f])=>{const m=y(Jt(ge(this.batchMesh._indirectTexture),0)),b=y(f).modInt(m),_=y(f).div(m);return ge(this.batchMesh._indirectTexture,Ce(b,_)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(y(this.batchingIdNode)),n=this.batchMesh._matricesTexture,r=Jt(ge(n),0),i=g(s).mul(4).toInt().toVar(),a=i.modInt(r),u=i.div(y(r)),c=_s(ge(n,Ce(a,u)),ge(n,Ce(a.add(1),u)),ge(n,Ce(a.add(2),u)),ge(n,Ce(a.add(3),u))),l=this.batchMesh._colorsTexture;if(l!==null){const m=N(([b])=>{const _=Jt(ge(l),0).x,C=b,M=C.modInt(_),P=C.div(_);return ge(l,Ce(M,P)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(s);$n("vec3","vBatchColor").assign(m)}const d=Oe(c);fe.assign(c.mul(fe));const h=Ke.div(T(d[0].dot(d[0]),d[1].dot(d[1]),d[2].dot(d[2]))),p=d.mul(h).xyz;Ke.assign(p),e.hasGeometryAttribute("tangent")&&hr.mulAssign(d)}}const Gp=A(Ux),sc=new WeakMap;class Op extends O{static get type(){return"SkinningNode"}constructor(e,t=!1){super("void"),this.skinnedMesh=e,this.useReference=t,this.updateType=z.OBJECT,this.skinIndexNode=Et("skinIndex","uvec4"),this.skinWeightNode=Et("skinWeight","vec4");let s,n,r;t?(s=ie("bindMatrix","mat4"),n=ie("bindMatrixInverse","mat4"),r=Zo("skeleton.boneMatrices","mat4",e.skeleton.bones.length)):(s=G(e.bindMatrix,"mat4"),n=G(e.bindMatrixInverse,"mat4"),r=cr(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)),this.bindMatrixNode=s,this.bindMatrixInverseNode=n,this.boneMatricesNode=r,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=fe){const{skinIndexNode:s,skinWeightNode:n,bindMatrixNode:r,bindMatrixInverseNode:i}=this,a=e.element(s.x),u=e.element(s.y),c=e.element(s.z),l=e.element(s.w),d=r.mul(t),h=Ne(a.mul(n.x).mul(d),u.mul(n.y).mul(d),c.mul(n.z).mul(d),l.mul(n.w).mul(d));return i.mul(h).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=Ke){const{skinIndexNode:s,skinWeightNode:n,bindMatrixNode:r,bindMatrixInverseNode:i}=this,a=e.element(s.x),u=e.element(s.y),c=e.element(s.z),l=e.element(s.w);let d=Ne(n.x.mul(a),n.y.mul(u),n.z.mul(c),n.w.mul(l));return d=i.mul(d).mul(r),d.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return this.previousBoneMatricesNode===null&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=Zo("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,ai)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")||Jl(e.object).useVelocity===!0}setup(e){this.needsPreviousBoneMatrices(e)&&ai.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(fe.assign(t),e.hasGeometryAttribute("normal")){const s=this.getSkinnedNormal();Ke.assign(s),e.hasGeometryAttribute("tangent")&&hr.assign(s)}}generate(e,t){if(t!=="void")return fe.build(e,t)}update(e){const s=(this.useReference?e.object:this.skinnedMesh).skeleton;sc.get(s)!==e.frameId&&(sc.set(s,e.frameId),this.previousBoneMatricesNode!==null&&s.previousBoneMatrices.set(s.boneMatrices),s.update())}}const Dx=o=>E(new Op(o)),kp=o=>E(new Op(o,!0));class Lx extends O{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode(105+e)}getProperties(e){const t=e.getNodeProperties(this);if(t.stackNode!==void 0)return t;const s={};for(let r=0,i=this.params.length-1;r<i;r++){const a=this.params[r],u=a.isNode!==!0&&a.name||this.getVarName(r),c=a.isNode!==!0&&a.type||"int";s[u]=ts(u,c)}const n=e.addStack();return t.returnsNode=this.params[this.params.length-1](s,n,e),t.stackNode=n,e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),s=this.params,n=t.stackNode;for(let a=0,u=s.length-1;a<u;a++){const c=s[a];let l=null,d=null,h=null,p=null,f=null,m=null;c.isNode?(p="int",h=this.getVarName(a),l="0",d=c.build(e,p),f="<"):(p=c.type||"int",h=c.name||this.getVarName(a),l=c.start,d=c.end,f=c.condition,m=c.update,typeof l=="number"?l=e.generateConst(p,l):l&&l.isNode&&(l=l.build(e,p)),typeof d=="number"?d=e.generateConst(p,d):d&&d.isNode&&(d=d.build(e,p)),l!==void 0&&d===void 0?(l=l+" - 1",d="0",f=">="):d!==void 0&&l===void 0&&(l="0",f="<"),f===void 0&&(Number(l)>Number(d)?f=">=":f="<"));const b={start:l,end:d},_=b.start,C=b.end;let M="",P="",I="";m||(p==="int"||p==="uint"?f.includes("<")?m="++":m="--":f.includes("<")?m="+= 1.":m="-= 1."),M+=e.getVar(p,h)+" = "+_,P+=h+" "+f+" "+C,I+=h+" "+m;const B=`for ( ${M}; ${P}; ${I} )`;e.addFlowCode((a===0?`
`:"")+e.tab+B+` {

`).addFlowTab()}const r=n.build(e,"void"),i=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode(`
`+e.tab+r);for(let a=0,u=this.params.length-1;a<u;a++)e.addFlowCode((a===0?"":e.tab)+`}

`).removeFlowTab();return e.addFlowTab(),i}}const ne=(...o)=>E(new Lx(Ts(o,"int"))).append(),Ix=()=>ts("continue").append(),zp=()=>ts("break").append(),Vx=(...o)=>(console.warn("TSL.LoopNode: loop() has been renamed to Loop()."),ne(...o)),$i=new WeakMap,Qe=new he,nc=N(({bufferMap:o,influence:e,stride:t,width:s,depth:n,offset:r})=>{const i=y(Dp).mul(t).add(r),a=i.div(s),u=i.sub(a.mul(s));return ge(o,Ce(u,a)).depth(n).mul(e)});function Gx(o){const e=o.morphAttributes.position!==void 0,t=o.morphAttributes.normal!==void 0,s=o.morphAttributes.color!==void 0,n=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,r=n!==void 0?n.length:0;let i=$i.get(o);if(i===void 0||i.count!==r){let _=function(){m.dispose(),$i.delete(o),o.removeEventListener("dispose",_)};i!==void 0&&i.texture.dispose();const a=o.morphAttributes.position||[],u=o.morphAttributes.normal||[],c=o.morphAttributes.color||[];let l=0;e===!0&&(l=1),t===!0&&(l=2),s===!0&&(l=3);let d=o.attributes.position.count*l,h=1;const p=4096;d>p&&(h=Math.ceil(d/p),d=p);const f=new Float32Array(d*h*4*r),m=new Qm(f,d,h,r);m.type=nt,m.needsUpdate=!0;const b=l*4;for(let C=0;C<r;C++){const M=a[C],P=u[C],I=c[C],B=d*h*4*C;for(let U=0;U<M.count;U++){const D=U*b;e===!0&&(Qe.fromBufferAttribute(M,U),f[B+D+0]=Qe.x,f[B+D+1]=Qe.y,f[B+D+2]=Qe.z,f[B+D+3]=0),t===!0&&(Qe.fromBufferAttribute(P,U),f[B+D+4]=Qe.x,f[B+D+5]=Qe.y,f[B+D+6]=Qe.z,f[B+D+7]=0),s===!0&&(Qe.fromBufferAttribute(I,U),f[B+D+8]=Qe.x,f[B+D+9]=Qe.y,f[B+D+10]=Qe.z,f[B+D+11]=I.itemSize===4?Qe.w:1)}}i={count:r,texture:m,stride:l,size:new We(d,h)},$i.set(o,i),o.addEventListener("dispose",_)}return i}class Ox extends O{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=G(1),this.updateType=z.OBJECT}setup(e){const{geometry:t}=e,s=t.morphAttributes.position!==void 0,n=t.hasAttribute("normal")&&t.morphAttributes.normal!==void 0,r=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,i=r!==void 0?r.length:0,{texture:a,stride:u,size:c}=Gx(t);s===!0&&fe.mulAssign(this.morphBaseInfluence),n===!0&&Ke.mulAssign(this.morphBaseInfluence);const l=y(c.width);ne(i,({i:d})=>{const h=g(0).toVar();this.mesh.count>1&&this.mesh.morphTexture!==null&&this.mesh.morphTexture!==void 0?h.assign(ge(this.mesh.morphTexture,Ce(y(d).add(1),y(gr))).r):h.assign(ie("morphTargetInfluences","float").element(d).toVar()),s===!0&&fe.addAssign(nc({bufferMap:a,influence:h,stride:u,width:l,depth:d,offset:y(0)})),n===!0&&Ke.addAssign(nc({bufferMap:a,influence:h,stride:u,width:l,depth:d,offset:y(1)}))})}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((t,s)=>t+s,0)}}const Wp=A(Ox);class un extends O{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}}class kx extends un{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class zx extends fh{static get type(){return"LightingContextNode"}constructor(e,t=null,s=null,n=null){super(e),this.lightingModel=t,this.backdropNode=s,this.backdropAlphaNode=n,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,s=T().toVar("directDiffuse"),n=T().toVar("directSpecular"),r=T().toVar("indirectDiffuse"),i=T().toVar("indirectSpecular"),a={directDiffuse:s,directSpecular:n,indirectDiffuse:r,indirectSpecular:i};return{radiance:T().toVar("radiance"),irradiance:T().toVar("irradiance"),iblIrradiance:T().toVar("iblIrradiance"),ambientOcclusion:g(1).toVar("ambientOcclusion"),reflectedLight:a,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const $p=A(zx);class Wx extends un{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}let ln,dn;class Ae extends O{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===Ae.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=z.NONE;return(this.scope===Ae.SIZE||this.scope===Ae.VIEWPORT)&&(e=z.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===Ae.VIEWPORT?t!==null?dn.copy(t.viewport):(e.getViewport(dn),dn.multiplyScalar(e.getPixelRatio())):t!==null?(ln.width=t.width,ln.height=t.height):e.getDrawingBufferSize(ln)}setup(){const e=this.scope;let t=null;return e===Ae.SIZE?t=G(ln||(ln=new We)):e===Ae.VIEWPORT?t=G(dn||(dn=new he)):t=w(mr.div(Yn)),t}generate(e){if(this.scope===Ae.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const s=e.getNodeProperties(Yn).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${s}.y - ${t}.y )`}return t}return super.generate(e)}}Ae.COORDINATE="coordinate";Ae.VIEWPORT="viewport";Ae.SIZE="size";Ae.UV="uv";const Mt=F(Ae,Ae.UV),Yn=F(Ae,Ae.SIZE),mr=F(Ae,Ae.COORDINATE),Ks=F(Ae,Ae.VIEWPORT),Hp=Ks.zw,qp=mr.sub(Ks.xy),$x=qp.div(Hp),Hx=N(()=>(console.warn('TSL.ViewportNode: "viewportResolution" is deprecated. Use "screenSize" instead.'),Yn),"vec2").once()(),qx=N(()=>(console.warn('TSL.ViewportNode: "viewportTopLeft" is deprecated. Use "screenUV" instead.'),Mt),"vec2").once()(),Xx=N(()=>(console.warn('TSL.ViewportNode: "viewportBottomLeft" is deprecated. Use "screenUV.flipY()" instead.'),Mt.flipY()),"vec2").once()(),hn=new We;class Pi extends Ct{static get type(){return"ViewportTextureNode"}constructor(e=Mt,t=null,s=null){s===null&&(s=new kl,s.minFilter=xs),super(s,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=z.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(hn);const s=this.value;(s.image.width!==hn.width||s.image.height!==hn.height)&&(s.image.width=hn.width,s.image.height=hn.height,s.needsUpdate=!0);const n=s.generateMipmaps;s.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(s),s.generateMipmaps=n}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const jx=A(Pi),ou=A(Pi,null,null,{generateMipmaps:!0});let Hi=null;class Kx extends Pi{static get type(){return"ViewportDepthTextureNode"}constructor(e=Mt,t=null){Hi===null&&(Hi=new ns),super(e,t,Hi)}}const au=A(Kx);class qe extends O{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===qe.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,s=this.valueNode;let n=null;if(t===qe.DEPTH_BASE)s!==null&&(n=jp().assign(s));else if(t===qe.DEPTH)e.isPerspectiveCamera?n=Xp(ye.z,Kt,Yt):n=Ys(ye.z,Kt,Yt);else if(t===qe.LINEAR_DEPTH)if(s!==null)if(e.isPerspectiveCamera){const r=uu(s,Kt,Yt);n=Ys(r,Kt,Yt)}else n=s;else n=Ys(ye.z,Kt,Yt);return n}}qe.DEPTH_BASE="depthBase";qe.DEPTH="depth";qe.LINEAR_DEPTH="linearDepth";const Ys=(o,e,t)=>o.add(e).div(e.sub(t)),Yx=(o,e,t)=>e.sub(t).mul(o).sub(e),Xp=(o,e,t)=>e.add(o).mul(t).div(t.sub(e).mul(o)),uu=(o,e,t)=>e.mul(t).div(t.sub(e).mul(o).sub(t)),cu=(o,e,t)=>{e=e.max(1e-6).toVar();const s=bt(o.negate().div(e)),n=bt(t.div(e));return s.div(n)},Qx=(o,e,t)=>{const s=o.mul(Si(t.div(e)));return g(Math.E).pow(s).mul(e).negate()},jp=A(qe,qe.DEPTH_BASE),lu=F(qe,qe.DEPTH),ui=A(qe,qe.LINEAR_DEPTH),Zx=ui(au());lu.assign=o=>jp(o);class Jx extends O{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}}const eT=A(Jx);class ot extends O{static get type(){return"ClippingNode"}constructor(e=ot.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{intersectionPlanes:s,unionPlanes:n}=t;return this.hardwareClipping=e.material.hardwareClipping,this.scope===ot.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(s,n):this.scope===ot.HARDWARE?this.setupHardwareClipping(n,e):this.setupDefault(s,n)}setupAlphaToCoverage(e,t){return N(()=>{const s=g().toVar("distanceToPlane"),n=g().toVar("distanceToGradient"),r=g(1).toVar("clipOpacity"),i=t.length;if(this.hardwareClipping===!1&&i>0){const u=lt(t);ne(i,({i:c})=>{const l=u.element(c);s.assign(ye.dot(l.xyz).negate().add(l.w)),n.assign(s.fwidth().div(2)),r.mulAssign(At(n.negate(),n,s))})}const a=e.length;if(a>0){const u=lt(e),c=g(1).toVar("intersectionClipOpacity");ne(a,({i:l})=>{const d=u.element(l);s.assign(ye.dot(d.xyz).negate().add(d.w)),n.assign(s.fwidth().div(2)),c.mulAssign(At(n.negate(),n,s).oneMinus())}),r.mulAssign(c.oneMinus())}ee.a.mulAssign(r),ee.a.equal(0).discard()})()}setupDefault(e,t){return N(()=>{const s=t.length;if(this.hardwareClipping===!1&&s>0){const r=lt(t);ne(s,({i})=>{const a=r.element(i);ye.dot(a.xyz).greaterThan(a.w).discard()})}const n=e.length;if(n>0){const r=lt(e),i=Wt(!0).toVar("clipped");ne(n,({i:a})=>{const u=r.element(a);i.assign(ye.dot(u.xyz).greaterThan(u.w).and(i))}),i.discard()}})()}setupHardwareClipping(e,t){const s=e.length;return t.enableHardwareClipping(s),N(()=>{const n=lt(e),r=eT(t.getClipDistance());ne(s,({i})=>{const a=n.element(i),u=ye.dot(a.xyz).sub(a.w).negate();r.element(i).assign(u)})})()}}ot.ALPHA_TO_COVERAGE="alphaToCoverage";ot.DEFAULT="default";ot.HARDWARE="hardware";const tT=()=>E(new ot),sT=()=>E(new ot(ot.ALPHA_TO_COVERAGE)),nT=()=>E(new ot(ot.HARDWARE)),rT=.05,rc=N(([o])=>Ht(W(1e4,Je(W(17,o.x).add(W(.1,o.y)))).mul(Ne(.1,ae(Je(W(13,o.y).add(o.x))))))),ic=N(([o])=>rc(w(rc(o.xy),o.z))),iT=N(([o])=>{const e=xe(Ot(ka(o.xyz)),Ot(za(o.xyz))),t=g(1).div(g(rT).mul(e)).toVar("pixScale"),s=w(tn(Nt(bt(t))),tn(vi(bt(t)))),n=w(ic(Nt(s.x.mul(o.xyz))),ic(Nt(s.y.mul(o.xyz)))),r=Ht(bt(t)),i=Ne(W(r.oneMinus(),n.x),W(r,n.y)),a=je(r,r.oneMinus()),u=T(i.mul(i).div(W(2,a).mul(K(1,a))),i.sub(W(.5,a)).div(K(1,a)),K(1,K(1,i).mul(K(1,i)).div(W(2,a).mul(K(1,a))))),c=i.lessThan(a.oneMinus()).select(i.lessThan(a).select(u.x,u.y),u.z);return Rt(c,1e-6,1)}).setLayout({name:"getAlphaHashThreshold",type:"float",inputs:[{name:"position",type:"vec3"}]});class Se extends Iu{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.shadowPositionNode=null,this.receivedShadowNode=null,this.castShadowNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+Yl(this)}build(e){this.setup(e)}setupObserver(e){return new sy(e)}setup(e){e.context.setupNormal=()=>this.setupNormal(e),e.context.setupPositionView=()=>this.setupPositionView(e),e.context.setupModelViewProjection=()=>this.setupModelViewProjection(e);const t=e.renderer,s=t.getRenderTarget();e.addStack();const n=this.vertexNode||this.setupVertex(e);e.stack.outputNode=n,this.setupHardwareClipping(e),this.geometryNode!==null&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();let r;const i=this.setupClipping(e);if((this.depthWrite===!0||this.depthTest===!0)&&(s!==null?s.depthBuffer===!0&&this.setupDepth(e):t.depth===!0&&this.setupDepth(e)),this.fragmentNode===null){this.setupDiffuseColor(e),this.setupVariants(e);const a=this.setupLighting(e);i!==null&&e.stack.add(i);const u=V(a,ee.a).max(0);if(r=this.setupOutput(e,u),jn.assign(r),this.outputNode!==null&&(r=this.outputNode),s!==null){const c=t.getMRT(),l=this.mrtNode;c!==null?(r=c,l!==null&&(r=c.merge(l))):l!==null&&(r=l)}}else{let a=this.fragmentNode;a.isOutputStructNode!==!0&&(a=V(a)),r=this.setupOutput(e,a)}e.stack.outputNode=r,e.addFlow("fragment",e.removeStack()),e.observer=this.setupObserver(e)}setupClipping(e){if(e.clippingContext===null)return null;const{unionPlanes:t,intersectionPlanes:s}=e.clippingContext;let n=null;if(t.length>0||s.length>0){const r=e.renderer.samples;this.alphaToCoverage&&r>1?n=sT():e.stack.add(tT())}return n}setupHardwareClipping(e){if(this.hardwareClipping=!1,e.clippingContext===null)return;const t=e.clippingContext.unionPlanes.length;t>0&&t<=8&&e.isAvailable("clipDistance")&&(e.stack.add(nT()),this.hardwareClipping=!0)}setupDepth(e){const{renderer:t,camera:s}=e;let n=this.depthNode;if(n===null){const r=t.getMRT();r&&r.has("depth")?n=r.get("depth"):t.logarithmicDepthBuffer===!0&&(s.isPerspectiveCamera?n=cu(ye.z,Kt,Yt):n=Ys(ye.z,Kt,Yt))}n!==null&&lu.assign(n).append()}setupPositionView(){return As.mul(fe).xyz}setupModelViewProjection(){return Rs.mul(ye)}setupVertex(e){return e.addStack(),this.setupPosition(e),e.context.vertex=e.removeStack(),iu}setupPosition(e){const{object:t,geometry:s}=e;if((s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color)&&Wp(t).append(),t.isSkinnedMesh===!0&&kp(t).append(),this.displacementMap){const n=Gt("displacementMap","texture"),r=Gt("displacementScale","float"),i=Gt("displacementBias","float");fe.addAssign(Ke.normalize().mul(n.x.mul(r).add(i)))}return t.isBatchedMesh&&Gp(t).append(),t.isInstancedMesh&&t.instanceMatrix&&t.instanceMatrix.isInstancedBufferAttribute===!0&&Vp(t).append(),this.positionNode!==null&&fe.assign(this.positionNode.context({isPositionNodeInput:!0})),fe}setupDiffuseColor({object:e,geometry:t}){let s=this.colorNode?V(this.colorNode):ip;this.vertexColors===!0&&t.hasAttribute("color")&&(s=V(s.xyz.mul(Et("color","vec3")),s.a)),e.instanceColor&&(s=$n("vec3","vInstanceColor").mul(s)),e.isBatchedMesh&&e._colorsTexture&&(s=$n("vec3","vBatchColor").mul(s)),ee.assign(s);const n=this.opacityNode?g(this.opacityNode):nu;if(ee.a.assign(ee.a.mul(n)),this.alphaTestNode!==null||this.alphaTest>0){const r=this.alphaTestNode!==null?g(this.alphaTestNode):rp;ee.a.lessThanEqual(r).discard()}this.alphaHash===!0&&ee.a.lessThan(iT(fe)).discard(),this.transparent===!1&&this.blending===js&&this.alphaToCoverage===!1&&ee.a.assign(1)}setupVariants(){}setupOutgoingLight(){return this.lights===!0?T(0):ee.rgb}setupNormal(){return this.normalNode?T(this.normalNode):hp}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?Gt("envMap","cubeTexture"):Gt("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new Wx(ru)),t}setupLights(e){const t=[],s=this.setupEnvironment(e);s&&s.isLightingNode&&t.push(s);const n=this.setupLightMap(e);if(n&&n.isLightingNode&&t.push(n),this.aoNode!==null||e.material.aoMap){const i=this.aoNode!==null?this.aoNode:Up;t.push(new kx(i))}let r=this.lightsNode||e.lightsNode;return t.length>0&&(r=e.renderer.lighting.createNode([...r.getLights(),...t])),r}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:s,backdropAlphaNode:n,emissiveNode:r}=this,a=this.lights===!0||this.lightsNode!==null?this.setupLights(e):null;let u=this.setupOutgoingLight(e);if(a&&a.getScope().hasLights){const c=this.setupLightingModel(e);u=$p(a,c,s,n)}else s!==null&&(u=T(n!==null?se(u,s,n):s));return(r&&r.isNode===!0||t.emissive&&t.emissive.isColor===!0)&&(Ko.assign(T(r||ap)),u=u.add(Ko)),u}setupOutput(e,t){if(this.fog===!0){const s=e.fogNode;s&&(jn.assign(t),t=V(s))}return t}setDefaultValues(e){for(const s in e){const n=e[s];this[s]===void 0&&(this[s]=n,n&&n.clone&&(this[s]=n.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const s in t)Object.getOwnPropertyDescriptor(this.constructor.prototype,s)===void 0&&t[s].get!==void 0&&Object.defineProperty(this.constructor.prototype,s,t[s])}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{},nodes:{}});const s=Iu.prototype.toJSON.call(this,e),n=Jr(this);s.inputNodes={};for(const{property:i,childNode:a}of n)s.inputNodes[i]=a.toJSON(e).uuid;function r(i){const a=[];for(const u in i){const c=i[u];delete c.metadata,a.push(c)}return a}if(t){const i=r(e.textures),a=r(e.images),u=r(e.nodes);i.length>0&&(s.textures=i),a.length>0&&(s.images=a),u.length>0&&(s.nodes=u)}return s}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.shadowPositionNode=e.shadowPositionNode,this.receivedShadowNode=e.receivedShadowNode,this.castShadowNode=e.castShadowNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const oT=new dm;class aT extends Se{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.setDefaultValues(oT),this.setValues(e)}}const uT=new hm;class cT extends Se{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.setDefaultValues(uT),this.dashOffset=0,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode?g(this.offsetNode):Bp,t=this.dashScaleNode?g(this.dashScaleNode):Cp,s=this.dashSizeNode?g(this.dashSizeNode):wp,n=this.gapSizeNode?g(this.gapSizeNode):Mp;zr.assign(s),Yo.assign(n);const r=ke(Et("lineDistance").mul(t));(e?r.add(e):r).mod(zr.add(Yo)).greaterThan(zr).discard()}}let qi=null;class lT extends Pi{static get type(){return"ViewportSharedTextureNode"}constructor(e=Mt,t=null){qi===null&&(qi=new kl),super(e,t,qi)}updateReference(){return this}}const dT=A(lT),Kp=o=>E(o).mul(.5).add(.5),hT=o=>E(o).mul(2).sub(1),pT=new cm;class fT extends Se{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(pT),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?g(this.opacityNode):nu;ee.assign(V(Kp(me),e))}}class gT extends Te{static get type(){return"EquirectUVNode"}constructor(e=eu){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan(e.x).mul(1/(Math.PI*2)).add(.5),s=e.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return w(t,s)}}const du=A(gT);class Yp extends Zm{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const s=t.minFilter,n=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const r=new jl(5,5,5),i=du(eu),a=new Se;a.colorNode=X(t,i,0),a.side=vt,a.blending=In;const u=new Qs(r,a),c=new ha;c.add(u),t.minFilter===xs&&(t.minFilter=zt);const l=new Jm(1,10,this),d=e.getMRT();return e.setMRT(null),l.update(e,c),e.setMRT(d),t.minFilter=s,t.currentGenerateMipmaps=n,u.geometry.dispose(),u.material.dispose(),this}}const Fn=new WeakMap;class mT extends Te{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=sn();const t=new ql;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=z.RENDER}updateBefore(e){const{renderer:t,material:s}=e,n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const r=n.isTextureNode?n.value:s[n.property];if(r&&r.isTexture){const i=r.mapping;if(i===sr||i===nr){if(Fn.has(r)){const a=Fn.get(r);oc(a,r.mapping),this._cubeTexture=a}else{const a=r.image;if(yT(a)){const u=new Yp(a.height);u.fromEquirectangularTexture(t,r),oc(u.texture,r.mapping),this._cubeTexture=u.texture,Fn.set(r,u.texture),r.addEventListener("dispose",Qp)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function yT(o){return o==null?!1:o.height>0}function Qp(o){const e=o.target;e.removeEventListener("dispose",Qp);const t=Fn.get(e);t!==void 0&&(Fn.delete(e),t.dispose())}function oc(o,e){e===sr?o.mapping=Zs:e===nr&&(o.mapping=Js)}const Zp=A(mT);class hu extends un{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=Zp(this.envNode)}}class xT extends un{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=g(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class Ui{start(){}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class Jp extends Ui{constructor(){super()}indirect(e,t,s){const n=e.ambientOcclusion,r=e.reflectedLight,i=s.context.irradianceLightMap;r.indirectDiffuse.assign(V(0)),i?r.indirectDiffuse.addAssign(i):r.indirectDiffuse.addAssign(V(1,1,1,0)),r.indirectDiffuse.mulAssign(n),r.indirectDiffuse.mulAssign(ee.rgb)}finish(e,t,s){const n=s.material,r=e.outgoingLight,i=s.context.environment;if(i)switch(n.combine){case jm:r.rgb.assign(se(r.rgb,r.rgb.mul(i.rgb),Bn.mul(Hr)));break;case Xm:r.rgb.assign(se(r.rgb,i.rgb,Bn.mul(Hr)));break;case qm:r.rgb.addAssign(i.rgb.mul(Bn.mul(Hr)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",n.combine);break}}}const TT=new Ol;class _T extends Se{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(TT),this.setValues(e)}setupNormal(){return at}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new hu(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new xT(ru)),t}setupOutgoingLight(){return ee.rgb}setupLightingModel(){return new Jp}}const nn=N(({f0:o,f90:e,dotVH:t})=>{const s=t.mul(-5.55473).sub(6.98316).mul(t).exp2();return o.mul(s.oneMinus()).add(e.mul(s))}),Ns=N(o=>o.diffuseColor.mul(1/Math.PI)),bT=()=>g(.25),NT=N(({dotNH:o})=>ni.mul(g(.5)).add(1).mul(g(1/Math.PI)).mul(o.pow(ni))),ST=N(({lightDirection:o})=>{const e=o.add(ue).normalize(),t=me.dot(e).clamp(),s=ue.dot(e).clamp(),n=nn({f0:$e,f90:1,dotVH:s}),r=bT(),i=NT({dotNH:t});return n.mul(r).mul(i)});class ef extends Jp{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=me.dot(e).clamp().mul(t);s.directDiffuse.addAssign(r.mul(Ns({diffuseColor:ee.rgb}))),this.specular===!0&&s.directSpecular.addAssign(r.mul(ST({lightDirection:e})).mul(Bn))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:s}){s.indirectDiffuse.addAssign(t.mul(Ns({diffuseColor:ee}))),s.indirectDiffuse.mulAssign(e)}}const vT=new um;class RT extends Se{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(vT),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new hu(t):null}setupLightingModel(){return new ef(!1)}}const AT=new rm;class ET extends Se{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(AT),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new hu(t):null}setupLightingModel(){return new ef}setupVariants(){const e=(this.shininessNode?g(this.shininessNode):op).max(1e-4);ni.assign(e);const t=this.specularNode||up;$e.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const tf=N(o=>{if(o.geometry.hasAttribute("normal")===!1)return g(0);const e=at.dFdx().abs().max(at.dFdy().abs());return e.x.max(e.y).max(e.z)}),pu=N(o=>{const{roughness:e}=o,t=tf();let s=e.max(.0525);return s=s.add(t),s=s.min(1),s}),sf=N(({alpha:o,dotNL:e,dotNV:t})=>{const s=o.pow2(),n=e.mul(s.add(s.oneMinus().mul(t.pow2())).sqrt()),r=t.mul(s.add(s.oneMinus().mul(e.pow2())).sqrt());return ht(.5,n.add(r).max(kd))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),CT=N(({alphaT:o,alphaB:e,dotTV:t,dotBV:s,dotTL:n,dotBL:r,dotNV:i,dotNL:a})=>{const u=a.mul(T(o.mul(t),e.mul(s),i).length()),c=i.mul(T(o.mul(n),e.mul(r),a).length());return ht(.5,u.add(c)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),nf=N(({alpha:o,dotNH:e})=>{const t=o.pow2(),s=e.pow2().mul(t.oneMinus()).oneMinus();return t.div(s.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),wT=g(1/Math.PI),MT=N(({alphaT:o,alphaB:e,dotNH:t,dotTH:s,dotBH:n})=>{const r=o.mul(e),i=T(e.mul(s),o.mul(n),r.mul(t)),a=i.dot(i),u=r.div(a);return wT.mul(r.mul(u.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),ta=N(o=>{const{lightDirection:e,f0:t,f90:s,roughness:n,f:r,USE_IRIDESCENCE:i,USE_ANISOTROPY:a}=o,u=o.normalView||me,c=n.pow2(),l=e.add(ue).normalize(),d=u.dot(e).clamp(),h=u.dot(ue).clamp(),p=u.dot(l).clamp(),f=ue.dot(l).clamp();let m=nn({f0:t,f90:s,dotVH:f}),b,_;if(zn(i)&&(m=Ni.mix(m,r)),zn(a)){const C=Cn.dot(e),M=Cn.dot(ue),P=Cn.dot(l),I=bs.dot(e),B=bs.dot(ue),U=bs.dot(l);b=CT({alphaT:si,alphaB:c,dotTV:M,dotBV:B,dotTL:C,dotBL:I,dotNV:h,dotNL:d}),_=MT({alphaT:si,alphaB:c,dotNH:p,dotTH:P,dotBH:U})}else b=sf({alpha:c,dotNL:d,dotNV:h}),_=nf({alpha:c,dotNH:p});return m.mul(b).mul(_)}),fu=N(({roughness:o,dotNV:e})=>{const t=V(-1,-.0275,-.572,.022),s=V(1,.0425,1.04,-.04),n=o.mul(t).add(s),r=n.x.mul(n.x).min(e.mul(-9.28).exp2()).mul(n.x).add(n.y);return w(-1.04,1.04).mul(r).add(n.zw)}).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),rf=N(o=>{const{dotNV:e,specularColor:t,specularF90:s,roughness:n}=o,r=fu({dotNV:e,roughness:n});return t.mul(r.x).add(s.mul(r.y))}),of=N(({f:o,f90:e,dotVH:t})=>{const s=t.oneMinus().saturate(),n=s.mul(s),r=s.mul(n,n).clamp(0,.9999);return o.sub(T(e).mul(r)).div(r.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),BT=N(({roughness:o,dotNH:e})=>{const t=o.pow2(),s=g(1).div(t),r=e.pow2().oneMinus().max(.0078125);return g(2).add(s).mul(r.pow(s.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),FT=N(({dotNV:o,dotNL:e})=>g(1).div(g(4).mul(e.add(o).sub(e.mul(o))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),PT=N(({lightDirection:o})=>{const e=o.add(ue).normalize(),t=me.dot(o).clamp(),s=me.dot(ue).clamp(),n=me.dot(e).clamp(),r=BT({roughness:bi,dotNH:n}),i=FT({dotNV:s,dotNL:t});return gs.mul(r).mul(i)}),UT=N(({N:o,V:e,roughness:t})=>{const r=.0078125,i=o.dot(e).saturate(),a=w(t,i.oneMinus().sqrt());return a.assign(a.mul(.984375).add(r)),a}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),DT=N(({f:o})=>{const e=o.length();return xe(e.mul(e).add(o.z).div(e.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),br=N(({v1:o,v2:e})=>{const t=o.dot(e),s=t.abs().toVar(),n=s.mul(.0145206).add(.4965155).mul(s).add(.8543985).toVar(),r=s.add(4.1616724).mul(s).add(3.417594).toVar(),i=n.div(r),a=t.greaterThan(0).select(i,xe(t.mul(t).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(i));return o.cross(e).mul(a)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),ac=N(({N:o,V:e,P:t,mInv:s,p0:n,p1:r,p2:i,p3:a})=>{const u=r.sub(n).toVar(),c=a.sub(n).toVar(),l=u.cross(c),d=T().toVar();return H(l.dot(t.sub(n)).greaterThanEqual(0),()=>{const h=e.sub(o.mul(e.dot(o))).normalize(),p=o.cross(h).negate(),f=s.mul(Oe(h,p,o).transpose()).toVar(),m=f.mul(n.sub(t)).normalize().toVar(),b=f.mul(r.sub(t)).normalize().toVar(),_=f.mul(i.sub(t)).normalize().toVar(),C=f.mul(a.sub(t)).normalize().toVar(),M=T(0).toVar();M.addAssign(br({v1:m,v2:b})),M.addAssign(br({v1:b,v2:_})),M.addAssign(br({v1:_,v2:C})),M.addAssign(br({v1:C,v2:m})),d.assign(T(DT({f:M})))}),d}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),Di=1/6,af=o=>W(Di,W(o,W(o,o.negate().add(3)).sub(3)).add(1)),sa=o=>W(Di,W(o,W(o,W(3,o).sub(6))).add(4)),uf=o=>W(Di,W(o,W(o,W(-3,o).add(3)).add(3)).add(1)),na=o=>W(Di,dt(o,3)),uc=o=>af(o).add(sa(o)),cc=o=>uf(o).add(na(o)),lc=o=>Ne(-1,sa(o).div(af(o).add(sa(o)))),dc=o=>Ne(1,na(o).div(uf(o).add(na(o)))),hc=(o,e,t)=>{const s=o.uvNode,n=W(s,e.zw).add(.5),r=Nt(n),i=Ht(n),a=uc(i.x),u=cc(i.x),c=lc(i.x),l=dc(i.x),d=lc(i.y),h=dc(i.y),p=w(r.x.add(c),r.y.add(d)).sub(.5).mul(e.xy),f=w(r.x.add(l),r.y.add(d)).sub(.5).mul(e.xy),m=w(r.x.add(c),r.y.add(h)).sub(.5).mul(e.xy),b=w(r.x.add(l),r.y.add(h)).sub(.5).mul(e.xy),_=uc(i.y).mul(Ne(a.mul(o.sample(p).level(t)),u.mul(o.sample(f).level(t)))),C=cc(i.y).mul(Ne(a.mul(o.sample(m).level(t)),u.mul(o.sample(b).level(t))));return _.add(C)},cf=N(([o,e=g(3)])=>{const t=w(o.size(y(e))),s=w(o.size(y(e.add(1)))),n=ht(1,t),r=ht(1,s),i=hc(o,V(n,t),Nt(e)),a=hc(o,V(r,s),vi(e));return Ht(e).mix(i,a)}),pc=N(([o,e,t,s,n])=>{const r=T(Xa(e.negate(),$t(o),ht(1,s))),i=T(Ot(n[0].xyz),Ot(n[1].xyz),Ot(n[2].xyz));return $t(r).mul(t.mul(i))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),LT=N(([o,e])=>o.mul(Rt(e.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),IT=ou(),VT=ou(),fc=N(([o,e,t],{material:s})=>{const r=(s.side===vt?IT:VT).sample(o),i=bt(Yn.x).mul(LT(e,t));return cf(r,i)}),gc=N(([o,e,t])=>(H(t.notEqual(0),()=>{const s=Si(e).negate().div(t);return Va(s.negate().mul(o))}),T(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),GT=N(([o,e,t,s,n,r,i,a,u,c,l,d,h,p,f])=>{let m,b;if(f){m=V().toVar(),b=T().toVar();const I=l.sub(1).mul(f.mul(.025)),B=T(l.sub(I),l,l.add(I));ne({start:0,end:3},({i:U})=>{const D=B.element(U),Y=pc(o,e,d,D,a),Q=i.add(Y),Z=c.mul(u.mul(V(Q,1))),te=w(Z.xy.div(Z.w)).toVar();te.addAssign(1),te.divAssign(2),te.assign(w(te.x,te.y.oneMinus()));const ve=fc(te,t,D);m.element(U).assign(ve.element(U)),m.a.addAssign(ve.a),b.element(U).assign(s.element(U).mul(gc(Ot(Y),h,p).element(U)))}),m.a.divAssign(3)}else{const I=pc(o,e,d,l,a),B=i.add(I),U=c.mul(u.mul(V(B,1))),D=w(U.xy.div(U.w)).toVar();D.addAssign(1),D.divAssign(2),D.assign(w(D.x,D.y.oneMinus())),m=fc(D,t,l),b=s.mul(gc(Ot(I),h,p))}const _=b.rgb.mul(m.rgb),C=o.dot(e).clamp(),M=T(rf({dotNV:C,specularColor:n,specularF90:r,roughness:t})),P=b.r.add(b.g,b.b).div(3);return V(M.oneMinus().mul(_),m.a.oneMinus().mul(P).oneMinus())}),OT=Oe(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),kT=o=>{const e=o.sqrt();return T(1).add(e).div(T(1).sub(e))},mc=(o,e)=>o.sub(e).div(o.add(e)).pow2(),zT=(o,e)=>{const t=o.mul(2*Math.PI*1e-9),s=T(54856e-17,44201e-17,52481e-17),n=T(1681e3,1795300,2208400),r=T(43278e5,93046e5,66121e5),i=g(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(t.mul(2239900).add(e.x).cos()).mul(t.pow2().mul(-45282e5).exp());let a=s.mul(r.mul(2*Math.PI).sqrt()).mul(n.mul(t).add(e).cos()).mul(t.pow2().negate().mul(r).exp());return a=T(a.x.add(i),a.y,a.z).div(10685e-11),OT.mul(a)},WT=N(({outsideIOR:o,eta2:e,cosTheta1:t,thinFilmThickness:s,baseF0:n})=>{const r=se(o,e,At(0,.03,s)),a=o.div(r).pow2().mul(t.pow2().oneMinus()).oneMinus();H(a.lessThan(0),()=>T(1));const u=a.sqrt(),c=mc(r,o),l=nn({f0:c,f90:1,dotVH:t}),d=l.oneMinus(),h=r.lessThan(o).select(Math.PI,0),p=g(Math.PI).sub(h),f=kT(n.clamp(0,.9999)),m=mc(f,r.toVec3()),b=nn({f0:m,f90:1,dotVH:u}),_=T(f.x.lessThan(r).select(Math.PI,0),f.y.lessThan(r).select(Math.PI,0),f.z.lessThan(r).select(Math.PI,0)),C=r.mul(s,u,2),M=T(p).add(_),P=l.mul(b).clamp(1e-5,.9999),I=P.sqrt(),B=d.pow2().mul(b).div(T(1).sub(P)),D=l.add(B).toVar(),Y=B.sub(d).toVar();return ne({start:1,end:2,condition:"<=",name:"m"},({m:Q})=>{Y.mulAssign(I);const Z=zT(g(Q).mul(C),g(Q).mul(M)).mul(2);D.addAssign(Y.mul(Z))}),D.max(T(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),$T=N(({normal:o,viewDir:e,roughness:t})=>{const s=o.dot(e).saturate(),n=t.pow2(),r=Pe(t.lessThan(.25),g(-339.2).mul(n).add(g(161.4).mul(t)).sub(25.9),g(-8.48).mul(n).add(g(14.3).mul(t)).sub(9.95)),i=Pe(t.lessThan(.25),g(44).mul(n).sub(g(23.7).mul(t)).add(3.26),g(1.97).mul(n).sub(g(3.27).mul(t)).add(.72));return Pe(t.lessThan(.25),0,g(.1).mul(t).sub(.025)).add(r.mul(s).add(i).exp()).mul(1/Math.PI).saturate()}),Xi=T(.04),ji=g(1);class lf extends Ui{constructor(e=!1,t=!1,s=!1,n=!1,r=!1,i=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=s,this.anisotropy=n,this.transmission=r,this.dispersion=i,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(this.clearcoat===!0&&(this.clearcoatRadiance=T().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=T().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=T().toVar("clearcoatSpecularIndirect")),this.sheen===!0&&(this.sheenSpecularDirect=T().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=T().toVar("sheenSpecularIndirect")),this.iridescence===!0){const t=me.dot(ue).clamp();this.iridescenceFresnel=WT({outsideIOR:g(1),eta2:wa,cosTheta1:t,thinFilmThickness:Ma,baseF0:$e}),this.iridescenceF0=of({f:this.iridescenceFresnel,f90:1,dotVH:t})}if(this.transmission===!0){const t=kt,s=Oh.sub(kt).normalize(),n=Mi;e.backdrop=GT(n,s,xt,ee,$e,Xn,t,rt,Ye,Rs,wn,Ba,Pa,Fa,this.dispersion?Ua:null),e.backdropAlpha=ri,ee.a.mulAssign(se(1,e.backdrop.a,ri))}}computeMultiscattering(e,t,s){const n=me.dot(ue).clamp(),r=fu({roughness:xt,dotNV:n}),a=(this.iridescenceF0?Ni.mix($e,this.iridescenceF0):$e).mul(r.x).add(s.mul(r.y)),c=r.x.add(r.y).oneMinus(),l=$e.add($e.oneMinus().mul(.047619)),d=a.mul(l).div(c.mul(l).oneMinus());e.addAssign(a),t.addAssign(d.mul(c))}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=me.dot(e).clamp().mul(t);if(this.sheen===!0&&this.sheenSpecularDirect.addAssign(r.mul(PT({lightDirection:e}))),this.clearcoat===!0){const a=Ws.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(a.mul(ta({lightDirection:e,f0:Xi,f90:ji,roughness:qn,normalView:Ws})))}s.directDiffuse.addAssign(r.mul(Ns({diffuseColor:ee.rgb}))),s.directSpecular.addAssign(r.mul(ta({lightDirection:e,f0:$e,f90:1,roughness:xt,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:s,halfHeight:n,reflectedLight:r,ltc_1:i,ltc_2:a}){const u=t.add(s).sub(n),c=t.sub(s).sub(n),l=t.sub(s).add(n),d=t.add(s).add(n),h=me,p=ue,f=ye.toVar(),m=UT({N:h,V:p,roughness:xt}),b=i.sample(m).toVar(),_=a.sample(m).toVar(),C=Oe(T(b.x,0,b.y),T(0,1,0),T(b.z,0,b.w)).toVar(),M=$e.mul(_.x).add($e.oneMinus().mul(_.y)).toVar();r.directSpecular.addAssign(e.mul(M).mul(ac({N:h,V:p,P:f,mInv:C,p0:u,p1:c,p2:l,p3:d}))),r.directDiffuse.addAssign(e.mul(ee).mul(ac({N:h,V:p,P:f,mInv:Oe(1,0,0,0,1,0,0,0,1),p0:u,p1:c,p2:l,p3:d})))}indirect(e,t,s){this.indirectDiffuse(e,t,s),this.indirectSpecular(e,t,s),this.ambientOcclusion(e,t,s)}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(Ns({diffuseColor:ee})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:s}){if(this.sheen===!0&&this.sheenSpecularIndirect.addAssign(t.mul(gs,$T({normal:me,viewDir:ue,roughness:bi}))),this.clearcoat===!0){const c=Ws.dot(ue).clamp(),l=rf({dotNV:c,specularColor:Xi,specularF90:ji,roughness:qn});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(l))}const n=T().toVar("singleScattering"),r=T().toVar("multiScattering"),i=t.mul(1/Math.PI);this.computeMultiscattering(n,r,Xn);const a=n.add(r),u=ee.mul(a.r.max(a.g).max(a.b).oneMinus());s.indirectSpecular.addAssign(e.mul(n)),s.indirectSpecular.addAssign(r.mul(i)),s.indirectDiffuse.addAssign(u.mul(i))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t}){const n=me.dot(ue).clamp().add(e),r=xt.mul(-16).oneMinus().negate().exp2(),i=e.sub(n.pow(r).oneMinus()).clamp();this.clearcoat===!0&&this.clearcoatSpecularIndirect.mulAssign(e),this.sheen===!0&&this.sheenSpecularIndirect.mulAssign(e),t.indirectDiffuse.mulAssign(e),t.indirectSpecular.mulAssign(i)}finish(e){const{outgoingLight:t}=e;if(this.clearcoat===!0){const s=Ws.dot(ue).clamp(),n=nn({dotVH:s,f0:Xi,f90:ji}),r=t.mul(ti.mul(n).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(ti));t.assign(r)}if(this.sheen===!0){const s=gs.r.max(gs.g).max(gs.b).mul(.157).oneMinus(),n=t.mul(s).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(n)}}}const yc=g(1),ra=g(-2),Nr=g(.8),Ki=g(-1),Sr=g(.4),Yi=g(2),vr=g(.305),Qi=g(3),xc=g(.21),HT=g(4),Tc=g(4),qT=g(16),XT=N(([o])=>{const e=T(ae(o)).toVar(),t=g(-1).toVar();return H(e.x.greaterThan(e.z),()=>{H(e.x.greaterThan(e.y),()=>{t.assign(Pe(o.x.greaterThan(0),0,3))}).Else(()=>{t.assign(Pe(o.y.greaterThan(0),1,4))})}).Else(()=>{H(e.z.greaterThan(e.y),()=>{t.assign(Pe(o.z.greaterThan(0),2,5))}).Else(()=>{t.assign(Pe(o.y.greaterThan(0),1,4))})}),t}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),jT=N(([o,e])=>{const t=w().toVar();return H(e.equal(0),()=>{t.assign(w(o.z,o.y).div(ae(o.x)))}).ElseIf(e.equal(1),()=>{t.assign(w(o.x.negate(),o.z.negate()).div(ae(o.y)))}).ElseIf(e.equal(2),()=>{t.assign(w(o.x.negate(),o.y).div(ae(o.z)))}).ElseIf(e.equal(3),()=>{t.assign(w(o.z.negate(),o.y).div(ae(o.x)))}).ElseIf(e.equal(4),()=>{t.assign(w(o.x.negate(),o.z).div(ae(o.y)))}).Else(()=>{t.assign(w(o.x,o.y).div(ae(o.z)))}),W(.5,t.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),KT=N(([o])=>{const e=g(0).toVar();return H(o.greaterThanEqual(Nr),()=>{e.assign(yc.sub(o).mul(Ki.sub(ra)).div(yc.sub(Nr)).add(ra))}).ElseIf(o.greaterThanEqual(Sr),()=>{e.assign(Nr.sub(o).mul(Yi.sub(Ki)).div(Nr.sub(Sr)).add(Ki))}).ElseIf(o.greaterThanEqual(vr),()=>{e.assign(Sr.sub(o).mul(Qi.sub(Yi)).div(Sr.sub(vr)).add(Yi))}).ElseIf(o.greaterThanEqual(xc),()=>{e.assign(vr.sub(o).mul(HT.sub(Qi)).div(vr.sub(xc)).add(Qi))}).Else(()=>{e.assign(g(-2).mul(bt(W(1.16,o))))}),e}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),df=N(([o,e])=>{const t=o.toVar();t.assign(W(2,t).sub(1));const s=T(t,1).toVar();return H(e.equal(0),()=>{s.assign(s.zyx)}).ElseIf(e.equal(1),()=>{s.assign(s.xzy),s.xz.mulAssign(-1)}).ElseIf(e.equal(2),()=>{s.x.mulAssign(-1)}).ElseIf(e.equal(3),()=>{s.assign(s.zyx),s.xz.mulAssign(-1)}).ElseIf(e.equal(4),()=>{s.assign(s.xzy),s.xy.mulAssign(-1)}).ElseIf(e.equal(5),()=>{s.z.mulAssign(-1)}),s}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),hf=N(([o,e,t,s,n,r])=>{const i=g(t),a=T(e),u=Rt(KT(i),ra,r),c=Ht(u),l=Nt(u),d=T(ia(o,a,l,s,n,r)).toVar();return H(c.notEqual(0),()=>{const h=T(ia(o,a,l.add(1),s,n,r)).toVar();d.assign(se(d,h,c))}),d}),ia=N(([o,e,t,s,n,r])=>{const i=g(t).toVar(),a=T(e),u=g(XT(a)).toVar(),c=g(xe(Tc.sub(i),0)).toVar();i.assign(xe(i,Tc));const l=g(tn(i)).toVar(),d=w(jT(a,u).mul(l.sub(2)).add(1)).toVar();return H(u.greaterThan(2),()=>{d.y.addAssign(l),u.subAssign(3)}),d.x.addAssign(u.mul(l)),d.x.addAssign(c.mul(W(3,qT))),d.y.addAssign(W(4,tn(r).sub(l))),d.x.mulAssign(s),d.y.mulAssign(n),o.sample(d).grad(w(),w())}),Zi=N(({envMap:o,mipInt:e,outputDirection:t,theta:s,axis:n,CUBEUV_TEXEL_WIDTH:r,CUBEUV_TEXEL_HEIGHT:i,CUBEUV_MAX_MIP:a})=>{const u=Lt(s),c=t.mul(u).add(n.cross(t).mul(Je(s))).add(n.mul(n.dot(t).mul(u.oneMinus())));return ia(o,c,e,r,i,a)}),pf=N(({n:o,latitudinal:e,poleAxis:t,outputDirection:s,weights:n,samples:r,dTheta:i,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:l,CUBEUV_MAX_MIP:d})=>{const h=T(Pe(e,t,Ai(t,s))).toVar();H(Ia(h.equals(T(0))),()=>{h.assign(T(s.z,0,s.x.negate()))}),h.assign($t(h));const p=T().toVar();return p.addAssign(n.element(0).mul(Zi({theta:0,axis:h,outputDirection:s,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:l,CUBEUV_MAX_MIP:d}))),ne({start:y(1),end:o},({i:f})=>{H(f.greaterThanEqual(r),()=>{zp()});const m=g(i.mul(g(f))).toVar();p.addAssign(n.element(f).mul(Zi({theta:m.mul(-1),axis:h,outputDirection:s,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:l,CUBEUV_MAX_MIP:d}))),p.addAssign(n.element(f).mul(Zi({theta:m,axis:h,outputDirection:s,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:l,CUBEUV_MAX_MIP:d})))}),V(p,1)});let ci=null;const _c=new WeakMap;function YT(o){const e=Math.log2(o)-2,t=1/o;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:t,maxMip:e}}function QT(o){let e=_c.get(o);if((e!==void 0?e.pmremVersion:-1)!==o.pmremVersion){const s=o.image;if(o.isCubeTexture)if(JT(s))e=ci.fromCubemap(o,e);else return null;else if(e_(s))e=ci.fromEquirectangular(o,e);else return null;e.pmremVersion=o.pmremVersion,_c.set(o,e)}return e.texture}class ZT extends Te{static get type(){return"PMREMNode"}constructor(e,t=null,s=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=s,this._generator=null;const n=new $l;n.isRenderTargetTexture=!0,this._texture=X(n),this._width=G(0),this._height=G(0),this._maxMip=G(0),this.updateBeforeType=z.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=YT(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(){let e=this._pmrem;const t=e?e.pmremVersion:-1,s=this._value;t!==s.pmremVersion&&(s.isPMREMTexture===!0?e=s:e=QT(s),e!==null&&(this._pmrem=e,this.updateFromTexture(e)))}setup(e){ci===null&&(ci=e.createPMREMGenerator()),this.updateBefore(e);let t=this.uvNode;t===null&&e.context.getUV&&(t=e.context.getUV(this));const s=this.value;e.renderer.coordinateSystem===Un&&s.isPMREMTexture!==!0&&s.isRenderTargetTexture===!0&&(t=T(t.x.negate(),t.yz)),t=T(t.x,t.y.negate(),t.z);let n=this.levelNode;return n===null&&e.context.getTextureLevel&&(n=e.context.getTextureLevel(this)),hf(this._texture,t,n,this._width,this._height,this._maxMip)}}function JT(o){if(o==null)return!1;let e=0;const t=6;for(let s=0;s<t;s++)o[s]!==void 0&&e++;return e===t}function e_(o){return o==null?!1:o.height>0}const gu=A(ZT),bc=new WeakMap;class t_ extends un{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let s=this.envNode;if(s.isTextureNode||s.isMaterialReferenceNode){const p=s.isTextureNode?s.value:t[s.property];let f=bc.get(p);f===void 0&&(f=gu(p),bc.set(p,f)),s=f}const r=t.envMap?ie("envMapIntensity","float",e.material):ie("environmentIntensity","float",e.scene),a=t.useAnisotropy===!0||t.anisotropy>0?sp:me,u=s.context(Nc(xt,a)).mul(r),c=s.context(s_(Mi)).mul(Math.PI).mul(r),l=Mn(u),d=Mn(c);e.context.radiance.addAssign(l),e.context.iblIrradiance.addAssign(d);const h=e.context.lightingModel.clearcoatRadiance;if(h){const p=s.context(Nc(qn,Ws)).mul(r),f=Mn(p);h.addAssign(f)}}}const Nc=(o,e)=>{let t=null;return{getUV:()=>(t===null&&(t=ue.negate().reflect(e),t=o.mul(o).mix(t,e).normalize(),t=t.transformDirection(Ye)),t),getTextureLevel:()=>o}},s_=o=>({getUV:()=>o,getTextureLevel:()=>g(1)}),n_=new im;class ff extends Se{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(n_),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return t===null&&e.environmentNode&&(t=e.environmentNode),t?new t_(t):null}setupLightingModel(){return new lf}setupSpecular(){const e=se(T(.04),ee.rgb,Hn);$e.assign(e),Xn.assign(1)}setupVariants(){const e=this.metalnessNode?g(this.metalnessNode):dp;Hn.assign(e);let t=this.roughnessNode?g(this.roughnessNode):lp;t=pu({roughness:t}),xt.assign(t),this.setupSpecular(),ee.assign(V(ee.rgb.mul(e.oneMinus()),ee.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const r_=new om;class i_ extends ff{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(r_),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||this.clearcoatNode!==null}get useIridescence(){return this.iridescence>0||this.iridescenceNode!==null}get useSheen(){return this.sheen>0||this.sheenNode!==null}get useAnisotropy(){return this.anisotropy>0||this.anisotropyNode!==null}get useTransmission(){return this.transmission>0||this.transmissionNode!==null}get useDispersion(){return this.dispersion>0||this.dispersionNode!==null}setupSpecular(){const e=this.iorNode?g(this.iorNode):Rp;wn.assign(e),$e.assign(se(je(Ha(wn.sub(1).div(wn.add(1))).mul(cp),T(1)).mul(ea),ee.rgb,Hn)),Xn.assign(se(ea,1,Hn))}setupLightingModel(){return new lf(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const t=this.clearcoatNode?g(this.clearcoatNode):pp,s=this.clearcoatRoughnessNode?g(this.clearcoatRoughnessNode):fp;ti.assign(t),qn.assign(pu({roughness:s}))}if(this.useSheen){const t=this.sheenNode?T(this.sheenNode):yp,s=this.sheenRoughnessNode?g(this.sheenRoughnessNode):xp;gs.assign(t),bi.assign(s)}if(this.useIridescence){const t=this.iridescenceNode?g(this.iridescenceNode):_p,s=this.iridescenceIORNode?g(this.iridescenceIORNode):bp,n=this.iridescenceThicknessNode?g(this.iridescenceThicknessNode):Np;Ni.assign(t),wa.assign(s),Ma.assign(n)}if(this.useAnisotropy){const t=(this.anisotropyNode?w(this.anisotropyNode):Tp).toVar();jt.assign(t.length()),H(jt.equal(0),()=>{t.assign(w(1,0))}).Else(()=>{t.divAssign(w(jt)),jt.assign(jt.saturate())}),si.assign(jt.pow2().mix(xt.pow2(),1)),Cn.assign(ms[0].mul(t.x).add(ms[1].mul(t.y))),bs.assign(ms[1].mul(t.x).sub(ms[0].mul(t.y)))}if(this.useTransmission){const t=this.transmissionNode?g(this.transmissionNode):Sp,s=this.thicknessNode?g(this.thicknessNode):vp,n=this.attenuationDistanceNode?g(this.attenuationDistanceNode):Ap,r=this.attenuationColorNode?T(this.attenuationColorNode):Ep;if(ri.assign(t),Ba.assign(s),Fa.assign(n),Pa.assign(r),this.useDispersion){const i=this.dispersionNode?g(this.dispersionNode):Pp;Ua.assign(i)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?T(this.clearcoatNormalNode):gp}setup(e){e.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(e),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}const o_=N(({normal:o,lightDirection:e,builder:t})=>{const s=o.dot(e),n=w(s.mul(.5).add(.5),0);if(t.material.gradientMap){const r=Gt("gradientMap","texture").context({getUV:()=>n});return T(r.r)}else{const r=n.fwidth().mul(.5);return se(T(.7),T(1),At(g(.7).sub(r.x),g(.7).add(r.x),n.x))}});class a_ extends Ui{direct({lightDirection:e,lightColor:t,reflectedLight:s},n,r){const i=o_({normal:Ci,lightDirection:e,builder:r}).mul(t);s.directDiffuse.addAssign(i.mul(Ns({diffuseColor:ee.rgb})))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:s}){s.indirectDiffuse.addAssign(t.mul(Ns({diffuseColor:ee}))),s.indirectDiffuse.mulAssign(e)}}const u_=new am;class c_ extends Se{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(u_),this.setValues(e)}setupLightingModel(){return new a_}}class l_ extends Te{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){const e=T(ue.z,0,ue.x.negate()).normalize(),t=ue.cross(e);return w(e.dot(me),t.dot(me)).mul(.495).add(.5)}}const gf=F(l_),d_=new lm;class h_ extends Se{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(d_),this.setValues(e)}setupVariants(e){const t=gf;let s;e.material.matcap?s=Gt("matcap","texture").context({getUV:()=>t}):s=T(se(.2,.8,t.y)),ee.rgb.mulAssign(s.rgb)}}class p_ extends Te{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:s}=this;if(this.getNodeType(e)==="vec2"){const r=t.cos(),i=t.sin();return Ti(r,i,i.negate(),r).mul(s)}else{const r=t,i=_s(V(1,0,0,0),V(0,Lt(r.x),Je(r.x).negate(),0),V(0,Je(r.x),Lt(r.x),0),V(0,0,0,1)),a=_s(V(Lt(r.y),0,Je(r.y),0),V(0,1,0,0),V(Je(r.y).negate(),0,Lt(r.y),0),V(0,0,0,1)),u=_s(V(Lt(r.z),Je(r.z).negate(),0,0),V(Je(r.z),Lt(r.z),0,0),V(0,0,1,0),V(0,0,0,1));return i.mul(a).mul(u).mul(V(s,1)).xyz}}}const Li=A(p_),f_=new fm;class mf extends Se{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(f_),this.setValues(e)}setupPositionView(e){const{object:t,camera:s}=e,n=this.sizeAttenuation,{positionNode:r,rotationNode:i,scaleNode:a}=this,u=As.mul(T(r||0));let c=w(rt[0].xyz.length(),rt[1].xyz.length());if(a!==null&&(c=c.mul(g(a))),n===!1)if(s.isPerspectiveCamera)c=c.mul(u.z.negate());else{const p=g(2).div(Rs.element(1).element(1));c=c.mul(p.mul(2))}let l=lr.xy;if(t.center&&t.center.isVector2===!0){const p=Vy("center","vec2",t);l=l.sub(p.sub(.5))}l=l.mul(c);const d=g(i||mp),h=Li(l,d);return V(u.xy.add(h),u.zw)}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}const g_=new pm;class m_ extends mf{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.sizeNode=null,this.isPointsNodeMaterial=!0,this.setDefaultValues(g_),this.setValues(e)}setupPositionView(){const{positionNode:e}=this;return As.mul(T(e||fe)).xyz}setupVertex(e){const t=super.setupVertex(e);if(e.material.isNodeMaterial!==!0)return t;const{rotationNode:s,scaleNode:n,sizeNode:r}=this,i=lr.xy.toVar(),a=Ks.z.div(Ks.w);if(s&&s.isNode){const c=g(s);i.assign(Li(i,c))}let u=r!==null?w(r):Fp;return this.sizeAttenuation===!0&&(u=u.mul(u.div(ye.z.negate()))),n&&n.isNode&&(u=u.mul(w(n))),i.mulAssign(u.mul(2)),i.assign(i.div(Ks.z)),i.y.assign(i.y.mul(a)),i.assign(i.mul(t.w)),t.addAssign(V(i,0,0)),t}get alphaToCoverage(){return this._useAlphaToCoverage}set alphaToCoverage(e){this._useAlphaToCoverage!==e&&(this._useAlphaToCoverage=e,this.needsUpdate=!0)}}class y_ extends Ui{constructor(){super(),this.shadowNode=g(1).toVar("shadowMask")}direct({shadowMask:e}){this.shadowNode.mulAssign(e)}finish(e){ee.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(ee.rgb)}}const x_=new gm;class T_ extends Se{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.setDefaultValues(x_),this.setValues(e)}setupLightingModel(){return new y_}}const __=N(({texture:o,uv:e})=>{const s=T().toVar();return H(e.x.lessThan(1e-4),()=>{s.assign(T(1,0,0))}).ElseIf(e.y.lessThan(1e-4),()=>{s.assign(T(0,1,0))}).ElseIf(e.z.lessThan(1e-4),()=>{s.assign(T(0,0,1))}).ElseIf(e.x.greaterThan(1-1e-4),()=>{s.assign(T(-1,0,0))}).ElseIf(e.y.greaterThan(1-1e-4),()=>{s.assign(T(0,-1,0))}).ElseIf(e.z.greaterThan(1-1e-4),()=>{s.assign(T(0,0,-1))}).Else(()=>{const r=o.sample(e.add(T(-.01,0,0))).r.sub(o.sample(e.add(T(.01,0,0))).r),i=o.sample(e.add(T(0,-.01,0))).r.sub(o.sample(e.add(T(0,.01,0))).r),a=o.sample(e.add(T(0,0,-.01))).r.sub(o.sample(e.add(T(0,0,.01))).r);s.assign(T(r,i,a))}),s.normalize()});class b_ extends Ct{static get type(){return"Texture3DNode"}constructor(e,t=null,s=null){super(e,t,s),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return T(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,t){const s=this.value;return e.isFlipY()&&(s.isRenderTargetTexture===!0||s.isFramebufferTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(y(Jt(this,this.levelNode).y).sub(t.y).sub(1))),t}generateUV(e,t){return t.build(e,"vec3")}normal(e){return __({texture:this,uv:e})}}const N_=A(b_);class S_{constructor(e,t){this.nodes=e,this.info=t,this._context=self,this._animationLoop=null,this._requestId=null}start(){const e=(t,s)=>{this._requestId=this._context.requestAnimationFrame(e),this.info.autoReset===!0&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,this._animationLoop!==null&&this._animationLoop(t,s)};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}getAnimationLoop(){return this._animationLoop}setAnimationLoop(e){this._animationLoop=e}getContext(){return this._context}setContext(e){this._context=e}dispose(){this.stop()}}class Bt{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let s=0;s<e.length-1;s++)if(t=t.get(e[s]),t===void 0)return;return t.get(e[e.length-1])}set(e,t){let s=this.weakMap;for(let n=0;n<e.length-1;n++){const r=e[n];s.has(r)===!1&&s.set(r,new WeakMap),s=s.get(r)}return s.set(e[e.length-1],t),this}delete(e){let t=this.weakMap;for(let s=0;s<e.length-1;s++)if(t=t.get(e[s]),t===void 0)return!1;return t.delete(e[e.length-1])}}let v_=0;function R_(o){const e=Object.keys(o);let t=Object.getPrototypeOf(o);for(;t;){const s=Object.getOwnPropertyDescriptors(t);for(const n in s)if(s[n]!==void 0){const r=s[n];r&&typeof r.get=="function"&&e.push(n)}t=Object.getPrototypeOf(t)}return e}class A_{constructor(e,t,s,n,r,i,a,u,c,l){this.id=v_++,this._nodes=e,this._geometries=t,this.renderer=s,this.object=n,this.material=r,this.scene=i,this.camera=a,this.lightsNode=u,this.context=c,this.geometry=n.geometry,this.version=r.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.group=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=l,this.clippingContextCacheKey=l!==null?l.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return this.clippingContext===null||this.clippingContext.cacheKey===this.clippingContextCacheKey?!1:(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return this.material.hardwareClipping===!0?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().observer)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getBindingGroup(e){for(const t of this.getBindings())if(t.name===e)return t}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null}getAttributes(){if(this.attributes!==null)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,s=[],n=new Set;for(const r of e){const i=r.node&&r.node.attribute?r.node.attribute:t.getAttribute(r.name);if(i===void 0)continue;s.push(i);const a=i.isInterleavedBufferAttribute?i.data:i;n.add(a)}return this.attributes=s,this.vertexBuffers=Array.from(n.values()),s}getVertexBuffers(){return this.vertexBuffers===null&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:s,group:n,drawRange:r}=this,i=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),u=a!==null,c=s.isInstancedBufferGeometry?s.instanceCount:e.count>1?e.count:1;if(c===0)return null;if(i.instanceCount=c,e.isBatchedMesh===!0)return i;let l=1;t.wireframe===!0&&!e.isPoints&&!e.isLineSegments&&!e.isLine&&!e.isLineLoop&&(l=2);let d=r.start*l,h=(r.start+r.count)*l;n!==null&&(d=Math.max(d,n.start*l),h=Math.min(h,(n.start+n.count)*l));const p=s.attributes.position;let f=1/0;u?f=a.count:p!=null&&(f=p.count),d=Math.max(d,0),h=Math.min(h,f);const m=h-d;return m<0||m===1/0?null:(i.vertexCount=m,i.firstVertex=d,i)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const s of Object.keys(e.attributes).sort()){const n=e.attributes[s];t+=s+",",n.data&&(t+=n.data.stride+","),n.offset&&(t+=n.offset+","),n.itemSize&&(t+=n.itemSize+","),n.normalized&&(t+="n,")}for(const s of Object.keys(e.morphAttributes).sort()){const n=e.morphAttributes[s];t+="morph-"+s+",";for(let r=0,i=n.length;r<i;r++){const a=n[r];t+=a.id+","}}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t}=this;let s=t.customProgramCacheKey();for(const n of R_(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(n))continue;const r=t[n];let i;if(r!==null){const a=typeof r;a==="number"?i=r!==0?"1":"0":a==="object"?(i="{",r.isTexture&&(i+=r.mapping),i+="}"):i=String(r)}else i=String(r);s+=i+","}return s+=this.clippingContextCacheKey+",",e.geometry&&(s+=this.getGeometryCacheKey()),e.skeleton&&(s+=e.skeleton.bones.length+","),e.isBatchedMesh&&(s+=e._matricesTexture.uuid+",",e._colorsTexture!==null&&(s+=e._colorsTexture.uuid+",")),e.count>1&&(s+=e.uuid+","),s+=e.receiveShadow+",",Kl(s)}get needsGeometryUpdate(){return this.geometry.id!==this.object.geometry.id}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=0;return this.material.isShadowPassMaterial!==!0&&(e=this._nodes.getCacheKey(this.scene,this.lightsNode)),this.camera.isArrayCamera&&(e=kn(e,this.camera.cameras.length)),this.object.receiveShadow&&(e=kn(e,1)),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}const as=[];class E_{constructor(e,t,s,n,r,i){this.renderer=e,this.nodes=t,this.geometries=s,this.pipelines=n,this.bindings=r,this.info=i,this.chainMaps={}}get(e,t,s,n,r,i,a,u){const c=this.getChainMap(u);as[0]=e,as[1]=t,as[2]=i,as[3]=r;let l=c.get(as);return l===void 0?(l=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,s,n,r,i,a,u),c.set(as,l)):(l.updateClipping(a),l.needsGeometryUpdate&&l.setGeometry(e.geometry),(l.version!==t.version||l.needsUpdate)&&(l.initialCacheKey!==l.getCacheKey()?(l.dispose(),l=this.get(e,t,s,n,r,i,a,u)):l.version=t.version)),as.length=0,l}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new Bt)}dispose(){this.chainMaps={}}createRenderObject(e,t,s,n,r,i,a,u,c,l,d){const h=this.getChainMap(d),p=new A_(e,t,s,n,r,i,a,u,c,l);return p.onDispose=()=>{this.pipelines.delete(p),this.bindings.delete(p),this.nodes.delete(p),h.delete(p.getChainArray())},p}}class is{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}delete(e){let t=null;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const Tt={VERTEX:1,INDEX:2,STORAGE:3,INDIRECT:4},Qt=16,C_=211,w_=212;class M_ extends is{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return t!==void 0&&this.backend.destroyAttribute(e),t}update(e,t){const s=this.get(e);if(s.version===void 0)t===Tt.VERTEX?this.backend.createAttribute(e):t===Tt.INDEX?this.backend.createIndexAttribute(e):t===Tt.STORAGE?this.backend.createStorageAttribute(e):t===Tt.INDIRECT&&this.backend.createIndirectStorageAttribute(e),s.version=this._getBufferAttribute(e).version;else{const n=this._getBufferAttribute(e);(s.version<n.version||n.usage===Os)&&(this.backend.updateAttribute(e),s.version=n.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function yf(o){return o.index!==null?o.index.version:o.attributes.position.version}function Sc(o){const e=[],t=o.index,s=o.attributes.position;if(t!==null){const r=t.array;for(let i=0,a=r.length;i<a;i+=3){const u=r[i+0],c=r[i+1],l=r[i+2];e.push(u,c,c,l,l,u)}}else{const r=s.array;for(let i=0,a=r.length/3-1;i<a;i+=3){const u=i+0,c=i+1,l=i+2;e.push(u,c,c,l,l,u)}}const n=new(Am(e)?vm:Rm)(e,1);return n.version=yf(o),n}class B_ extends is{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&this.get(t).initialized===!0}updateForRender(e){this.has(e)===!1&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry,s=this.get(t);s.initialized=!0,this.info.memory.geometries++;const n=()=>{this.info.memory.geometries--;const r=t.index,i=e.getAttributes();r!==null&&this.attributes.delete(r);for(const u of i)this.attributes.delete(u);const a=this.wireframes.get(t);a!==void 0&&this.attributes.delete(a),t.removeEventListener("dispose",n)};t.addEventListener("dispose",n)}updateAttributes(e){const t=e.getAttributes();for(const r of t)r.isStorageBufferAttribute||r.isStorageInstancedBufferAttribute?this.updateAttribute(r,Tt.STORAGE):this.updateAttribute(r,Tt.VERTEX);const s=this.getIndex(e);s!==null&&this.updateAttribute(s,Tt.INDEX);const n=e.geometry.indirect;n!==null&&this.updateAttribute(n,Tt.INDIRECT)}updateAttribute(e,t){const s=this.info.render.calls;e.isInterleavedBufferAttribute?this.attributeCall.get(e)===void 0?(this.attributes.update(e,t),this.attributeCall.set(e,s)):this.attributeCall.get(e.data)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e.data,s),this.attributeCall.set(e,s)):this.attributeCall.get(e)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e,s))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:t,material:s}=e;let n=t.index;if(s.wireframe===!0){const r=this.wireframes;let i=r.get(t);i===void 0?(i=Sc(t),r.set(t,i)):i.version!==yf(t)&&(this.attributes.delete(i),i=Sc(t),r.set(t,i)),n=i}return n}}class F_{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0},this.compute={calls:0,frameCalls:0,timestamp:0},this.memory={geometries:0,textures:0}}update(e,t,s){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=s*(t/3):e.isPoints?this.render.points+=s*t:e.isLineSegments?this.render.lines+=s*(t/2):e.isLine?this.render.lines+=s*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}reset(){this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class xf{constructor(e){this.cacheKey=e,this.usedTimes=0}}class P_ extends xf{constructor(e,t,s){super(e),this.vertexProgram=t,this.fragmentProgram=s}}class U_ extends xf{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let D_=0;class Ji{constructor(e,t,s,n=null,r=null){this.id=D_++,this.code=e,this.stage=t,this.name=s,this.transforms=n,this.attributes=r,this.usedTimes=0}}class L_ extends is{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:s}=this,n=this.get(e);if(this._needsComputeUpdate(e)){const r=n.pipeline;r&&(r.usedTimes--,r.computeProgram.usedTimes--);const i=this.nodes.getForCompute(e);let a=this.programs.compute.get(i.computeShader);a===void 0&&(r&&r.computeProgram.usedTimes===0&&this._releaseProgram(r.computeProgram),a=new Ji(i.computeShader,"compute",e.name,i.transforms,i.nodeAttributes),this.programs.compute.set(i.computeShader,a),s.createProgram(a));const u=this._getComputeCacheKey(e,a);let c=this.caches.get(u);c===void 0&&(r&&r.usedTimes===0&&this._releasePipeline(r),c=this._getComputePipeline(e,a,u,t)),c.usedTimes++,a.usedTimes++,n.version=e.version,n.pipeline=c}return n.pipeline}getForRender(e,t=null){const{backend:s}=this,n=this.get(e);if(this._needsRenderUpdate(e)){const r=n.pipeline;r&&(r.usedTimes--,r.vertexProgram.usedTimes--,r.fragmentProgram.usedTimes--);const i=e.getNodeBuilderState(),a=e.material?e.material.name:"";let u=this.programs.vertex.get(i.vertexShader);u===void 0&&(r&&r.vertexProgram.usedTimes===0&&this._releaseProgram(r.vertexProgram),u=new Ji(i.vertexShader,"vertex",a),this.programs.vertex.set(i.vertexShader,u),s.createProgram(u));let c=this.programs.fragment.get(i.fragmentShader);c===void 0&&(r&&r.fragmentProgram.usedTimes===0&&this._releaseProgram(r.fragmentProgram),c=new Ji(i.fragmentShader,"fragment",a),this.programs.fragment.set(i.fragmentShader,c),s.createProgram(c));const l=this._getRenderCacheKey(e,u,c);let d=this.caches.get(l);d===void 0?(r&&r.usedTimes===0&&this._releasePipeline(r),d=this._getRenderPipeline(e,u,c,l,t)):e.pipeline=d,d.usedTimes++,u.usedTimes++,c.usedTimes++,n.pipeline=d}return n.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,t.usedTimes===0&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,t.computeProgram.usedTimes===0&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,t.vertexProgram.usedTimes===0&&this._releaseProgram(t.vertexProgram),t.fragmentProgram.usedTimes===0&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,s,n){s=s||this._getComputeCacheKey(e,t);let r=this.caches.get(s);return r===void 0&&(r=new U_(s,t),this.caches.set(s,r),this.backend.createComputePipeline(r,n)),r}_getRenderPipeline(e,t,s,n,r){n=n||this._getRenderCacheKey(e,t,s);let i=this.caches.get(n);return i===void 0&&(i=new P_(n,t,s),this.caches.set(n,i),e.pipeline=i,this.backend.createRenderPipeline(e,r)),i}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,s){return t.id+","+s.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,s=e.stage;this.programs[s].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return t.pipeline===void 0||t.version!==e.version}_needsRenderUpdate(e){return this.get(e).pipeline===void 0||this.backend.needsRenderUpdate(e)}}class I_ extends is{constructor(e,t,s,n,r,i){super(),this.backend=e,this.textures=s,this.pipelines=r,this.attributes=n,this.nodes=t,this.info=i,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const s of t){const n=this.get(s);n.bindGroup===void 0&&(this._init(s),this.backend.createBindings(s,t,0),n.bindGroup=s)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const s of t){const n=this.get(s);n.bindGroup===void 0&&(this._init(s),this.backend.createBindings(s,t,0),n.bindGroup=s)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const s=t.attribute,n=s.isIndirectStorageBufferAttribute?Tt.INDIRECT:Tt.STORAGE;this.attributes.update(s,n)}}_update(e,t){const{backend:s}=this;let n=!1,r=!0,i=0,a=0;for(const u of e.bindings)if(!(u.isNodeUniformsGroup&&this.nodes.updateGroup(u)===!1)){if(u.isUniformBuffer)u.update()&&s.updateBinding(u);else if(u.isSampler)u.update();else if(u.isSampledTexture){const c=this.textures.get(u.texture);u.needsBindingsUpdate(c.generation)&&(n=!0);const l=u.update(),d=u.texture;l&&this.textures.updateTexture(d);const h=s.get(d);if(h.externalTexture!==void 0||c.isDefaultTexture?r=!1:(i=i*10+d.id,a+=d.version),s.isWebGPUBackend===!0&&h.texture===void 0&&h.externalTexture===void 0&&(console.error("Bindings._update: binding should be available:",u,l,d,u.textureNode.value,n),this.textures.updateTexture(d),n=!0),d.isStorageTexture===!0){const p=this.get(d);u.store===!0?p.needsMipmap=!0:this.textures.needsMipmaps(d)&&p.needsMipmap===!0&&(this.backend.generateMipmaps(d),p.needsMipmap=!1)}}}n===!0&&this.backend.updateBindings(e,t,r?i:0,a)}}function V_(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.material.id!==e.material.id?o.material.id-e.material.id:o.z!==e.z?o.z-e.z:o.id-e.id}function vc(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.z!==e.z?e.z-o.z:o.id-e.id}function Rc(o){return(o.transmission>0||o.transmissionNode)&&o.side===Xs&&o.forceSinglePass===!1}class G_{constructor(e,t,s){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,s),this.lightsArray=[],this.scene=t,this.camera=s,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,s,n,r,i,a){let u=this.renderItems[this.renderItemsIndex];return u===void 0?(u={id:e.id,object:e,geometry:t,material:s,groupOrder:n,renderOrder:e.renderOrder,z:r,group:i,clippingContext:a},this.renderItems[this.renderItemsIndex]=u):(u.id=e.id,u.object=e,u.geometry=t,u.material=s,u.groupOrder=n,u.renderOrder=e.renderOrder,u.z=r,u.group=i,u.clippingContext=a),this.renderItemsIndex++,u}push(e,t,s,n,r,i,a){const u=this.getNextRenderItem(e,t,s,n,r,i,a);e.occlusionTest===!0&&this.occlusionQueryCount++,s.transparent===!0||s.transmission>0?(Rc(s)&&this.transparentDoublePass.push(u),this.transparent.push(u)):this.opaque.push(u)}unshift(e,t,s,n,r,i,a){const u=this.getNextRenderItem(e,t,s,n,r,i,a);s.transparent===!0||s.transmission>0?(Rc(s)&&this.transparentDoublePass.unshift(u),this.transparent.unshift(u)):this.opaque.unshift(u)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||V_),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||vc),this.transparent.length>1&&this.transparent.sort(t||vc)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const s=this.renderItems[e];if(s.id===null)break;s.id=null,s.object=null,s.geometry=null,s.material=null,s.groupOrder=null,s.renderOrder=null,s.z=null,s.group=null,s.clippingContext=null}}}const pn=[];class O_{constructor(e){this.lighting=e,this.lists=new Bt}get(e,t){const s=this.lists;pn[0]=e,pn[1]=t;let n=s.get(pn);return n===void 0&&(n=new G_(this.lighting,e,t),s.set(pn,n)),pn.length=0,n}dispose(){this.lists=new Bt}}let k_=0;class z_{constructor(){this.id=k_++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new he,this.scissor=!1,this.scissorValue=new he,this.renderTarget=null,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.activeMipmapLevel=0,this.sampleCount=1,this.width=0,this.height=0,this.occlusionQueryCount=0,this.clippingContext=null,this.isRenderContext=!0}getCacheKey(){return Tf(this)}}function Tf(o){const{textures:e,activeCubeFace:t}=o,s=[t];for(const n of e)s.push(n.id);return mi(s)}const fn=[],W_=new ha,$_=new qg;class H_{constructor(){this.chainMaps={}}get(e,t,s=null){fn[0]=e,fn[1]=t;let n;if(s===null)n="default";else{const a=s.texture.format;n=`${s.textures.length}:${a}:${s.samples}:${s.depthBuffer}:${s.stencilBuffer}`}const r=this._getChainMap(n);let i=r.get(fn);return i===void 0&&(i=new z_,r.set(fn,i)),fn.length=0,s!==null&&(i.sampleCount=s.samples===0?1:s.samples),i}getForClear(e=null){return this.get(W_,$_,e)}_getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new Bt)}dispose(){this.chainMaps={}}}const q_=new j;class X_ extends is{constructor(e,t,s){super(),this.renderer=e,this.backend=t,this.info=s}updateRenderTarget(e,t=0){const s=this.get(e),n=e.samples===0?1:e.samples,r=s.depthTextureMips||(s.depthTextureMips={}),i=e.textures,a=this.getSize(i[0]),u=a.width>>t,c=a.height>>t;let l=e.depthTexture||r[t];const d=e.depthBuffer===!0||e.stencilBuffer===!0;let h=!1;l===void 0&&d&&(l=new ns,l.format=e.stencilBuffer?Jn:er,l.type=e.stencilBuffer?tr:Fe,l.image.width=u,l.image.height=c,r[t]=l),(s.width!==a.width||a.height!==s.height)&&(h=!0,l&&(l.needsUpdate=!0,l.image.width=u,l.image.height=c)),s.width=a.width,s.height=a.height,s.textures=i,s.depthTexture=l||null,s.depth=e.depthBuffer,s.stencil=e.stencilBuffer,s.renderTarget=e,s.sampleCount!==n&&(h=!0,l&&(l.needsUpdate=!0),s.sampleCount=n);const p={sampleCount:n};if(e.isXRRenderTarget!==!0){for(let f=0;f<i.length;f++){const m=i[f];h&&(m.needsUpdate=!0),this.updateTexture(m,p)}l&&this.updateTexture(l,p)}if(s.initialized!==!0){s.initialized=!0;const f=()=>{e.removeEventListener("dispose",f);for(let m=0;m<i.length;m++)this._destroyTexture(i[m]);l&&this._destroyTexture(l),this.delete(e)};e.addEventListener("dispose",f)}}updateTexture(e,t={}){const s=this.get(e);if(s.initialized===!0&&s.version===e.version)return;const n=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,r=this.backend;if(n&&s.initialized===!0&&(r.destroySampler(e),r.destroyTexture(e)),e.isFramebufferTexture){const c=this.renderer.getRenderTarget();c?e.type=c.texture.type:e.type=_t}const{width:i,height:a,depth:u}=this.getSize(e);if(t.width=i,t.height=a,t.depth=u,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,i,a):1,n||e.isStorageTexture===!0)r.createSampler(e),r.createTexture(e,t),s.generation=e.version;else if(s.initialized!==!0&&r.createSampler(e),e.version>0){const l=e.image;if(l===void 0)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(l.complete===!1)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const d=[];for(const h of e.images)d.push(h);t.images=d}else t.image=l;(s.isDefaultTexture===void 0||s.isDefaultTexture===!0)&&(r.createTexture(e,t),s.isDefaultTexture=!1,s.generation=e.version),e.source.dataReady===!0&&r.updateTexture(e,t),t.needsMipmaps&&e.mipmaps.length===0&&r.generateMipmaps(e)}}else r.createDefaultTexture(e),s.isDefaultTexture=!0,s.generation=e.version;if(s.initialized!==!0){s.initialized=!0,s.generation=e.version,this.info.memory.textures++;const c=()=>{e.removeEventListener("dispose",c),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",c)}s.version=e.version}getSize(e,t=q_){let s=e.images?e.images[0]:e.image;return s?(s.image!==void 0&&(s=s.image),t.width=s.width||1,t.height=s.height||1,t.depth=e.isCubeTexture?6:s.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,s){let n;return e.isCompressedTexture?e.mipmaps?n=e.mipmaps.length:n=1:n=Math.floor(Math.log2(Math.max(t,s)))+1,n}needsMipmaps(e){return this.isEnvironmentTexture(e)||e.isCompressedTexture===!0||e.generateMipmaps}isEnvironmentTexture(e){const t=e.mapping;return t===sr||t===nr||t===Zs||t===Js}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}class mu extends Pt{constructor(e,t,s,n=1){super(e,t,s),this.a=n}set(e,t,s,n=1){return this.a=n,super.set(e,t,s)}copy(e){return e.a!==void 0&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class _f extends re{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}const j_=(o,e)=>E(new _f(o,e));class K_ extends O{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}getMemberType(e,t){return this.outputNode?this.outputNode.getMemberType(e,t):"void"}add(e){return this.nodes.push(e),this}If(e,t){const s=new En(t);return this._currentCond=Pe(e,s),this.add(this._currentCond)}ElseIf(e,t){const s=new En(t),n=Pe(e,s);return this._currentCond.elseNode=n,this._currentCond=n,this}Else(e){return this._currentCond.elseNode=new En(e),this}build(e,...t){const s=Aa();Wn(this);for(const n of this.nodes)n.build(e,"void");return Wn(s),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}else(...e){return console.warn("TSL.StackNode: .else() has been renamed to .Else()."),this.Else(...e)}elseif(...e){return console.warn("TSL.StackNode: .elseif() has been renamed to .ElseIf()."),this.ElseIf(...e)}}const qr=A(K_);function Y_(o){return Object.entries(o).map(([e,t])=>typeof t=="string"?{name:e,type:t,atomic:!1}:{name:e,type:t.type,atomic:t.atomic||!1})}class Q_ extends O{static get type(){return"StructTypeNode"}constructor(e,t=null){super("struct"),this.membersLayout=Y_(e),this.name=t,this.isStructLayoutNode=!0}getLength(){let e=0;for(const t of this.membersLayout)e+=ba(t.type);return e}getMemberType(e,t){const s=this.membersLayout.find(n=>n.name===t);return s?s.type:"void"}getNodeType(e){return e.getStructTypeFromNode(this,this.membersLayout,this.name).name}generate(e){return this.getNodeType(e)}}class Z_ extends O{static get type(){return"StructNode"}constructor(e,t){super("vec3"),this.structLayoutNode=e,this.values=t,this.isStructNode=!0}getNodeType(e){return this.structLayoutNode.getNodeType(e)}getMemberType(e,t){return this.structLayoutNode.getMemberType(e,t)}generate(e){const t=e.getVarFromNode(this),s=t.type,n=e.getPropertyName(t);return e.addLineFlowCode(`${n} = ${e.generateStruct(s,this.structLayoutNode.membersLayout,this.values)}`,this),t.name}}const J_=(o,e=null)=>{const t=new Q_(o,e),s=(...n)=>{let r=null;if(n.length>0)if(n[0].isNode){r={};const i=Object.keys(o);for(let a=0;a<n.length;a++)r[i[a]]=n[a]}else r=n[0];return E(new Z_(t,r))};return s.layout=t,s.isStruct=!0,s};class bf extends O{static get type(){return"OutputStructNode"}constructor(...e){super(),this.members=e,this.isOutputStructNode=!0}getNodeType(e){const t=e.getNodeProperties(this);if(t.membersLayout===void 0){const s=this.members,n=[];for(let r=0;r<s.length;r++){const i="m"+r,a=s[r].getNodeType(e);n.push({name:i,type:a,index:r})}t.membersLayout=n,t.structType=e.getOutputStructTypeFromNode(this,t.membersLayout)}return t.structType.name}generate(e){const t=e.getOutputStructName(),s=this.members,n=t!==""?t+".":"";for(let r=0;r<s.length;r++){const i=s[r].build(e);e.addLineFlowCode(`${n}m${r} = ${i}`,this)}return t}}const eb=A(bf);function Nf(o,e){for(let t=0;t<o.length;t++)if(o[t].name===e)return t;return-1}class tb extends bf{static get type(){return"MRTNode"}constructor(e){super(),this.outputNodes=e,this.isMRTNode=!0}has(e){return this.outputNodes[e]!==void 0}get(e){return this.outputNodes[e]}merge(e){const t={...this.outputNodes,...e.outputNodes};return Sf(t)}setup(e){const t=this.outputNodes,s=e.renderer.getRenderTarget(),n=[],r=s.textures;for(const i in t){const a=Nf(r,i);n[a]=V(t[i])}return this.members=n,super.setup(e)}}const Sf=A(tb),sb=N(([o])=>{const e=o.toUint().mul(747796405).add(2891336453),t=e.shiftRight(e.shiftRight(28).add(4)).bitXor(e).mul(277803737);return t.shiftRight(22).bitXor(t).toFloat().mul(1/2**32)}),oa=(o,e)=>dt(W(4,o.mul(K(1,o))),e),nb=(o,e)=>o.lessThan(.5)?oa(o.mul(2),e).div(2):K(1,oa(W(K(1,o),2),e).div(2)),rb=(o,e,t)=>dt(ht(dt(o,e),Ne(dt(o,e),dt(K(1,o),t))),1/e),ib=(o,e)=>Je(ii.mul(e.mul(o).sub(1))).div(ii.mul(e.mul(o).sub(1))),It=N(([o])=>o.fract().sub(.5).abs()).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]}),ob=N(([o])=>T(It(o.z.add(It(o.y.mul(1)))),It(o.z.add(It(o.x.mul(1)))),It(o.y.add(It(o.x.mul(1)))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),ab=N(([o,e,t])=>{const s=T(o).toVar(),n=g(1.4).toVar(),r=g(0).toVar(),i=T(s).toVar();return ne({start:g(0),end:g(3),type:"float",condition:"<="},()=>{const a=T(ob(i.mul(2))).toVar();s.addAssign(a.add(t.mul(g(.1).mul(e)))),i.mulAssign(1.8),n.mulAssign(1.5),s.mulAssign(1.2);const u=g(It(s.z.add(It(s.x.add(It(s.y)))))).toVar();r.addAssign(u.div(n)),i.addAssign(.14)}),r}).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"position",type:"vec3"},{name:"speed",type:"float"},{name:"time",type:"float"}]});class ub extends O{static get type(){return"FunctionOverloadingNode"}constructor(e=[],...t){super(),this.functionNodes=e,this.parametersNodes=t,this._candidateFnCall=null,this.global=!0}getNodeType(){return this.functionNodes[0].shaderNode.layout.type}setup(e){const t=this.parametersNodes;let s=this._candidateFnCall;if(s===null){let n=null,r=-1;for(const i of this.functionNodes){const u=i.shaderNode.layout;if(u===null)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");const c=u.inputs;if(t.length===c.length){let l=0;for(let d=0;d<t.length;d++){const h=t[d],p=c[d];h.getNodeType(e)===p.type?l++:l=0}l>r&&(n=i,r=l)}}this._candidateFnCall=s=n(...t)}return s}}const cb=A(ub),Ue=o=>(...e)=>cb(o,...e),Es=G(0).setGroup(k).onRenderUpdate(o=>o.time),vf=G(0).setGroup(k).onRenderUpdate(o=>o.deltaTime),lb=G(0,"uint").setGroup(k).onRenderUpdate(o=>o.frameId),db=(o=1)=>(console.warn('TSL: timerLocal() is deprecated. Use "time" instead.'),Es.mul(o)),hb=(o=1)=>(console.warn('TSL: timerGlobal() is deprecated. Use "time" instead.'),Es.mul(o)),pb=(o=1)=>(console.warn('TSL: timerDelta() is deprecated. Use "deltaTime" instead.'),vf.mul(o)),fb=(o=Es)=>o.add(.75).mul(Math.PI*2).sin().mul(.5).add(.5),gb=(o=Es)=>o.fract().round(),mb=(o=Es)=>o.add(.5).fract().mul(2).sub(1).abs(),yb=(o=Es)=>o.fract(),xb=N(([o,e,t=w(.5)])=>Li(o.sub(t),e).add(t)),Tb=N(([o,e,t=w(.5)])=>{const s=o.sub(t),n=s.dot(s),i=n.mul(n).mul(e);return o.add(s.mul(i))}),_b=N(({position:o=null,horizontal:e=!0,vertical:t=!1})=>{let s;o!==null?(s=rt.toVar(),s[3][0]=o.x,s[3][1]=o.y,s[3][2]=o.z):s=rt;const n=Ye.mul(s);return zn(e)&&(n[0][0]=rt[0].length(),n[0][1]=0,n[0][2]=0),zn(t)&&(n[1][0]=0,n[1][1]=rt[1].length(),n[1][2]=0),n[2][0]=0,n[2][1]=0,n[2][2]=1,Rs.mul(n).mul(fe)}),bb=N(([o=null])=>{const e=ui();return ui(au(o)).sub(e).lessThan(0).select(Mt,o)});class Nb extends O{static get type(){return"SpriteSheetUVNode"}constructor(e,t=de(),s=g(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=s}setup(){const{frameNode:e,uvNode:t,countNode:s}=this,{width:n,height:r}=s,i=e.mod(n.mul(r)).floor(),a=i.mod(n),u=r.sub(i.add(1).div(n).ceil()),c=s.reciprocal(),l=w(a,u);return t.add(l).mul(c)}}const Sb=A(Nb);class vb extends O{static get type(){return"TriplanarTexturesNode"}constructor(e,t=null,s=null,n=g(1),r=fe,i=Ke){super("vec4"),this.textureXNode=e,this.textureYNode=t,this.textureZNode=s,this.scaleNode=n,this.positionNode=r,this.normalNode=i}setup(){const{textureXNode:e,textureYNode:t,textureZNode:s,scaleNode:n,positionNode:r,normalNode:i}=this;let a=i.abs().normalize();a=a.div(a.dot(T(1)));const u=r.yz.mul(n),c=r.zx.mul(n),l=r.xy.mul(n),d=e.value,h=t!==null?t.value:d,p=s!==null?s.value:d,f=X(d,u).mul(a.x),m=X(h,c).mul(a.y),b=X(p,l).mul(a.z);return Ne(f,m,b)}}const Rf=A(vb),Rb=(...o)=>Rf(...o),ws=new al,us=new j,Ms=new j,eo=new j,gn=new Ie,Rr=new j(0,0,-1),ft=new he,mn=new j,Ar=new j,yn=new he,Er=new We,li=new ss,Ab=Mt.flipX();li.depthTexture=new ns(1,1);let to=!1;class yu extends Ct{static get type(){return"ReflectorNode"}constructor(e={}){super(e.defaultTexture||li.texture,Ab),this._reflectorBaseNode=e.reflector||new Eb(this,e),this._depthNode=null,this.setUpdateMatrix(!1)}get reflector(){return this._reflectorBaseNode}get target(){return this._reflectorBaseNode.target}getDepthNode(){if(this._depthNode===null){if(this._reflectorBaseNode.depth!==!0)throw new Error("THREE.ReflectorNode: Depth node can only be requested when the reflector is created with { depth: true }. ");this._depthNode=E(new yu({defaultTexture:li.depthTexture,reflector:this._reflectorBaseNode}))}return this._depthNode}setup(e){return e.object.isQuadMesh||this._reflectorBaseNode.build(e),super.setup(e)}clone(){const e=new this.constructor(this.reflectorNode);return e._reflectorBaseNode=this._reflectorBaseNode,e}}class Eb extends O{static get type(){return"ReflectorBaseNode"}constructor(e,t={}){super();const{target:s=new Km,resolution:n=1,generateMipmaps:r=!1,bounces:i=!0,depth:a=!1}=t;this.textureNode=e,this.target=s,this.resolution=n,this.generateMipmaps=r,this.bounces=i,this.depth=a,this.updateBeforeType=i?z.RENDER:z.FRAME,this.virtualCameras=new WeakMap,this.renderTargets=new WeakMap}_updateResolution(e,t){const s=this.resolution;t.getDrawingBufferSize(Er),e.setSize(Math.round(Er.width*s),Math.round(Er.height*s))}setup(e){return this._updateResolution(li,e.renderer),super.setup(e)}getVirtualCamera(e){let t=this.virtualCameras.get(e);return t===void 0&&(t=e.clone(),this.virtualCameras.set(e,t)),t}getRenderTarget(e){let t=this.renderTargets.get(e);return t===void 0&&(t=new ss(0,0,{type:it}),this.generateMipmaps===!0&&(t.texture.minFilter=Ym,t.texture.generateMipmaps=!0),this.depth===!0&&(t.depthTexture=new ns),this.renderTargets.set(e,t)),t}updateBefore(e){if(this.bounces===!1&&to)return!1;to=!0;const{scene:t,camera:s,renderer:n,material:r}=e,{target:i}=this,a=this.getVirtualCamera(s),u=this.getRenderTarget(a);if(n.getDrawingBufferSize(Er),this._updateResolution(u,n),Ms.setFromMatrixPosition(i.matrixWorld),eo.setFromMatrixPosition(s.matrixWorld),gn.extractRotation(i.matrixWorld),us.set(0,0,1),us.applyMatrix4(gn),mn.subVectors(Ms,eo),mn.dot(us)>0)return;mn.reflect(us).negate(),mn.add(Ms),gn.extractRotation(s.matrixWorld),Rr.set(0,0,-1),Rr.applyMatrix4(gn),Rr.add(eo),Ar.subVectors(Ms,Rr),Ar.reflect(us).negate(),Ar.add(Ms),a.coordinateSystem=s.coordinateSystem,a.position.copy(mn),a.up.set(0,1,0),a.up.applyMatrix4(gn),a.up.reflect(us),a.lookAt(Ar),a.near=s.near,a.far=s.far,a.updateMatrixWorld(),a.projectionMatrix.copy(s.projectionMatrix),ws.setFromNormalAndCoplanarPoint(us,Ms),ws.applyMatrix4(a.matrixWorldInverse),ft.set(ws.normal.x,ws.normal.y,ws.normal.z,ws.constant);const c=a.projectionMatrix;yn.x=(Math.sign(ft.x)+c.elements[8])/c.elements[0],yn.y=(Math.sign(ft.y)+c.elements[9])/c.elements[5],yn.z=-1,yn.w=(1+c.elements[10])/c.elements[14],ft.multiplyScalar(1/ft.dot(yn));const l=0;c.elements[2]=ft.x,c.elements[6]=ft.y,c.elements[10]=n.coordinateSystem===on?ft.z-l:ft.z+1-l,c.elements[14]=ft.w,this.textureNode.value=u.texture,this.depth===!0&&(this.textureNode.getDepthNode().value=u.depthTexture),r.visible=!1;const d=n.getRenderTarget(),h=n.getMRT(),p=n.autoClear;n.setMRT(null),n.setRenderTarget(u),n.autoClear=!0,n.render(t,a),n.setMRT(h),n.setRenderTarget(d),n.autoClear=p,r.visible=!0,to=!1}}const Cb=o=>E(new yu(o)),so=new ol(-1,1,1,-1,0,1);class wb extends Hl{constructor(e=!1){super();const t=e===!1?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new ju([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new ju(t,2))}}const Mb=new wb;class xu extends Qs{constructor(e=null){super(Mb,e),this.camera=so,this.isQuadMesh=!0}async renderAsync(e){return e.renderAsync(this,so)}render(e){e.render(this,so)}}const Bb=new We;class Fb extends Ct{static get type(){return"RTTNode"}constructor(e,t=null,s=null,n={type:it}){const r=new ss(t,s,n);super(r.texture,de()),this.node=e,this.width=t,this.height=s,this.pixelRatio=1,this.renderTarget=r,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this._rttNode=null,this._quadMesh=new xu(new Se),this.updateBeforeType=z.RENDER}get autoSize(){return this.width===null}setup(e){return this._rttNode=this.node.context(e.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(e)}setSize(e,t){this.width=e,this.height=t;const s=e*this.pixelRatio,n=t*this.pixelRatio;this.renderTarget.setSize(s,n),this.textureNeedsUpdate=!0}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}updateBefore({renderer:e}){if(this.textureNeedsUpdate===!1&&this.autoUpdate===!1)return;if(this.textureNeedsUpdate=!1,this.autoSize===!0){this.pixelRatio=e.getPixelRatio();const s=e.getSize(Bb);this.setSize(s.width,s.height)}this._quadMesh.material.fragmentNode=this._rttNode;const t=e.getRenderTarget();e.setRenderTarget(this.renderTarget),this._quadMesh.render(e),e.setRenderTarget(t)}clone(){const e=new Ct(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e.referenceNode=this,e}}const Af=(o,...e)=>E(new Fb(E(o),...e)),Pb=(o,...e)=>o.isTextureNode?o:o.isPassNode?o.getTextureNode():Af(o,...e),Gs=N(([o,e,t],s)=>{let n;s.renderer.coordinateSystem===on?(o=w(o.x,o.y.oneMinus()).mul(2).sub(1),n=V(T(o,e),1)):n=V(T(o.x,o.y.oneMinus(),e).mul(2).sub(1),1);const r=V(t.mul(n));return r.xyz.div(r.w)}),Ub=N(([o,e])=>{const t=e.mul(V(o,1)),s=t.xy.div(t.w).mul(.5).add(.5).toVar();return w(s.x,s.y.oneMinus())}),Db=N(([o,e,t])=>{const s=Jt(ge(e)),n=Ce(o.mul(s)).toVar(),r=ge(e,n).toVar(),i=ge(e,n.sub(Ce(2,0))).toVar(),a=ge(e,n.sub(Ce(1,0))).toVar(),u=ge(e,n.add(Ce(1,0))).toVar(),c=ge(e,n.add(Ce(2,0))).toVar(),l=ge(e,n.add(Ce(0,2))).toVar(),d=ge(e,n.add(Ce(0,1))).toVar(),h=ge(e,n.sub(Ce(0,1))).toVar(),p=ge(e,n.sub(Ce(0,2))).toVar(),f=ae(K(g(2).mul(a).sub(i),r)).toVar(),m=ae(K(g(2).mul(u).sub(c),r)).toVar(),b=ae(K(g(2).mul(d).sub(l),r)).toVar(),_=ae(K(g(2).mul(h).sub(p),r)).toVar(),C=Gs(o,r,t).toVar(),M=f.lessThan(m).select(C.sub(Gs(o.sub(w(g(1).div(s.x),0)),a,t)),C.negate().add(Gs(o.add(w(g(1).div(s.x),0)),u,t))),P=b.lessThan(_).select(C.sub(Gs(o.add(w(0,g(1).div(s.y))),d,t)),C.negate().add(Gs(o.sub(w(0,g(1).div(s.y))),h,t)));return $t(Ai(M,P))});class Lb extends da{constructor(e,t,s=Float32Array){const n=ArrayBuffer.isView(e)?e:new s(e*t);super(n,t),this.isStorageInstancedBufferAttribute=!0}}class Ib extends kr{constructor(e,t,s=Float32Array){const n=ArrayBuffer.isView(e)?e:new s(e*t);super(n,t),this.isStorageBufferAttribute=!0}}class Vb extends vs{static get type(){return"StorageArrayElementNode"}constructor(e,t){super(e,t),this.isStorageArrayElementNode=!0}set storageBufferNode(e){this.node=e}get storageBufferNode(){return this.node}getMemberType(e,t){const s=this.storageBufferNode.structTypeNode;return s?s.getMemberType(e,t):"void"}setup(e){return e.isAvailable("storageBuffer")===!1&&this.node.isPBO===!0&&e.setupPBO(this.node),super.setup(e)}generate(e,t){let s;const n=e.context.assign;if(e.isAvailable("storageBuffer")===!1?this.node.isPBO===!0&&n!==!0&&(this.node.value.isInstancedBufferAttribute||e.shaderStage!=="compute")?s=e.generatePBO(this):s=this.node.build(e):s=super.generate(e),n!==!0){const r=this.getNodeType(e);s=e.format(s,r,t)}return s}}const Gb=A(Vb);class Ob extends Za{static get type(){return"StorageBufferNode"}constructor(e,t=null,s=0){let n,r=null;t&&t.isStruct?(n="struct",r=t.layout):t===null&&(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)?(n=Ql(e.itemSize),s=e.count):n=t,super(e,n,s),this.isStorageBufferNode=!0,this.structTypeNode=r,this.access=Ve.READ_WRITE,this.isAtomic=!1,this.isPBO=!1,this._attribute=null,this._varying=null,this.global=!0,e.isStorageBufferAttribute!==!0&&e.isStorageInstancedBufferAttribute!==!0&&(e.isInstancedBufferAttribute?e.isStorageInstancedBufferAttribute=!0:e.isStorageBufferAttribute=!0)}getHash(e){if(this.bufferCount===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getInputType(){return this.value.isIndirectStorageBufferAttribute?"indirectStorageBuffer":"storageBuffer"}element(e){return Gb(this,e)}setPBO(e){return this.isPBO=e,this}getPBO(){return this.isPBO}setAccess(e){return this.access=e,this}toReadOnly(){return this.setAccess(Ve.READ_ONLY)}setAtomic(e){return this.isAtomic=e,this}toAtomic(){return this.setAtomic(!0)}getAttributeData(){return this._attribute===null&&(this._attribute=ur(this.value),this._varying=ke(this._attribute)),{attribute:this._attribute,varying:this._varying}}getNodeType(e){if(this.structTypeNode!==null)return this.structTypeNode.getNodeType(e);if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.getNodeType(e);const{attribute:t}=this.getAttributeData();return t.getNodeType(e)}generate(e){if(this.structTypeNode!==null&&this.structTypeNode.build(e),e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.generate(e);const{attribute:t,varying:s}=this.getAttributeData(),n=s.build(e);return e.registerTransform(n,t),n}}const Ii=(o,e=null,t=0)=>E(new Ob(o,e,t)),kb=(o,e,t)=>(console.warn('THREE.TSL: "storageObject()" is deprecated. Use "storage().setPBO( true )" instead.'),Ii(o,e,t).setPBO(!0)),zb=(o,e="float")=>{let t,s;e.isStruct===!0?(t=e.layout.getLength(),s=ei("float")):(t=ba(e),s=ei(e));const n=new Ib(o,t,s);return Ii(n,e,o)},Wb=(o,e="float")=>{let t,s;e.isStruct===!0?(t=e.layout.getLength(),s=ei("float")):(t=ba(e),s=ei(e));const n=new Lb(o,t,s);return Ii(n,e,o)};class $b extends Ih{static get type(){return"VertexColorNode"}constructor(e=0){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const t=this.getAttributeName(e),s=e.hasGeometryAttribute(t);let n;return s===!0?n=super.generate(e):n=e.generateConst(this.nodeType,new he(1,1,1,1)),n}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const Hb=o=>E(new $b(o));class qb extends O{static get type(){return"PointUVNode"}constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const Xb=F(qb),xn=new Nm,no=new Ie;class Xe extends O{static get type(){return"SceneNode"}constructor(e=Xe.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,s=this.scene!==null?this.scene:e.scene;let n;return t===Xe.BACKGROUND_BLURRINESS?n=ie("backgroundBlurriness","float",s):t===Xe.BACKGROUND_INTENSITY?n=ie("backgroundIntensity","float",s):t===Xe.BACKGROUND_ROTATION?n=G("mat4").label("backgroundRotation").setGroup(k).onRenderUpdate(()=>{const r=s.background;return r!==null&&r.isTexture&&r.mapping!==bm?(xn.copy(s.backgroundRotation),xn.x*=-1,xn.y*=-1,xn.z*=-1,no.makeRotationFromEuler(xn)):no.identity(),no}):console.error("THREE.SceneNode: Unknown scope:",t),n}}Xe.BACKGROUND_BLURRINESS="backgroundBlurriness";Xe.BACKGROUND_INTENSITY="backgroundIntensity";Xe.BACKGROUND_ROTATION="backgroundRotation";const Ef=F(Xe,Xe.BACKGROUND_BLURRINESS),aa=F(Xe,Xe.BACKGROUND_INTENSITY),Cf=F(Xe,Xe.BACKGROUND_ROTATION);class jb extends Ct{static get type(){return"StorageTextureNode"}constructor(e,t,s=null){super(e,t),this.storeNode=s,this.isStorageTextureNode=!0,this.access=Ve.WRITE_ONLY}getInputType(){return"storageTexture"}setup(e){super.setup(e);const t=e.getNodeProperties(this);t.storeNode=this.storeNode}setAccess(e){return this.access=e,this}generate(e,t){let s;return this.storeNode!==null?s=this.generateStore(e):s=super.generate(e,t),s}toReadWrite(){return this.setAccess(Ve.READ_WRITE)}toReadOnly(){return this.setAccess(Ve.READ_ONLY)}toWriteOnly(){return this.setAccess(Ve.WRITE_ONLY)}generateStore(e){const t=e.getNodeProperties(this),{uvNode:s,storeNode:n}=t,r=super.generate(e,"property"),i=s.build(e,"uvec2"),a=n.build(e,"vec4"),u=e.generateTextureStore(e,r,i,a);e.addLineFlowCode(u,this)}}const wf=A(jb),Kb=(o,e,t)=>{const s=wf(o,e,t);return t!==null&&s.append(),s};class Yb extends Bi{static get type(){return"UserDataNode"}constructor(e,t,s=null){super(e,t,s),this.userData=s}updateReference(e){return this.reference=this.userData!==null?this.userData:e.object.userData,this.reference}}const Qb=(o,e,t)=>E(new Yb(o,e,t)),Ac=new WeakMap;class Zb extends Te{static get type(){return"VelocityNode"}constructor(){super("vec2"),this.projectionMatrix=null,this.updateType=z.OBJECT,this.updateAfterType=z.OBJECT,this.previousModelWorldMatrix=G(new Ie),this.previousProjectionMatrix=G(new Ie).setGroup(k),this.previousCameraViewMatrix=G(new Ie)}setProjectionMatrix(e){this.projectionMatrix=e}update({frameId:e,camera:t,object:s}){const n=Ec(s);this.previousModelWorldMatrix.value.copy(n);const r=Mf(t);r.frameId!==e&&(r.frameId=e,r.previousProjectionMatrix===void 0?(r.previousProjectionMatrix=new Ie,r.previousCameraViewMatrix=new Ie,r.currentProjectionMatrix=new Ie,r.currentCameraViewMatrix=new Ie,r.previousProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),r.previousCameraViewMatrix.copy(t.matrixWorldInverse)):(r.previousProjectionMatrix.copy(r.currentProjectionMatrix),r.previousCameraViewMatrix.copy(r.currentCameraViewMatrix)),r.currentProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),r.currentCameraViewMatrix.copy(t.matrixWorldInverse),this.previousProjectionMatrix.value.copy(r.previousProjectionMatrix),this.previousCameraViewMatrix.value.copy(r.previousCameraViewMatrix))}updateAfter({object:e}){Ec(e).copy(e.matrixWorld)}setup(){const e=this.projectionMatrix===null?Rs:G(this.projectionMatrix),t=this.previousCameraViewMatrix.mul(this.previousModelWorldMatrix),s=e.mul(As).mul(fe),n=this.previousProjectionMatrix.mul(t).mul(ai),r=s.xy.div(s.w),i=n.xy.div(n.w);return K(r,i)}}function Mf(o){let e=Ac.get(o);return e===void 0&&(e={},Ac.set(o,e)),e}function Ec(o,e=0){const t=Mf(o);let s=t[e];return s===void 0&&(t[e]=s=new Ie),s}const Jb=F(Zb),Bf=N(([o,e])=>je(1,o.oneMinus().div(e)).oneMinus()).setLayout({name:"blendBurn",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Ff=N(([o,e])=>je(o.div(e.oneMinus()),1)).setLayout({name:"blendDodge",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Pf=N(([o,e])=>o.oneMinus().mul(e.oneMinus()).oneMinus()).setLayout({name:"blendScreen",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Uf=N(([o,e])=>se(o.mul(2).mul(e),o.oneMinus().mul(2).mul(e.oneMinus()).oneMinus(),Ri(.5,o))).setLayout({name:"blendOverlay",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),eN=N(([o,e])=>{const t=e.a.add(o.a.mul(e.a.oneMinus()));return V(e.rgb.mul(e.a).add(o.rgb.mul(o.a).mul(e.a.oneMinus())).div(t),t)}).setLayout({name:"blendColor",type:"vec4",inputs:[{name:"base",type:"vec4"},{name:"blend",type:"vec4"}]}),tN=(...o)=>(console.warn('THREE.TSL: "burn" has been renamed. Use "blendBurn" instead.'),Bf(o)),sN=(...o)=>(console.warn('THREE.TSL: "dodge" has been renamed. Use "blendDodge" instead.'),Ff(o)),nN=(...o)=>(console.warn('THREE.TSL: "screen" has been renamed. Use "blendScreen" instead.'),Pf(o)),rN=(...o)=>(console.warn('THREE.TSL: "overlay" has been renamed. Use "blendOverlay" instead.'),Uf(o)),iN=N(([o])=>Tu(o.rgb)),oN=N(([o,e=g(1)])=>e.mix(Tu(o.rgb),o.rgb)),aN=N(([o,e=g(1)])=>{const t=Ne(o.r,o.g,o.b).div(3),s=o.r.max(o.g.max(o.b)),n=s.sub(t).mul(e).mul(-3);return se(o.rgb,s,n)}),uN=N(([o,e=g(1)])=>{const t=T(.57735,.57735,.57735),s=e.cos();return T(o.rgb.mul(s).add(t.cross(o.rgb).mul(e.sin()).add(t.mul(rs(t,o.rgb).mul(s.oneMinus())))))}),Tu=(o,e=T(yt.getLuminanceCoefficients(new j)))=>rs(o,e),cN=N(([o,e=T(1),t=T(0),s=T(1),n=g(1),r=T(yt.getLuminanceCoefficients(new j,ys))])=>{const i=o.rgb.dot(T(r)),a=xe(o.rgb.mul(e).add(t),0).toVar(),u=a.pow(s).toVar();return H(a.r.greaterThan(0),()=>{a.r.assign(u.r)}),H(a.g.greaterThan(0),()=>{a.g.assign(u.g)}),H(a.b.greaterThan(0),()=>{a.b.assign(u.b)}),a.assign(i.add(a.sub(i).mul(n))),V(a.rgb,o.a)});class lN extends Te{static get type(){return"PosterizeNode"}constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const dN=A(lN),hN=new We;class Df extends Ct{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return e.object.isQuadMesh&&this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class Cc extends Df{static get type(){return"PassMultipleTextureNode"}constructor(e,t,s=!1){super(e,null),this.textureName=t,this.previousTexture=s}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class Ft extends Te{static get type(){return"PassNode"}constructor(e,t,s,n={}){super("vec4"),this.scope=e,this.scene=t,this.camera=s,this.options=n,this._pixelRatio=1,this._width=1,this._height=1;const r=new ns;r.isRenderTargetTexture=!0,r.name="depth";const i=new ss(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:it,...n});i.texture.name="output",i.depthTexture=r,this.renderTarget=i,this._textures={output:i.texture,depth:r},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=G(0),this._cameraFar=G(0),this._mrt=null,this.isPassNode=!0,this.updateBeforeType=z.FRAME}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(e){let t=this._textures[e];return t===void 0&&(t=this.renderTarget.texture.clone(),t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)),t}getPreviousTexture(e){let t=this._previousTextures[e];return t===void 0&&(t=this.getTexture(e).clone(),this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(t!==void 0){const s=this._textures[e],n=this.renderTarget.textures.indexOf(s);this.renderTarget.textures[n]=t,this._textures[e]=t,this._previousTextures[e]=s,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return t===void 0&&(t=E(new Cc(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return t===void 0&&(this._textureNodes[e]===void 0&&this.getTextureNode(e),t=E(new Cc(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(t===void 0){const s=this._cameraNear,n=this._cameraFar;this._viewZNodes[e]=t=uu(this.getTextureNode(e),s,n)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(t===void 0){const s=this._cameraNear,n=this._cameraFar,r=this.getViewZNode(e);this._linearDepthNodes[e]=t=Ys(r,s,n)}return t}setup({renderer:e}){return this.renderTarget.samples=this.options.samples===void 0?e.samples:this.options.samples,e.backend.isWebGLBackend===!0&&(this.renderTarget.samples=0),this.renderTarget.texture.type=e.getColorBufferType(),this.scope===Ft.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:s,camera:n}=this;this._pixelRatio=t.getPixelRatio();const r=t.getSize(hN);this.setSize(r.width,r.height);const i=t.getRenderTarget(),a=t.getMRT();this._cameraNear.value=n.near,this._cameraFar.value=n.far;for(const u in this._previousTextures)this.toggleTexture(u);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(s,n),t.setRenderTarget(i),t.setMRT(a)}setSize(e,t){this._width=e,this._height=t;const s=this._width*this._pixelRatio,n=this._height*this._pixelRatio;this.renderTarget.setSize(s,n)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}Ft.COLOR="color";Ft.DEPTH="depth";const pN=(o,e,t)=>E(new Ft(Ft.COLOR,o,e,t)),fN=(o,e)=>E(new Df(o,e)),gN=(o,e,t)=>E(new Ft(Ft.DEPTH,o,e,t));class mN extends Ft{static get type(){return"ToonOutlinePassNode"}constructor(e,t,s,n,r){super(Ft.COLOR,e,t),this.colorNode=s,this.thicknessNode=n,this.alphaNode=r,this._materialCache=new WeakMap}updateBefore(e){const{renderer:t}=e,s=t.getRenderObjectFunction();t.setRenderObjectFunction((n,r,i,a,u,c,l,d)=>{if((u.isMeshToonMaterial||u.isMeshToonNodeMaterial)&&u.wireframe===!1){const h=this._getOutlineMaterial(u);t.renderObject(n,r,i,a,h,c,l,d)}t.renderObject(n,r,i,a,u,c,l,d)}),super.updateBefore(e),t.setRenderObjectFunction(s)}_createMaterial(){const e=new Se;e.isMeshToonOutlineMaterial=!0,e.name="Toon_Outline",e.side=vt;const t=Ke.negate(),s=Rs.mul(As),n=g(1),r=s.mul(V(fe,1)),i=s.mul(V(fe.add(t),1)),a=$t(r.sub(i));return e.vertexNode=r.add(a.mul(this.thicknessNode).mul(r.w).mul(n)),e.colorNode=V(this.colorNode,this.alphaNode),e}_getOutlineMaterial(e){let t=this._materialCache.get(e);return t===void 0&&(t=this._createMaterial(),this._materialCache.set(e,t)),t}}const yN=(o,e,t=new Pt(0,0,0),s=.003,n=1)=>E(new mN(o,e,E(t),E(s),E(n))),Lf=N(([o,e])=>o.mul(e).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),If=N(([o,e])=>(o=o.mul(e),o.div(o.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Vf=N(([o,e])=>{o=o.mul(e),o=o.sub(.004).max(0);const t=o.mul(o.mul(6.2).add(.5)),s=o.mul(o.mul(6.2).add(1.7)).add(.06);return t.div(s).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),xN=N(([o])=>{const e=o.mul(o.add(.0245786)).sub(90537e-9),t=o.mul(o.add(.432951).mul(.983729)).add(.238081);return e.div(t)}),Gf=N(([o,e])=>{const t=Oe(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),s=Oe(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return o=o.mul(e).div(.6),o=t.mul(o),o=xN(o),o=s.mul(o),o.clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),TN=Oe(T(1.6605,-.1246,-.0182),T(-.5876,1.1329,-.1006),T(-.0728,-.0083,1.1187)),_N=Oe(T(.6274,.0691,.0164),T(.3293,.9195,.088),T(.0433,.0113,.8956)),bN=N(([o])=>{const e=T(o).toVar(),t=T(e.mul(e)).toVar(),s=T(t.mul(t)).toVar();return g(15.5).mul(s.mul(t)).sub(W(40.14,s.mul(e))).add(W(31.96,s).sub(W(6.868,t.mul(e))).add(W(.4298,t).add(W(.1191,e).sub(.00232))))}),Of=N(([o,e])=>{const t=T(o).toVar(),s=Oe(T(.856627153315983,.137318972929847,.11189821299995),T(.0951212405381588,.761241990602591,.0767994186031903),T(.0482516061458583,.101439036467562,.811302368396859)),n=Oe(T(1.1271005818144368,-.1413297634984383,-.14132976349843826),T(-.11060664309660323,1.157823702216272,-.11060664309660294),T(-.016493938717834573,-.016493938717834257,1.2519364065950405)),r=g(-12.47393),i=g(4.026069);return t.mulAssign(e),t.assign(_N.mul(t)),t.assign(s.mul(t)),t.assign(xe(t,1e-10)),t.assign(bt(t)),t.assign(t.sub(r).div(i.sub(r))),t.assign(Rt(t,0,1)),t.assign(bN(t)),t.assign(n.mul(t)),t.assign(dt(xe(T(0),t),T(2.2))),t.assign(TN.mul(t)),t.assign(Rt(t,0,1)),t}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),kf=N(([o,e])=>{const t=g(.76),s=g(.15);o=o.mul(e);const n=je(o.r,je(o.g,o.b)),r=Pe(n.lessThan(.08),n.sub(W(6.25,n.mul(n))),.04);o.subAssign(r);const i=xe(o.r,xe(o.g,o.b));H(i.lessThan(t),()=>o);const a=K(1,t),u=K(1,a.mul(a).div(i.add(a.sub(t))));o.mulAssign(u.div(i));const c=K(1,ht(1,s.mul(i.sub(u)).add(1)));return se(o,T(u),c)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class Re extends O{static get type(){return"CodeNode"}constructor(e="",t=[],s=""){super("code"),this.isCodeNode=!0,this.code=e,this.includes=t,this.language=s}isGlobal(){return!0}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const n of t)n.build(e);const s=e.getCodeFromNode(this,this.getNodeType(e));return s.code=this.code,s.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const Vi=A(Re),NN=(o,e)=>Vi(o,e,"js"),SN=(o,e)=>Vi(o,e,"wgsl"),vN=(o,e)=>Vi(o,e,"glsl");class zf extends Re{static get type(){return"FunctionNode"}constructor(e="",t=[],s=""){super(e,t,s)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let s=t.nodeFunction;return s===void 0&&(s=e.parser.parseFunction(this.code),t.nodeFunction=s),s}generate(e,t){super.generate(e);const s=this.getNodeFunction(e),n=s.name,r=s.type,i=e.getCodeFromNode(this,r);n!==""&&(i.name=n);const a=e.getPropertyName(i),u=this.getNodeFunction(e).getCode(a);return i.code=u+`
`,t==="property"?a:e.format(`${a}()`,r,t)}}const Wf=(o,e=[],t="")=>{for(let r=0;r<e.length;r++){const i=e[r];typeof i=="function"&&(e[r]=i.functionNode)}const s=E(new zf(o,e,t)),n=(...r)=>s.call(...r);return n.functionNode=s,n},RN=(o,e)=>Wf(o,e,"glsl"),AN=(o,e)=>Wf(o,e,"wgsl");class EN extends O{static get type(){return"ScriptableValueNode"}constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outputType=null,this.events=new pa,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return this.outputType!==null}set value(e){this._value!==e&&(this._cache&&this.inputType==="URL"&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&this._cache===null&&this.inputType==="URL"&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&e.value!==null&&e.value!==void 0&&((this.inputType==="URL"||this.inputType==="String")&&typeof e.value=="string"||this.inputType==="Number"&&typeof e.value=="number"||this.inputType==="Vector2"&&e.value.isVector2||this.inputType==="Vector3"&&e.value.isVector3||this.inputType==="Vector4"&&e.value.isVector4||this.inputType==="Color"&&e.value.isColor||this.inputType==="Matrix3"&&e.value.isMatrix3||this.inputType==="Matrix4"&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:g()}serialize(e){super.serialize(e),this.value!==null?this.inputType==="ArrayBuffer"?e.value=ed(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;e.value!==null&&(e.inputType==="ArrayBuffer"?t=td(e.value):e.inputType==="Texture"?t=e.meta.textures[e.value]:t=e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const Xr=A(EN);class $f extends Map{get(e,t=null,...s){if(this.has(e))return super.get(e);if(t!==null){const n=t(...s);return this.set(e,n),n}}}class CN{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const jr=new $f;class wN extends O{static get type(){return"ScriptableNode"}constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new $f,this._output=Xr(),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const s=this._outputs;return s[e]===void 0?s[e]=Xr(t):s[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const s=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),s[e]=t,s[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),s[e]=t,s[e].events.addEventListener("refresh",this.onRefresh)):s[e]===void 0?(s[e]=Xr(t),s[e].events.addEventListener("refresh",this.onRefresh)):s[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const n=this.getObject()[e];if(typeof n=="function")return n(...t)}async callAsync(e,...t){const n=this.getObject()[e];if(typeof n=="function")return n.constructor.name==="AsyncFunction"?await n(...t):n(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){e!==null?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),this._object!==null)return this._object;const e=()=>this.refresh(),t=(c,l)=>this.setOutput(c,l),s=new CN(this),n=jr.get("THREE"),r=jr.get("TSL"),i=this.getMethod(),a=[s,this._local,jr,e,t,n,r];this._object=i(...a);const u=this._object.layout;if(u&&(u.cache===!1&&this._local.clear(),this._output.outputType=u.outputType||null,Array.isArray(u.elements)))for(const c of u.elements){const l=c.id||c.name;c.inputType&&(this.getParameter(l)===void 0&&this.setParameter(l,null),this.getParameter(l).inputType=c.inputType),c.outputType&&(this.getOutput(l)===void 0&&this.setOutput(l,null),this.getOutput(l).outputType=c.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const t in this.parameters){let s=this.parameters[t];s.isScriptableNode&&(s=s.getDefaultOutput()),s.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:g()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),this._method!==null)return this._method;const e=["parameters","local","global","refresh","setOutput","THREE","TSL"],s=["layout","init","main","dispose"].join(", "),n="var "+s+`; var output = {};
`,r=`
return { ...output, `+s+" };",i=n+this.codeNode.code+r;return this._method=new Function(...e,i),this._method}dispose(){this._method!==null&&(this._object&&typeof this._object.dispose=="function"&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}getCacheKey(e){const t=[Kl(this.source),this.getDefaultOutputNode().getCacheKey(e)];for(const s in this.parameters)t.push(this.parameters[s].getCacheKey(e));return mi(t)}set needsUpdate(e){e===!0&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return this.codeNode===null?this:(this._needsOutputUpdate===!0&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value,this)}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const MN=A(wN);function Hf(o){let e;const t=o.context.getViewZ;return t!==void 0&&(e=t(this)),(e||ye.z).negate()}const _u=N(([o,e],t)=>{const s=Hf(t);return At(o,e,s)}),bu=N(([o],e)=>{const t=Hf(e);return o.mul(o,t,t).negate().exp().oneMinus()}),Qn=N(([o,e])=>V(e.toFloat().mix(jn.rgb,o.toVec3()),jn.a));function BN(o,e,t){return console.warn('THREE.TSL: "rangeFog( color, near, far )" is deprecated. Use "fog( color, rangeFogFactor( near, far ) )" instead.'),Qn(o,_u(e,t))}function FN(o,e){return console.warn('THREE.TSL: "densityFog( color, density )" is deprecated. Use "fog( color, densityFogFactor( density ) )" instead.'),Qn(o,bu(e))}let cs=null,ls=null;class PN extends O{static get type(){return"RangeNode"}constructor(e=g(),t=g()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(Zt(this.minNode.value)),s=e.getTypeLength(Zt(this.maxNode.value));return t>s?t:s}getNodeType(e){return e.object.count>1?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let s=null;if(t.count>1){const n=this.minNode.value,r=this.maxNode.value,i=e.getTypeLength(Zt(n)),a=e.getTypeLength(Zt(r));cs=cs||new he,ls=ls||new he,cs.setScalar(0),ls.setScalar(0),i===1?cs.setScalar(n):n.isColor?cs.set(n.r,n.g,n.b,1):cs.set(n.x,n.y,n.z||0,n.w||0),a===1?ls.setScalar(r):r.isColor?ls.set(r.r,r.g,r.b,1):ls.set(r.x,r.y,r.z||0,r.w||0);const u=4,c=u*t.count,l=new Float32Array(c);for(let h=0;h<c;h++){const p=h%u,f=cs.getComponent(p),m=ls.getComponent(p);l[h]=Wl.lerp(f,m,Math.random())}const d=this.getNodeType(e);if(t.count<=4096)s=cr(l,"vec4",t.count).element(gr).convert(d);else{const h=new da(l,4);e.geometry.setAttribute("__range"+this.id,h),s=oi(h).convert(d)}}else s=g(0);return s}}const UN=A(PN);class DN extends O{static get type(){return"ComputeBuiltinNode"}constructor(e,t){super(t),this._builtinName=e}getHash(e){return this.getBuiltinName(e)}getNodeType(){return this.nodeType}setBuiltinName(e){return this._builtinName=e,this}getBuiltinName(){return this._builtinName}hasBuiltin(e){e.hasBuiltin(this._builtinName)}generate(e,t){const s=this.getBuiltinName(e),n=this.getNodeType(e);return e.shaderStage==="compute"?e.format(s,n,t):(console.warn(`ComputeBuiltinNode: Compute built-in value ${s} can not be accessed in the ${e.shaderStage} stage`),e.generateConst(n))}serialize(e){super.serialize(e),e.global=this.global,e._builtinName=this._builtinName}deserialize(e){super.deserialize(e),this.global=e.global,this._builtinName=e._builtinName}}const yr=(o,e)=>E(new DN(o,e)),LN=yr("numWorkgroups","uvec3"),IN=yr("workgroupId","uvec3"),VN=yr("globalId","uvec3"),GN=yr("localId","uvec3"),ON=yr("subgroupSize","uint");class kN extends O{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:s}=e;s.backend.isWebGLBackend===!0?e.addFlowCode(`	// ${t}Barrier 
`):e.addLineFlowCode(`${t}Barrier()`,this)}}const Nu=A(kN),zN=()=>Nu("workgroup").append(),WN=()=>Nu("storage").append(),$N=()=>Nu("texture").append();class HN extends vs{constructor(e,t){super(e,t),this.isWorkgroupInfoElementNode=!0}generate(e,t){let s;const n=e.context.assign;if(s=super.generate(e),n!==!0){const r=this.getNodeType(e);s=e.format(s,r,t)}return s}}class qN extends O{constructor(e,t,s=0){super(t),this.bufferType=t,this.bufferCount=s,this.isWorkgroupInfoNode=!0,this.elementType=t,this.scope=e}label(e){return this.name=e,this}setScope(e){return this.scope=e,this}getElementType(){return this.elementType}getInputType(){return`${this.scope}Array`}element(e){return E(new HN(this,e))}generate(e){return e.getScopedArray(this.name||`${this.scope}Array_${this.id}`,this.scope.toLowerCase(),this.bufferType,this.bufferCount)}}const XN=(o,e)=>E(new qN("Workgroup",o,e));class we extends Te{static get type(){return"AtomicFunctionNode"}constructor(e,t,s,n=null){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=s,this.storeNode=n}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=this.method,s=this.getNodeType(e),n=this.getInputType(e),r=this.pointerNode,i=this.valueNode,a=[];a.push(`&${r.build(e,n)}`),i!==null&&a.push(i.build(e,n));const u=`${e.getMethod(t,s)}( ${a.join(", ")} )`;if(this.storeNode!==null){const c=this.storeNode.build(e,n);e.addLineFlowCode(`${c} = ${u}`,this)}else e.addLineFlowCode(u,this)}}we.ATOMIC_LOAD="atomicLoad";we.ATOMIC_STORE="atomicStore";we.ATOMIC_ADD="atomicAdd";we.ATOMIC_SUB="atomicSub";we.ATOMIC_MAX="atomicMax";we.ATOMIC_MIN="atomicMin";we.ATOMIC_AND="atomicAnd";we.ATOMIC_OR="atomicOr";we.ATOMIC_XOR="atomicXor";const jN=A(we),Dt=(o,e,t,s=null)=>{const n=jN(o,e,t,s);return n.append(),n},KN=(o,e=null)=>Dt(we.ATOMIC_LOAD,o,null,e),YN=(o,e,t=null)=>Dt(we.ATOMIC_STORE,o,e,t),QN=(o,e,t=null)=>Dt(we.ATOMIC_ADD,o,e,t),ZN=(o,e,t=null)=>Dt(we.ATOMIC_SUB,o,e,t),JN=(o,e,t=null)=>Dt(we.ATOMIC_MAX,o,e,t),eS=(o,e,t=null)=>Dt(we.ATOMIC_MIN,o,e,t),tS=(o,e,t=null)=>Dt(we.ATOMIC_AND,o,e,t),sS=(o,e,t=null)=>Dt(we.ATOMIC_OR,o,e,t),nS=(o,e,t=null)=>Dt(we.ATOMIC_XOR,o,e,t);let Cr;function xr(o){Cr=Cr||new WeakMap;let e=Cr.get(o);return e===void 0&&Cr.set(o,e={}),e}function Su(o){const e=xr(o);return e.shadowMatrix||(e.shadowMatrix=G("mat4").setGroup(k).onRenderUpdate(()=>(o.castShadow!==!0&&o.shadow.updateMatrices(o),o.shadow.matrix)))}function qf(o){const e=xr(o);if(e.projectionUV===void 0){const t=Su(o).mul(kt);e.projectionUV=t.xyz.div(t.w)}return e.projectionUV}function vu(o){const e=xr(o);return e.position||(e.position=G(new j).setGroup(k).onRenderUpdate((t,s)=>s.value.setFromMatrixPosition(o.matrixWorld)))}function Xf(o){const e=xr(o);return e.targetPosition||(e.targetPosition=G(new j).setGroup(k).onRenderUpdate((t,s)=>s.value.setFromMatrixPosition(o.target.matrixWorld)))}function Gi(o){const e=xr(o);return e.viewPosition||(e.viewPosition=G(new j).setGroup(k).onRenderUpdate(({camera:t},s)=>{s.value=s.value||new j,s.value.setFromMatrixPosition(o.matrixWorld),s.value.applyMatrix4(t.matrixWorldInverse)}))}const Ru=o=>Ye.transformDirection(vu(o).sub(Xf(o))),rS=o=>o.sort((e,t)=>e.id-t.id),iS=(o,e)=>{for(const t of e)if(t.isAnalyticLightNode&&t.light.id===o)return t;return null},ro=new WeakMap;class Au extends O{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=T().toVar("totalDiffuse"),this.totalSpecularNode=T().toVar("totalSpecular"),this.outgoingLightNode=T().toVar("outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}customCacheKey(){const e=[],t=this._lights;for(let s=0;s<t.length;s++)e.push(t[s].id);return mi(e)}getHash(e){if(this._lightNodesHash===null){this._lightNodes===null&&this.setupLightsNode(e);const t=[];for(const s of this._lightNodes)t.push(s.getSelf().getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getDataFromNode(this);for(const s of t.nodes)s.build(e)}setupLightsNode(e){const t=[],s=this._lightNodes,n=rS(this._lights),r=e.renderer.library;for(const i of n)if(i.isNode)t.push(E(i));else{let a=null;if(s!==null&&(a=iS(i.id,s)),a===null){const u=r.getLightNodeClass(i.constructor);if(u===null){console.warn(`LightsNode.setupNodeLights: Light node not found for ${i.constructor.name}`);continue}let c=null;ro.has(i)?c=ro.get(i):(c=E(new u(i)),ro.set(i,c)),t.push(c)}}this._lightNodes=t}setupLights(e,t){for(const s of t)s.build(e)}setup(e){this._lightNodes===null&&this.setupLightsNode(e);const t=e.context,s=t.lightingModel;let n=this.outgoingLightNode;if(s){const{_lightNodes:r,totalDiffuseNode:i,totalSpecularNode:a}=this;t.outgoingLight=n;const u=e.addStack(),c=e.getDataFromNode(this);c.nodes=u.nodes,s.start(t,u,e),this.setupLights(e,r),s.indirect(t,u,e);const{backdrop:l,backdropAlpha:d}=t,{directDiffuse:h,directSpecular:p,indirectDiffuse:f,indirectSpecular:m}=t.reflectedLight;let b=h.add(f);l!==null&&(d!==null?b=T(d.mix(b,l)):b=T(l),t.material.transparent=!0),i.assign(b),a.assign(p.add(m)),n.assign(i.add(a)),s.finish(t,u,e),n=n.bypass(e.removeStack())}return n}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}const oS=(o=[])=>E(new Au).setLights(o);class aS extends O{static get type(){return"ShadowBaseNode"}constructor(e){super(),this.light=e,this.updateBeforeType=z.RENDER,this.isShadowBaseNode=!0}setupShadowPosition({material:e}){Eu.assign(e.shadowPositionNode||kt)}dispose(){this.updateBeforeType=z.NONE}}const Eu=T().toVar("shadowPositionWorld");function uS(o,e={}){return e.toneMapping=o.toneMapping,e.toneMappingExposure=o.toneMappingExposure,e.outputColorSpace=o.outputColorSpace,e.renderTarget=o.getRenderTarget(),e.activeCubeFace=o.getActiveCubeFace(),e.activeMipmapLevel=o.getActiveMipmapLevel(),e.renderObjectFunction=o.getRenderObjectFunction(),e.pixelRatio=o.getPixelRatio(),e.mrt=o.getMRT(),e.clearColor=o.getClearColor(e.clearColor||new Pt),e.clearAlpha=o.getClearAlpha(),e.autoClear=o.autoClear,e.scissorTest=o.getScissorTest(),e}function cS(o,e){return e=uS(o,e),o.setMRT(null),o.setRenderObjectFunction(null),o.setClearColor(0,1),o.autoClear=!0,e}function lS(o,e){o.toneMapping=e.toneMapping,o.toneMappingExposure=e.toneMappingExposure,o.outputColorSpace=e.outputColorSpace,o.setRenderTarget(e.renderTarget,e.activeCubeFace,e.activeMipmapLevel),o.setRenderObjectFunction(e.renderObjectFunction),o.setPixelRatio(e.pixelRatio),o.setMRT(e.mrt),o.setClearColor(e.clearColor,e.clearAlpha),o.autoClear=e.autoClear,o.setScissorTest(e.scissorTest)}function dS(o,e={}){return e.background=o.background,e.backgroundNode=o.backgroundNode,e.overrideMaterial=o.overrideMaterial,e}function hS(o,e){return e=dS(o,e),o.background=null,o.backgroundNode=null,o.overrideMaterial=null,e}function pS(o,e){o.background=e.background,o.backgroundNode=e.backgroundNode,o.overrideMaterial=e.overrideMaterial}function fS(o,e,t){return t=cS(o,t),t=hS(e,t),t}function gS(o,e,t){lS(o,t),pS(e,t)}const wc=new WeakMap,mS=N(([o,e,t])=>{let s=kt.sub(o).length();return s=s.sub(e).div(t.sub(e)),s=s.saturate(),s}),yS=o=>{const e=o.shadow.camera,t=ie("near","float",e).setGroup(k),s=ie("far","float",e).setGroup(k),n=kh(o);return mS(n,t,s)},xS=o=>{let e=wc.get(o);if(e===void 0){const t=o.isPointLight?yS(o):null;e=new Se,e.colorNode=V(0,0,0,1),e.depthNode=t,e.isShadowPassMaterial=!0,e.name="ShadowMaterial",e.fog=!1,wc.set(o,e)}return e},jf=N(({depthTexture:o,shadowCoord:e})=>X(o,e.xy).compare(e.z)),Kf=N(({depthTexture:o,shadowCoord:e,shadow:t})=>{const s=(m,b)=>X(o,m).compare(b),n=ie("mapSize","vec2",t).setGroup(k),r=ie("radius","float",t).setGroup(k),i=w(1).div(n),a=i.x.negate().mul(r),u=i.y.negate().mul(r),c=i.x.mul(r),l=i.y.mul(r),d=a.div(2),h=u.div(2),p=c.div(2),f=l.div(2);return Ne(s(e.xy.add(w(a,u)),e.z),s(e.xy.add(w(0,u)),e.z),s(e.xy.add(w(c,u)),e.z),s(e.xy.add(w(d,h)),e.z),s(e.xy.add(w(0,h)),e.z),s(e.xy.add(w(p,h)),e.z),s(e.xy.add(w(a,0)),e.z),s(e.xy.add(w(d,0)),e.z),s(e.xy,e.z),s(e.xy.add(w(p,0)),e.z),s(e.xy.add(w(c,0)),e.z),s(e.xy.add(w(d,f)),e.z),s(e.xy.add(w(0,f)),e.z),s(e.xy.add(w(p,f)),e.z),s(e.xy.add(w(a,l)),e.z),s(e.xy.add(w(0,l)),e.z),s(e.xy.add(w(c,l)),e.z)).mul(1/17)}),Yf=N(({depthTexture:o,shadowCoord:e,shadow:t})=>{const s=(l,d)=>X(o,l).compare(d),n=ie("mapSize","vec2",t).setGroup(k),r=w(1).div(n),i=r.x,a=r.y,u=e.xy,c=Ht(u.mul(n).add(.5));return u.subAssign(c.mul(r)),Ne(s(u,e.z),s(u.add(w(i,0)),e.z),s(u.add(w(0,a)),e.z),s(u.add(r),e.z),se(s(u.add(w(i.negate(),0)),e.z),s(u.add(w(i.mul(2),0)),e.z),c.x),se(s(u.add(w(i.negate(),a)),e.z),s(u.add(w(i.mul(2),a)),e.z),c.x),se(s(u.add(w(0,a.negate())),e.z),s(u.add(w(0,a.mul(2))),e.z),c.y),se(s(u.add(w(i,a.negate())),e.z),s(u.add(w(i,a.mul(2))),e.z),c.y),se(se(s(u.add(w(i.negate(),a.negate())),e.z),s(u.add(w(i.mul(2),a.negate())),e.z),c.x),se(s(u.add(w(i.negate(),a.mul(2))),e.z),s(u.add(w(i.mul(2),a.mul(2))),e.z),c.x),c.y)).mul(1/9)}),Qf=N(({depthTexture:o,shadowCoord:e})=>{const t=g(1).toVar(),s=X(o).sample(e.xy).rg,n=Ri(e.z,s.x);return H(n.notEqual(g(1)),()=>{const r=e.z.sub(s.x),i=xe(0,s.y.mul(s.y));let a=i.div(i.add(r.mul(r)));a=Rt(K(a,.3).div(.95-.3)),t.assign(Rt(xe(n,a)))}),t}),TS=N(({samples:o,radius:e,size:t,shadowPass:s})=>{const n=g(0).toVar(),r=g(0).toVar(),i=o.lessThanEqual(g(1)).select(g(0),g(2).div(o.sub(1))),a=o.lessThanEqual(g(1)).select(g(0),g(-1));ne({start:y(0),end:y(o),type:"int",condition:"<"},({i:c})=>{const l=a.add(g(c).mul(i)),d=s.sample(Ne(mr.xy,w(0,l).mul(e)).div(t)).x;n.addAssign(d),r.addAssign(d.mul(d))}),n.divAssign(o),r.divAssign(o);const u=Ut(r.sub(n.mul(n)));return w(n,u)}),_S=N(({samples:o,radius:e,size:t,shadowPass:s})=>{const n=g(0).toVar(),r=g(0).toVar(),i=o.lessThanEqual(g(1)).select(g(0),g(2).div(o.sub(1))),a=o.lessThanEqual(g(1)).select(g(0),g(-1));ne({start:y(0),end:y(o),type:"int",condition:"<"},({i:c})=>{const l=a.add(g(c).mul(i)),d=s.sample(Ne(mr.xy,w(l,0).mul(e)).div(t));n.addAssign(d.x),r.addAssign(Ne(d.y.mul(d.y),d.x.mul(d.x)))}),n.divAssign(o),r.divAssign(o);const u=Ut(r.sub(n.mul(n)));return w(n,u)}),bS=[jf,Kf,Yf,Qf];let io;const wr=new xu;class Zf extends aS{static get type(){return"ShadowNode"}constructor(e,t=null){super(e),this.shadow=t||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this._node=null,this.isShadowNode=!0}setupShadowFilter(e,{filterFn:t,depthTexture:s,shadowCoord:n,shadow:r}){const i=n.x.greaterThanEqual(0).and(n.x.lessThanEqual(1)).and(n.y.greaterThanEqual(0)).and(n.y.lessThanEqual(1)).and(n.z.lessThanEqual(1)),a=t({depthTexture:s,shadowCoord:n,shadow:r});return i.select(a,g(1))}setupShadowCoord(e,t){const{shadow:s}=this,{renderer:n}=e,r=ie("bias","float",s).setGroup(k);let i=t,a;if(s.camera.isOrthographicCamera||n.logarithmicDepthBuffer!==!0)i=i.xyz.div(i.w),a=i.z,n.coordinateSystem===on&&(a=a.mul(2).sub(1));else{const u=i.w;i=i.xy.div(u);const c=ie("near","float",s.camera).setGroup(k),l=ie("far","float",s.camera).setGroup(k);a=cu(u.negate(),c,l)}return i=T(i.x,i.y.oneMinus(),a.add(r)),i}getShadowFilterFn(e){return bS[e]}setupShadow(e){const{renderer:t}=e,{light:s,shadow:n}=this,r=t.shadowMap.type,i=new ns(n.mapSize.width,n.mapSize.height);i.compareFunction=ga;const a=e.createRenderTarget(n.mapSize.width,n.mapSize.height);if(a.depthTexture=i,n.camera.updateProjectionMatrix(),r===_r){i.compareFunction=null,this.vsmShadowMapVertical=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:Gn,type:it}),this.vsmShadowMapHorizontal=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:Gn,type:it});const _=X(i),C=X(this.vsmShadowMapVertical.texture),M=ie("blurSamples","float",n).setGroup(k),P=ie("radius","float",n).setGroup(k),I=ie("mapSize","vec2",n).setGroup(k);let B=this.vsmMaterialVertical||(this.vsmMaterialVertical=new Se);B.fragmentNode=TS({samples:M,radius:P,size:I,shadowPass:_}).context(e.getSharedContext()),B.name="VSMVertical",B=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new Se),B.fragmentNode=_S({samples:M,radius:P,size:I,shadowPass:C}).context(e.getSharedContext()),B.name="VSMHorizontal"}const u=ie("intensity","float",n).setGroup(k),c=ie("normalBias","float",n).setGroup(k),l=Su(s).mul(Eu.add(Mi.mul(c))),d=this.setupShadowCoord(e,l),h=n.filterNode||this.getShadowFilterFn(t.shadowMap.type)||null;if(h===null)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const p=r===_r?this.vsmShadowMapHorizontal.texture:i,f=this.setupShadowFilter(e,{filterFn:h,shadowTexture:a.texture,depthTexture:p,shadowCoord:d,shadow:n}),m=X(a.texture,d),b=se(1,f.rgb.mix(m,1),u.mul(m.a)).toVar();return this.shadowMap=a,this.shadow.map=a,b}setup(e){if(e.renderer.shadowMap.enabled!==!1)return N(()=>{let t=this._node;return this.setupShadowPosition(e),t===null&&(this._node=t=this.setupShadow(e)),e.material.shadowNode&&console.warn('THREE.NodeMaterial: ".shadowNode" is deprecated. Use ".castShadowNode" instead.'),e.material.receivedShadowNode&&(t=e.material.receivedShadowNode(t)),t})()}renderShadow(e){const{shadow:t,shadowMap:s,light:n}=this,{renderer:r,scene:i}=e;t.updateMatrices(n),s.setSize(t.mapSize.width,t.mapSize.height),r.render(i,t.camera)}updateShadow(e){const{shadowMap:t,light:s,shadow:n}=this,{renderer:r,scene:i,camera:a}=e,u=r.shadowMap.type,c=t.depthTexture.version;this._depthVersionCached=c,n.camera.layers.mask=a.layers.mask;const l=r.getRenderObjectFunction(),d=r.getMRT(),h=d?d.has("velocity"):!1;io=fS(r,i,io),i.overrideMaterial=xS(s),r.setRenderObjectFunction((p,f,m,b,_,C,...M)=>{(p.castShadow===!0||p.receiveShadow&&u===_r)&&(h&&(Jl(p).useVelocity=!0),p.onBeforeShadow(r,p,a,n.camera,b,f.overrideMaterial,C),r.renderObject(p,f,m,b,_,C,...M),p.onAfterShadow(r,p,a,n.camera,b,f.overrideMaterial,C))}),r.setRenderTarget(t),this.renderShadow(e),r.setRenderObjectFunction(l),s.isPointLight!==!0&&u===_r&&this.vsmPass(r),gS(r,i,io)}vsmPass(e){const{shadow:t}=this;this.vsmShadowMapVertical.setSize(t.mapSize.width,t.mapSize.height),this.vsmShadowMapHorizontal.setSize(t.mapSize.width,t.mapSize.height),e.setRenderTarget(this.vsmShadowMapVertical),wr.material=this.vsmMaterialVertical,wr.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),wr.material=this.vsmMaterialHorizontal,wr.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,this.vsmShadowMapVertical!==null&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),this.vsmShadowMapHorizontal!==null&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),super.dispose()}updateBefore(e){const{shadow:t}=this;(t.needsUpdate||t.autoUpdate)&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}}const Jf=(o,e)=>E(new Zf(o,e));class Cs extends un{static get type(){return"AnalyticLightNode"}constructor(e=null){super(),this.light=e,this.color=new Pt,this.colorNode=e&&e.colorNode||G(this.color).setGroup(k),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0,this.updateType=z.FRAME}customCacheKey(){return kn(this.light.id,this.light.castShadow?1:0)}getHash(){return this.light.uuid}setupShadowNode(){return Jf(this.light)}setupShadow(e){const{renderer:t}=e;if(t.shadowMap.enabled===!1)return;let s=this.shadowColorNode;if(s===null){const n=this.light.shadow.shadowNode;let r;n!==void 0?r=E(n):r=this.setupShadowNode(e),this.shadowNode=r,this.shadowColorNode=s=this.colorNode.mul(r),this.baseColorNode=this.colorNode}this.colorNode=s}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):this.shadowNode!==null&&(this.shadowNode.dispose(),this.shadowNode=null,this.shadowColorNode=null)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const Cu=N(o=>{const{lightDistance:e,cutoffDistance:t,decayExponent:s}=o,n=e.pow(s).max(.01).reciprocal();return t.greaterThan(0).select(n.mul(e.div(t).pow4().oneMinus().clamp().pow2()),n)}),NS=new Pt,mt=N(([o,e])=>{const t=o.toVar(),s=ae(t),n=ht(1,xe(s.x,xe(s.y,s.z)));s.mulAssign(n),t.mulAssign(n.mul(e.mul(2).oneMinus()));const r=w(t.xy).toVar(),a=e.mul(1.5).oneMinus();return H(s.z.greaterThanEqual(a),()=>{H(t.z.greaterThan(0),()=>{r.x.assign(K(4,t.x))})}).ElseIf(s.x.greaterThanEqual(a),()=>{const u=Kn(t.x);r.x.assign(t.z.mul(u).add(u.mul(2)))}).ElseIf(s.y.greaterThanEqual(a),()=>{const u=Kn(t.y);r.x.assign(t.x.add(u.mul(2)).add(2)),r.y.assign(t.z.mul(u).sub(2))}),w(.125,.25).mul(r).add(w(.375,.75)).flipY()}).setLayout({name:"cubeToUV",type:"vec2",inputs:[{name:"pos",type:"vec3"},{name:"texelSizeY",type:"float"}]}),SS=N(({depthTexture:o,bd3D:e,dp:t,texelSize:s})=>X(o,mt(e,s.y)).compare(t)),vS=N(({depthTexture:o,bd3D:e,dp:t,texelSize:s,shadow:n})=>{const r=ie("radius","float",n).setGroup(k),i=w(-1,1).mul(r).mul(s.y);return X(o,mt(e.add(i.xyy),s.y)).compare(t).add(X(o,mt(e.add(i.yyy),s.y)).compare(t)).add(X(o,mt(e.add(i.xyx),s.y)).compare(t)).add(X(o,mt(e.add(i.yyx),s.y)).compare(t)).add(X(o,mt(e,s.y)).compare(t)).add(X(o,mt(e.add(i.xxy),s.y)).compare(t)).add(X(o,mt(e.add(i.yxy),s.y)).compare(t)).add(X(o,mt(e.add(i.xxx),s.y)).compare(t)).add(X(o,mt(e.add(i.yxx),s.y)).compare(t)).mul(1/9)}),RS=N(({filterFn:o,depthTexture:e,shadowCoord:t,shadow:s})=>{const n=t.xyz.toVar(),r=n.length(),i=G("float").setGroup(k).onRenderUpdate(()=>s.camera.near),a=G("float").setGroup(k).onRenderUpdate(()=>s.camera.far),u=ie("bias","float",s).setGroup(k),c=G(s.mapSize).setGroup(k),l=g(1).toVar();return H(r.sub(a).lessThanEqual(0).and(r.sub(i).greaterThanEqual(0)),()=>{const d=r.sub(i).div(a.sub(i)).toVar();d.addAssign(u);const h=n.normalize(),p=w(1).div(c.mul(w(4,2)));l.assign(o({depthTexture:e,bd3D:h,dp:d,texelSize:p,shadow:s}))}),l}),Mc=new he,Bs=new We,Tn=new We;class AS extends Zf{static get type(){return"PointShadowNode"}constructor(e,t=null){super(e,t)}getShadowFilterFn(e){return e===ey?SS:vS}setupShadowCoord(e,t){return t}setupShadowFilter(e,{filterFn:t,shadowTexture:s,depthTexture:n,shadowCoord:r,shadow:i}){return RS({filterFn:t,shadowTexture:s,depthTexture:n,shadowCoord:r,shadow:i})}renderShadow(e){const{shadow:t,shadowMap:s,light:n}=this,{renderer:r,scene:i}=e,a=t.getFrameExtents();Tn.copy(t.mapSize),Tn.multiply(a),s.setSize(Tn.width,Tn.height),Bs.copy(t.mapSize);const u=r.autoClear,c=r.getClearColor(NS),l=r.getClearAlpha();r.autoClear=!1,r.setClearColor(t.clearColor,t.clearAlpha),r.clear();const d=t.getViewportCount();for(let h=0;h<d;h++){const p=t.getViewport(h),f=Bs.x*p.x,m=Tn.y-Bs.y-Bs.y*p.y;Mc.set(f,m,Bs.x*p.z,Bs.y*p.w),s.viewport.copy(Mc),t.updateMatrices(n,h),r.render(i,t.camera)}r.autoClear=u,r.setClearColor(c,l)}}const ES=(o,e)=>E(new AS(o,e)),eg=N(({color:o,lightViewPosition:e,cutoffDistance:t,decayExponent:s},n)=>{const r=n.context.lightingModel,i=e.sub(ye),a=i.normalize(),u=i.length(),c=Cu({lightDistance:u,cutoffDistance:t,decayExponent:s}),l=o.mul(c),d=n.context.reflectedLight;r.direct({lightDirection:a,lightColor:l,reflectedLight:d},n.stack,n)});class CS extends Cs{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=G(0).setGroup(k),this.decayExponentNode=G(2).setGroup(k)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setupShadowNode(){return ES(this.light)}setup(e){super.setup(e),eg({color:this.colorNode,lightViewPosition:Gi(this.light),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode}).append()}}const wS=N(([o=de()])=>{const e=o.mul(2),t=e.x.floor(),s=e.y.floor();return t.add(s).mod(2).sign()}),MS=N(([o=de()],{renderer:e,material:t})=>{const s=g(1).toVar(),n=qa(o.mul(2).sub(1));if(t.alphaToCoverage&&e.samples>1){const r=g(n.fwidth()).toVar();s.assign(At(r.oneMinus(),r.add(1),n).oneMinus())}else n.greaterThan(1).discard();return s}),Pn=N(([o,e,t])=>{const s=g(t).toVar(),n=g(e).toVar(),r=Wt(o).toVar();return Pe(r,n,s)}).setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),di=N(([o,e])=>{const t=Wt(e).toVar(),s=g(o).toVar();return Pe(t,s.negate(),s)}).setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),be=N(([o])=>{const e=g(o).toVar();return y(Nt(e))}).setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),le=N(([o,e])=>{const t=g(o).toVar();return e.assign(be(t)),t.sub(g(e))}),BS=N(([o,e,t,s,n,r])=>{const i=g(r).toVar(),a=g(n).toVar(),u=g(s).toVar(),c=g(t).toVar(),l=g(e).toVar(),d=g(o).toVar(),h=g(K(1,a)).toVar();return K(1,i).mul(d.mul(h).add(l.mul(a))).add(i.mul(c.mul(h).add(u.mul(a))))}).setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),FS=N(([o,e,t,s,n,r])=>{const i=g(r).toVar(),a=g(n).toVar(),u=T(s).toVar(),c=T(t).toVar(),l=T(e).toVar(),d=T(o).toVar(),h=g(K(1,a)).toVar();return K(1,i).mul(d.mul(h).add(l.mul(a))).add(i.mul(c.mul(h).add(u.mul(a))))}).setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]}),tg=Ue([BS,FS]),PS=N(([o,e,t,s,n,r,i,a,u,c,l])=>{const d=g(l).toVar(),h=g(c).toVar(),p=g(u).toVar(),f=g(a).toVar(),m=g(i).toVar(),b=g(r).toVar(),_=g(n).toVar(),C=g(s).toVar(),M=g(t).toVar(),P=g(e).toVar(),I=g(o).toVar(),B=g(K(1,p)).toVar(),U=g(K(1,h)).toVar();return g(K(1,d)).toVar().mul(U.mul(I.mul(B).add(P.mul(p))).add(h.mul(M.mul(B).add(C.mul(p))))).add(d.mul(U.mul(_.mul(B).add(b.mul(p))).add(h.mul(m.mul(B).add(f.mul(p))))))}).setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),US=N(([o,e,t,s,n,r,i,a,u,c,l])=>{const d=g(l).toVar(),h=g(c).toVar(),p=g(u).toVar(),f=T(a).toVar(),m=T(i).toVar(),b=T(r).toVar(),_=T(n).toVar(),C=T(s).toVar(),M=T(t).toVar(),P=T(e).toVar(),I=T(o).toVar(),B=g(K(1,p)).toVar(),U=g(K(1,h)).toVar();return g(K(1,d)).toVar().mul(U.mul(I.mul(B).add(P.mul(p))).add(h.mul(M.mul(B).add(C.mul(p))))).add(d.mul(U.mul(_.mul(B).add(b.mul(p))).add(h.mul(m.mul(B).add(f.mul(p))))))}).setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),sg=Ue([PS,US]),DS=N(([o,e,t])=>{const s=g(t).toVar(),n=g(e).toVar(),r=L(o).toVar(),i=L(r.bitAnd(L(7))).toVar(),a=g(Pn(i.lessThan(L(4)),n,s)).toVar(),u=g(W(2,Pn(i.lessThan(L(4)),s,n))).toVar();return di(a,Wt(i.bitAnd(L(1)))).add(di(u,Wt(i.bitAnd(L(2)))))}).setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),LS=N(([o,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),i=g(e).toVar(),a=L(o).toVar(),u=L(a.bitAnd(L(15))).toVar(),c=g(Pn(u.lessThan(L(8)),i,r)).toVar(),l=g(Pn(u.lessThan(L(4)),r,Pn(u.equal(L(12)).or(u.equal(L(14))),i,n))).toVar();return di(c,Wt(u.bitAnd(L(1)))).add(di(l,Wt(u.bitAnd(L(2)))))}).setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),Me=Ue([DS,LS]),IS=N(([o,e,t])=>{const s=g(t).toVar(),n=g(e).toVar(),r=an(o).toVar();return T(Me(r.x,n,s),Me(r.y,n,s),Me(r.z,n,s))}).setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),VS=N(([o,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),i=g(e).toVar(),a=an(o).toVar();return T(Me(a.x,i,r,n),Me(a.y,i,r,n),Me(a.z,i,r,n))}).setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),et=Ue([IS,VS]),GS=N(([o])=>{const e=g(o).toVar();return W(.6616,e)}).setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),OS=N(([o])=>{const e=g(o).toVar();return W(.982,e)}).setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),kS=N(([o])=>{const e=T(o).toVar();return W(.6616,e)}).setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),ng=Ue([GS,kS]),zS=N(([o])=>{const e=T(o).toVar();return W(.982,e)}).setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),rg=Ue([OS,zS]),Ze=N(([o,e])=>{const t=y(e).toVar(),s=L(o).toVar();return s.shiftLeft(t).bitOr(s.shiftRight(y(32).sub(t)))}).setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),ig=N(([o,e,t])=>{o.subAssign(t),o.bitXorAssign(Ze(t,y(4))),t.addAssign(e),e.subAssign(o),e.bitXorAssign(Ze(o,y(6))),o.addAssign(t),t.subAssign(e),t.bitXorAssign(Ze(e,y(8))),e.addAssign(o),o.subAssign(t),o.bitXorAssign(Ze(t,y(16))),t.addAssign(e),e.subAssign(o),e.bitXorAssign(Ze(o,y(19))),o.addAssign(t),t.subAssign(e),t.bitXorAssign(Ze(e,y(4))),e.addAssign(o)}),Tr=N(([o,e,t])=>{const s=L(t).toVar(),n=L(e).toVar(),r=L(o).toVar();return s.bitXorAssign(n),s.subAssign(Ze(n,y(14))),r.bitXorAssign(s),r.subAssign(Ze(s,y(11))),n.bitXorAssign(r),n.subAssign(Ze(r,y(25))),s.bitXorAssign(n),s.subAssign(Ze(n,y(16))),r.bitXorAssign(s),r.subAssign(Ze(s,y(4))),n.bitXorAssign(r),n.subAssign(Ze(r,y(14))),s.bitXorAssign(n),s.subAssign(Ze(n,y(24))),s}).setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),Ge=N(([o])=>{const e=L(o).toVar();return g(e).div(g(L(y(4294967295))))}).setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),St=N(([o])=>{const e=g(o).toVar();return e.mul(e).mul(e).mul(e.mul(e.mul(6).sub(15)).add(10))}).setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),WS=N(([o])=>{const e=y(o).toVar(),t=L(L(1)).toVar(),s=L(L(y(3735928559)).add(t.shiftLeft(L(2))).add(L(13))).toVar();return Tr(s.add(L(e)),s,s)}).setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),$S=N(([o,e])=>{const t=y(e).toVar(),s=y(o).toVar(),n=L(L(2)).toVar(),r=L().toVar(),i=L().toVar(),a=L().toVar();return r.assign(i.assign(a.assign(L(y(3735928559)).add(n.shiftLeft(L(2))).add(L(13))))),r.addAssign(L(s)),i.addAssign(L(t)),Tr(r,i,a)}).setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),HS=N(([o,e,t])=>{const s=y(t).toVar(),n=y(e).toVar(),r=y(o).toVar(),i=L(L(3)).toVar(),a=L().toVar(),u=L().toVar(),c=L().toVar();return a.assign(u.assign(c.assign(L(y(3735928559)).add(i.shiftLeft(L(2))).add(L(13))))),a.addAssign(L(r)),u.addAssign(L(n)),c.addAssign(L(s)),Tr(a,u,c)}).setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),qS=N(([o,e,t,s])=>{const n=y(s).toVar(),r=y(t).toVar(),i=y(e).toVar(),a=y(o).toVar(),u=L(L(4)).toVar(),c=L().toVar(),l=L().toVar(),d=L().toVar();return c.assign(l.assign(d.assign(L(y(3735928559)).add(u.shiftLeft(L(2))).add(L(13))))),c.addAssign(L(a)),l.addAssign(L(i)),d.addAssign(L(r)),ig(c,l,d),c.addAssign(L(n)),Tr(c,l,d)}).setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),XS=N(([o,e,t,s,n])=>{const r=y(n).toVar(),i=y(s).toVar(),a=y(t).toVar(),u=y(e).toVar(),c=y(o).toVar(),l=L(L(5)).toVar(),d=L().toVar(),h=L().toVar(),p=L().toVar();return d.assign(h.assign(p.assign(L(y(3735928559)).add(l.shiftLeft(L(2))).add(L(13))))),d.addAssign(L(c)),h.addAssign(L(u)),p.addAssign(L(a)),ig(d,h,p),d.addAssign(L(i)),h.addAssign(L(r)),Tr(d,h,p)}).setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]}),oe=Ue([WS,$S,HS,qS,XS]),jS=N(([o,e])=>{const t=y(e).toVar(),s=y(o).toVar(),n=L(oe(s,t)).toVar(),r=an().toVar();return r.x.assign(n.bitAnd(y(255))),r.y.assign(n.shiftRight(y(8)).bitAnd(y(255))),r.z.assign(n.shiftRight(y(16)).bitAnd(y(255))),r}).setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),KS=N(([o,e,t])=>{const s=y(t).toVar(),n=y(e).toVar(),r=y(o).toVar(),i=L(oe(r,n,s)).toVar(),a=an().toVar();return a.x.assign(i.bitAnd(y(255))),a.y.assign(i.shiftRight(y(8)).bitAnd(y(255))),a.z.assign(i.shiftRight(y(16)).bitAnd(y(255))),a}).setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),tt=Ue([jS,KS]),YS=N(([o])=>{const e=w(o).toVar(),t=y().toVar(),s=y().toVar(),n=g(le(e.x,t)).toVar(),r=g(le(e.y,s)).toVar(),i=g(St(n)).toVar(),a=g(St(r)).toVar(),u=g(tg(Me(oe(t,s),n,r),Me(oe(t.add(y(1)),s),n.sub(1),r),Me(oe(t,s.add(y(1))),n,r.sub(1)),Me(oe(t.add(y(1)),s.add(y(1))),n.sub(1),r.sub(1)),i,a)).toVar();return ng(u)}).setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),QS=N(([o])=>{const e=T(o).toVar(),t=y().toVar(),s=y().toVar(),n=y().toVar(),r=g(le(e.x,t)).toVar(),i=g(le(e.y,s)).toVar(),a=g(le(e.z,n)).toVar(),u=g(St(r)).toVar(),c=g(St(i)).toVar(),l=g(St(a)).toVar(),d=g(sg(Me(oe(t,s,n),r,i,a),Me(oe(t.add(y(1)),s,n),r.sub(1),i,a),Me(oe(t,s.add(y(1)),n),r,i.sub(1),a),Me(oe(t.add(y(1)),s.add(y(1)),n),r.sub(1),i.sub(1),a),Me(oe(t,s,n.add(y(1))),r,i,a.sub(1)),Me(oe(t.add(y(1)),s,n.add(y(1))),r.sub(1),i,a.sub(1)),Me(oe(t,s.add(y(1)),n.add(y(1))),r,i.sub(1),a.sub(1)),Me(oe(t.add(y(1)),s.add(y(1)),n.add(y(1))),r.sub(1),i.sub(1),a.sub(1)),u,c,l)).toVar();return rg(d)}).setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]}),wu=Ue([YS,QS]),ZS=N(([o])=>{const e=w(o).toVar(),t=y().toVar(),s=y().toVar(),n=g(le(e.x,t)).toVar(),r=g(le(e.y,s)).toVar(),i=g(St(n)).toVar(),a=g(St(r)).toVar(),u=T(tg(et(tt(t,s),n,r),et(tt(t.add(y(1)),s),n.sub(1),r),et(tt(t,s.add(y(1))),n,r.sub(1)),et(tt(t.add(y(1)),s.add(y(1))),n.sub(1),r.sub(1)),i,a)).toVar();return ng(u)}).setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),JS=N(([o])=>{const e=T(o).toVar(),t=y().toVar(),s=y().toVar(),n=y().toVar(),r=g(le(e.x,t)).toVar(),i=g(le(e.y,s)).toVar(),a=g(le(e.z,n)).toVar(),u=g(St(r)).toVar(),c=g(St(i)).toVar(),l=g(St(a)).toVar(),d=T(sg(et(tt(t,s,n),r,i,a),et(tt(t.add(y(1)),s,n),r.sub(1),i,a),et(tt(t,s.add(y(1)),n),r,i.sub(1),a),et(tt(t.add(y(1)),s.add(y(1)),n),r.sub(1),i.sub(1),a),et(tt(t,s,n.add(y(1))),r,i,a.sub(1)),et(tt(t.add(y(1)),s,n.add(y(1))),r.sub(1),i,a.sub(1)),et(tt(t,s.add(y(1)),n.add(y(1))),r,i.sub(1),a.sub(1)),et(tt(t.add(y(1)),s.add(y(1)),n.add(y(1))),r.sub(1),i.sub(1),a.sub(1)),u,c,l)).toVar();return rg(d)}).setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),Mu=Ue([ZS,JS]),ev=N(([o])=>{const e=g(o).toVar(),t=y(be(e)).toVar();return Ge(oe(t))}).setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),tv=N(([o])=>{const e=w(o).toVar(),t=y(be(e.x)).toVar(),s=y(be(e.y)).toVar();return Ge(oe(t,s))}).setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),sv=N(([o])=>{const e=T(o).toVar(),t=y(be(e.x)).toVar(),s=y(be(e.y)).toVar(),n=y(be(e.z)).toVar();return Ge(oe(t,s,n))}).setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),nv=N(([o])=>{const e=V(o).toVar(),t=y(be(e.x)).toVar(),s=y(be(e.y)).toVar(),n=y(be(e.z)).toVar(),r=y(be(e.w)).toVar();return Ge(oe(t,s,n,r))}).setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]}),rv=Ue([ev,tv,sv,nv]),iv=N(([o])=>{const e=g(o).toVar(),t=y(be(e)).toVar();return T(Ge(oe(t,y(0))),Ge(oe(t,y(1))),Ge(oe(t,y(2))))}).setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),ov=N(([o])=>{const e=w(o).toVar(),t=y(be(e.x)).toVar(),s=y(be(e.y)).toVar();return T(Ge(oe(t,s,y(0))),Ge(oe(t,s,y(1))),Ge(oe(t,s,y(2))))}).setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),av=N(([o])=>{const e=T(o).toVar(),t=y(be(e.x)).toVar(),s=y(be(e.y)).toVar(),n=y(be(e.z)).toVar();return T(Ge(oe(t,s,n,y(0))),Ge(oe(t,s,n,y(1))),Ge(oe(t,s,n,y(2))))}).setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),uv=N(([o])=>{const e=V(o).toVar(),t=y(be(e.x)).toVar(),s=y(be(e.y)).toVar(),n=y(be(e.z)).toVar(),r=y(be(e.w)).toVar();return T(Ge(oe(t,s,n,r,y(0))),Ge(oe(t,s,n,r,y(1))),Ge(oe(t,s,n,r,y(2))))}).setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]}),og=Ue([iv,ov,av,uv]),hi=N(([o,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),i=y(e).toVar(),a=T(o).toVar(),u=g(0).toVar(),c=g(1).toVar();return ne(i,()=>{u.addAssign(c.mul(wu(a))),c.mulAssign(n),a.mulAssign(r)}),u}).setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),ag=N(([o,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),i=y(e).toVar(),a=T(o).toVar(),u=T(0).toVar(),c=g(1).toVar();return ne(i,()=>{u.addAssign(c.mul(Mu(a))),c.mulAssign(n),a.mulAssign(r)}),u}).setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),cv=N(([o,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),i=y(e).toVar(),a=T(o).toVar();return w(hi(a,i,r,n),hi(a.add(T(y(19),y(193),y(17))),i,r,n))}).setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),lv=N(([o,e,t,s])=>{const n=g(s).toVar(),r=g(t).toVar(),i=y(e).toVar(),a=T(o).toVar(),u=T(ag(a,i,r,n)).toVar(),c=g(hi(a.add(T(y(19),y(193),y(17))),i,r,n)).toVar();return V(u,c)}).setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),dv=N(([o,e,t,s,n,r,i])=>{const a=y(i).toVar(),u=g(r).toVar(),c=y(n).toVar(),l=y(s).toVar(),d=y(t).toVar(),h=y(e).toVar(),p=w(o).toVar(),f=T(og(w(h.add(l),d.add(c)))).toVar(),m=w(f.x,f.y).toVar();m.subAssign(.5),m.mulAssign(u),m.addAssign(.5);const b=w(w(g(h),g(d)).add(m)).toVar(),_=w(b.sub(p)).toVar();return H(a.equal(y(2)),()=>ae(_.x).add(ae(_.y))),H(a.equal(y(3)),()=>xe(ae(_.x),ae(_.y))),rs(_,_)}).setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),hv=N(([o,e,t,s,n,r,i,a,u])=>{const c=y(u).toVar(),l=g(a).toVar(),d=y(i).toVar(),h=y(r).toVar(),p=y(n).toVar(),f=y(s).toVar(),m=y(t).toVar(),b=y(e).toVar(),_=T(o).toVar(),C=T(og(T(b.add(p),m.add(h),f.add(d)))).toVar();C.subAssign(.5),C.mulAssign(l),C.addAssign(.5);const M=T(T(g(b),g(m),g(f)).add(C)).toVar(),P=T(M.sub(_)).toVar();return H(c.equal(y(2)),()=>ae(P.x).add(ae(P.y)).add(ae(P.z))),H(c.equal(y(3)),()=>xe(xe(ae(P.x),ae(P.y)),ae(P.z))),rs(P,P)}).setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),cn=Ue([dv,hv]),pv=N(([o,e,t])=>{const s=y(t).toVar(),n=g(e).toVar(),r=w(o).toVar(),i=y().toVar(),a=y().toVar(),u=w(le(r.x,i),le(r.y,a)).toVar(),c=g(1e6).toVar();return ne({start:-1,end:y(1),name:"x",condition:"<="},({x:l})=>{ne({start:-1,end:y(1),name:"y",condition:"<="},({y:d})=>{const h=g(cn(u,l,d,i,a,n,s)).toVar();c.assign(je(c,h))})}),H(s.equal(y(0)),()=>{c.assign(Ut(c))}),c}).setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),fv=N(([o,e,t])=>{const s=y(t).toVar(),n=g(e).toVar(),r=w(o).toVar(),i=y().toVar(),a=y().toVar(),u=w(le(r.x,i),le(r.y,a)).toVar(),c=w(1e6,1e6).toVar();return ne({start:-1,end:y(1),name:"x",condition:"<="},({x:l})=>{ne({start:-1,end:y(1),name:"y",condition:"<="},({y:d})=>{const h=g(cn(u,l,d,i,a,n,s)).toVar();H(h.lessThan(c.x),()=>{c.y.assign(c.x),c.x.assign(h)}).ElseIf(h.lessThan(c.y),()=>{c.y.assign(h)})})}),H(s.equal(y(0)),()=>{c.assign(Ut(c))}),c}).setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),gv=N(([o,e,t])=>{const s=y(t).toVar(),n=g(e).toVar(),r=w(o).toVar(),i=y().toVar(),a=y().toVar(),u=w(le(r.x,i),le(r.y,a)).toVar(),c=T(1e6,1e6,1e6).toVar();return ne({start:-1,end:y(1),name:"x",condition:"<="},({x:l})=>{ne({start:-1,end:y(1),name:"y",condition:"<="},({y:d})=>{const h=g(cn(u,l,d,i,a,n,s)).toVar();H(h.lessThan(c.x),()=>{c.z.assign(c.y),c.y.assign(c.x),c.x.assign(h)}).ElseIf(h.lessThan(c.y),()=>{c.z.assign(c.y),c.y.assign(h)}).ElseIf(h.lessThan(c.z),()=>{c.z.assign(h)})})}),H(s.equal(y(0)),()=>{c.assign(Ut(c))}),c}).setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),mv=N(([o,e,t])=>{const s=y(t).toVar(),n=g(e).toVar(),r=T(o).toVar(),i=y().toVar(),a=y().toVar(),u=y().toVar(),c=T(le(r.x,i),le(r.y,a),le(r.z,u)).toVar(),l=g(1e6).toVar();return ne({start:-1,end:y(1),name:"x",condition:"<="},({x:d})=>{ne({start:-1,end:y(1),name:"y",condition:"<="},({y:h})=>{ne({start:-1,end:y(1),name:"z",condition:"<="},({z:p})=>{const f=g(cn(c,d,h,p,i,a,u,n,s)).toVar();l.assign(je(l,f))})})}),H(s.equal(y(0)),()=>{l.assign(Ut(l))}),l}).setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),yv=Ue([pv,mv]),xv=N(([o,e,t])=>{const s=y(t).toVar(),n=g(e).toVar(),r=T(o).toVar(),i=y().toVar(),a=y().toVar(),u=y().toVar(),c=T(le(r.x,i),le(r.y,a),le(r.z,u)).toVar(),l=w(1e6,1e6).toVar();return ne({start:-1,end:y(1),name:"x",condition:"<="},({x:d})=>{ne({start:-1,end:y(1),name:"y",condition:"<="},({y:h})=>{ne({start:-1,end:y(1),name:"z",condition:"<="},({z:p})=>{const f=g(cn(c,d,h,p,i,a,u,n,s)).toVar();H(f.lessThan(l.x),()=>{l.y.assign(l.x),l.x.assign(f)}).ElseIf(f.lessThan(l.y),()=>{l.y.assign(f)})})})}),H(s.equal(y(0)),()=>{l.assign(Ut(l))}),l}).setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),Tv=Ue([fv,xv]),_v=N(([o,e,t])=>{const s=y(t).toVar(),n=g(e).toVar(),r=T(o).toVar(),i=y().toVar(),a=y().toVar(),u=y().toVar(),c=T(le(r.x,i),le(r.y,a),le(r.z,u)).toVar(),l=T(1e6,1e6,1e6).toVar();return ne({start:-1,end:y(1),name:"x",condition:"<="},({x:d})=>{ne({start:-1,end:y(1),name:"y",condition:"<="},({y:h})=>{ne({start:-1,end:y(1),name:"z",condition:"<="},({z:p})=>{const f=g(cn(c,d,h,p,i,a,u,n,s)).toVar();H(f.lessThan(l.x),()=>{l.z.assign(l.y),l.y.assign(l.x),l.x.assign(f)}).ElseIf(f.lessThan(l.y),()=>{l.z.assign(l.y),l.y.assign(f)}).ElseIf(f.lessThan(l.z),()=>{l.z.assign(f)})})})}),H(s.equal(y(0)),()=>{l.assign(Ut(l))}),l}).setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),bv=Ue([gv,_v]),Nv=N(([o])=>{const e=o.y,t=o.z,s=T().toVar();return H(e.lessThan(1e-4),()=>{s.assign(T(t,t,t))}).Else(()=>{let n=o.x;n=n.sub(Nt(n)).mul(6).toVar();const r=y(Wa(n)),i=n.sub(g(r)),a=t.mul(e.oneMinus()),u=t.mul(e.mul(i).oneMinus()),c=t.mul(e.mul(i.oneMinus()).oneMinus());H(r.equal(y(0)),()=>{s.assign(T(t,c,a))}).ElseIf(r.equal(y(1)),()=>{s.assign(T(u,t,a))}).ElseIf(r.equal(y(2)),()=>{s.assign(T(a,t,c))}).ElseIf(r.equal(y(3)),()=>{s.assign(T(a,u,t))}).ElseIf(r.equal(y(4)),()=>{s.assign(T(c,a,t))}).Else(()=>{s.assign(T(t,a,u))})}),s}).setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),Sv=N(([o])=>{const e=T(o).toVar(),t=g(e.x).toVar(),s=g(e.y).toVar(),n=g(e.z).toVar(),r=g(je(t,je(s,n))).toVar(),i=g(xe(t,xe(s,n))).toVar(),a=g(i.sub(r)).toVar(),u=g().toVar(),c=g().toVar(),l=g().toVar();return l.assign(i),H(i.greaterThan(0),()=>{c.assign(a.div(i))}).Else(()=>{c.assign(0)}),H(c.lessThanEqual(0),()=>{u.assign(0)}).Else(()=>{H(t.greaterThanEqual(i),()=>{u.assign(s.sub(n).div(a))}).ElseIf(s.greaterThanEqual(i),()=>{u.assign(Ne(2,n.sub(t).div(a)))}).Else(()=>{u.assign(Ne(4,t.sub(s).div(a)))}),u.mulAssign(1/6),H(u.lessThan(0),()=>{u.addAssign(1)})}),T(u,c,l)}).setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]}),vv=N(([o])=>{const e=T(o).toVar(),t=Ea(La(e,T(.04045))).toVar(),s=T(e.div(12.92)).toVar(),n=T(dt(xe(e.add(T(.055)),T(0)).div(1.055),T(2.4))).toVar();return se(s,n,t)}).setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),ug=(o,e)=>{o=g(o),e=g(e);const t=w(e.dFdx(),e.dFdy()).length().mul(.7071067811865476);return At(o.sub(t),o.add(t),e)},cg=(o,e,t,s)=>se(o,e,t[s].clamp()),Rv=(o,e,t=de())=>cg(o,e,t,"x"),Av=(o,e,t=de())=>cg(o,e,t,"y"),lg=(o,e,t,s,n)=>se(o,e,ug(t,s[n])),Ev=(o,e,t,s=de())=>lg(o,e,t,s,"x"),Cv=(o,e,t,s=de())=>lg(o,e,t,s,"y"),wv=(o=1,e=0,t=de())=>t.mul(o).add(e),Mv=(o,e=1)=>(o=g(o),o.abs().pow(e).mul(o.sign())),Bv=(o,e=1,t=.5)=>g(o).sub(t).mul(e).add(t),Fv=(o=de(),e=1,t=0)=>wu(o.convert("vec2|vec3")).mul(e).add(t),Pv=(o=de(),e=1,t=0)=>Mu(o.convert("vec2|vec3")).mul(e).add(t),Uv=(o=de(),e=1,t=0)=>(o=o.convert("vec2|vec3"),V(Mu(o),wu(o.add(w(19,73)))).mul(e).add(t)),Dv=(o=de(),e=1)=>yv(o.convert("vec2|vec3"),e,y(1)),Lv=(o=de(),e=1)=>Tv(o.convert("vec2|vec3"),e,y(1)),Iv=(o=de(),e=1)=>bv(o.convert("vec2|vec3"),e,y(1)),Vv=(o=de())=>rv(o.convert("vec2|vec3")),Gv=(o=de(),e=3,t=2,s=.5,n=1)=>hi(o,y(e),t,s).mul(n),Ov=(o=de(),e=3,t=2,s=.5,n=1)=>cv(o,y(e),t,s).mul(n),kv=(o=de(),e=3,t=2,s=.5,n=1)=>ag(o,y(e),t,s).mul(n),zv=(o=de(),e=3,t=2,s=.5,n=1)=>lv(o,y(e),t,s).mul(n),Wv=N(([o,e,t])=>{const s=$t(o).toVar("nDir"),n=K(g(.5).mul(e.sub(t)),kt).div(s).toVar("rbmax"),r=K(g(-.5).mul(e.sub(t)),kt).div(s).toVar("rbmin"),i=T().toVar("rbminmax");i.x=s.x.greaterThan(g(0)).select(n.x,r.x),i.y=s.y.greaterThan(g(0)).select(n.y,r.y),i.z=s.z.greaterThan(g(0)).select(n.z,r.z);const a=je(je(i.x,i.y),i.z).toVar("correction");return kt.add(s.mul(a)).toVar("boxIntersection").sub(t)}),dg=N(([o,e])=>{const t=o.x,s=o.y,n=o.z;let r=e.element(0).mul(.886227);return r=r.add(e.element(1).mul(2*.511664).mul(s)),r=r.add(e.element(2).mul(2*.511664).mul(n)),r=r.add(e.element(3).mul(2*.511664).mul(t)),r=r.add(e.element(4).mul(2*.429043).mul(t).mul(s)),r=r.add(e.element(5).mul(2*.429043).mul(s).mul(n)),r=r.add(e.element(6).mul(n.mul(n).mul(.743125).sub(.247708))),r=r.add(e.element(7).mul(2*.429043).mul(t).mul(n)),r=r.add(e.element(8).mul(.429043).mul(W(t,t).sub(W(s,s)))),r});var WA=Object.freeze({__proto__:null,BRDF_GGX:ta,BRDF_Lambert:Ns,BasicShadowFilter:jf,Break:zp,Const:yh,Continue:Ix,DFGApprox:fu,D_GGX:nf,Discard:Dh,EPSILON:kd,F_Schlick:nn,Fn:N,INFINITY:wy,If:H,Loop:ne,NodeAccess:Ve,NodeShaderStage:$o,NodeType:ry,NodeUpdateType:z,PCFShadowFilter:Kf,PCFSoftShadowFilter:Yf,PI:ii,PI2:My,Return:Hy,Schlick_to_F0:of,ScriptableNodeResources:jr,ShaderNode:En,TBNViewMatrix:ms,VSMShadowFilter:Qf,V_GGX_SmithCorrelated:sf,Var:mh,abs:ae,acesFilmicToneMapping:Gf,acos:Xd,add:Ne,addMethodChaining:R,addNodeElement:Xy,agxToneMapping:Of,all:Ia,alphaT:si,and:Md,anisotropy:jt,anisotropyB:bs,anisotropyT:Cn,any:zd,append:ud,array:xd,arrayBuffer:vy,asin:qd,assign:Sd,atan:Oa,atan2:hh,atomicAdd:QN,atomicAnd:tS,atomicFunc:Dt,atomicLoad:KN,atomicMax:JN,atomicMin:eS,atomicOr:sS,atomicStore:YN,atomicSub:ZN,atomicXor:nS,attenuationColor:Pa,attenuationDistance:Fa,attribute:Et,attributeArray:zb,backgroundBlurriness:Ef,backgroundIntensity:aa,backgroundRotation:Cf,batch:Gp,billboarding:_b,bitAnd:Ud,bitNot:Dd,bitOr:Ld,bitXor:Id,bitangentGeometry:xx,bitangentLocal:Tx,bitangentView:Jh,bitangentWorld:_x,bitcast:By,blendBurn:Bf,blendColor:eN,blendDodge:Ff,blendOverlay:Uf,blendScreen:Pf,blur:pf,bool:Wt,buffer:cr,bufferAttribute:ur,bumpMap:np,burn:tN,bvec2:dd,bvec3:Ea,bvec4:gd,bypass:Bh,cache:Mn,call:vd,cameraFar:Yt,cameraIndex:Ja,cameraNear:Kt,cameraNormalMatrix:tx,cameraPosition:Oh,cameraProjectionMatrix:Rs,cameraProjectionMatrixInverse:Jy,cameraViewMatrix:Ye,cameraWorldMatrix:ex,cbrt:ah,cdl:cN,ceil:vi,checker:wS,cineonToneMapping:Vf,clamp:Rt,clearcoat:ti,clearcoatRoughness:qn,code:Vi,color:cd,colorSpaceToWorking:Qa,colorToDirection:hT,compute:Mh,cond:ph,context:Ei,convert:yd,convertColorSpace:Ly,convertToTexture:Pb,cos:Lt,cross:Ai,cubeTexture:sn,dFdx:ka,dFdy:za,dashSize:zr,defaultBuildStages:Ho,defaultShaderStages:sd,defined:zn,degrees:$d,deltaTime:vf,densityFog:FN,densityFogFactor:bu,depth:lu,depthPass:gN,difference:nh,diffuseColor:ee,directPointLight:eg,directionToColor:Kp,dispersion:Ua,distance:sh,div:ht,dodge:sN,dot:rs,drawIndex:Lp,dynamicBufferAttribute:wh,element:md,emissive:Ko,equal:Rd,equals:eh,equirectUV:du,exp:Va,exp2:tn,expression:ts,faceDirection:dr,faceForward:ja,faceforward:Fy,float:g,floor:Nt,fog:Qn,fract:Ht,frameGroup:bd,frameId:lb,frontFacing:$h,fwidth:Zd,gain:nb,gapSize:Yo,getConstNodeType:ad,getCurrentStack:Aa,getDirection:df,getDistanceAttenuation:Cu,getGeometryRoughness:tf,getNormalFromDepth:Db,getParallaxCorrectNormal:Wv,getRoughness:pu,getScreenPosition:Ub,getShIrradianceAt:dg,getTextureIndex:Nf,getViewPosition:Gs,globalId:VN,glsl:vN,glslFn:RN,grayscale:iN,greaterThan:La,greaterThanEqual:wd,hash:sb,highpModelNormalViewMatrix:hx,highpModelViewMatrix:dx,hue:uN,instance:Fx,instanceIndex:gr,instancedArray:Wb,instancedBufferAttribute:oi,instancedDynamicBufferAttribute:Qo,instancedMesh:Vp,int:y,inverseSqrt:Ga,inversesqrt:Py,invocationLocalIndex:Bx,invocationSubgroupIndex:Mx,ior:wn,iridescence:Ni,iridescenceIOR:wa,iridescenceThickness:Ma,ivec2:Ce,ivec3:hd,ivec4:pd,js:NN,label:gh,length:Ot,lengthSq:qa,lessThan:Ed,lessThanEqual:Cd,lightPosition:vu,lightProjectionUV:qf,lightShadowMatrix:Su,lightTargetDirection:Ru,lightTargetPosition:Xf,lightViewPosition:Gi,lightingContext:$p,lights:oS,linearDepth:ui,linearToneMapping:Lf,localId:GN,log:Si,log2:bt,logarithmicDepthToViewZ:Qx,loop:Vx,luminance:Tu,mat2:Ti,mat3:Oe,mat4:_s,matcapUV:gf,materialAO:Up,materialAlphaTest:rp,materialAnisotropy:Tp,materialAnisotropyVector:Vs,materialAttenuationColor:Ep,materialAttenuationDistance:Ap,materialClearcoat:pp,materialClearcoatNormal:gp,materialClearcoatRoughness:fp,materialColor:ip,materialDispersion:Pp,materialEmissive:ap,materialIOR:Rp,materialIridescence:_p,materialIridescenceIOR:bp,materialIridescenceThickness:Np,materialLightMap:ru,materialLineDashOffset:Bp,materialLineDashSize:wp,materialLineGapSize:Mp,materialLineScale:Cp,materialLineWidth:Cx,materialMetalness:dp,materialNormal:hp,materialOpacity:nu,materialPointSize:Fp,materialReference:Gt,materialReflectivity:Hr,materialRefractionRatio:Xh,materialRotation:mp,materialRoughness:lp,materialSheen:yp,materialSheenRoughness:xp,materialShininess:op,materialSpecular:up,materialSpecularColor:cp,materialSpecularIntensity:ea,materialSpecularStrength:Bn,materialThickness:vp,materialTransmission:Sp,max:xe,maxMipLevel:Vh,mediumpModelViewMatrix:Wh,metalness:Hn,min:je,mix:se,mixElement:lh,mod:$a,modInt:Da,modelDirection:ox,modelNormalMatrix:zh,modelPosition:ax,modelScale:ux,modelViewMatrix:As,modelViewPosition:cx,modelViewProjection:iu,modelWorldMatrix:rt,modelWorldMatrixInverse:lx,morphReference:Wp,mrt:Sf,mul:W,mx_aastep:ug,mx_cell_noise_float:Vv,mx_contrast:Bv,mx_fractal_noise_float:Gv,mx_fractal_noise_vec2:Ov,mx_fractal_noise_vec3:kv,mx_fractal_noise_vec4:zv,mx_hsvtorgb:Nv,mx_noise_float:Fv,mx_noise_vec3:Pv,mx_noise_vec4:Uv,mx_ramplr:Rv,mx_ramptb:Av,mx_rgbtohsv:Sv,mx_safepower:Mv,mx_splitlr:Ev,mx_splittb:Cv,mx_srgb_texture_to_lin_rec709:vv,mx_transform_uv:wv,mx_worley_noise_float:Dv,mx_worley_noise_vec2:Lv,mx_worley_noise_vec3:Iv,negate:jd,neutralToneMapping:kf,nodeArray:Ts,nodeImmutable:F,nodeObject:E,nodeObjects:rr,nodeProxy:A,normalFlat:Hh,normalGeometry:Ci,normalLocal:Ke,normalMap:Jo,normalView:at,normalWorld:wi,normalize:$t,not:Fd,notEqual:Ad,numWorkgroups:LN,objectDirection:sx,objectGroup:Ca,objectPosition:kh,objectScale:rx,objectViewPosition:ix,objectWorldMatrix:nx,oneMinus:Kd,or:Bd,orthographicDepthToViewZ:Yx,oscSawtooth:yb,oscSine:fb,oscSquare:gb,oscTriangle:mb,output:jn,outputStruct:eb,overlay:rN,overloadingFn:Ue,parabola:oa,parallaxDirection:tp,parallaxUV:Nx,parameter:j_,pass:pN,passTexture:fN,pcurve:rb,perspectiveDepthToViewZ:uu,pmremTexture:gu,pointUV:Xb,pointWidth:Ay,positionGeometry:lr,positionLocal:fe,positionPrevious:ai,positionView:ye,positionViewDirection:ue,positionWorld:kt,positionWorldDirection:eu,posterize:dN,pow:dt,pow2:Ha,pow3:rh,pow4:ih,property:Nd,radians:Wd,rand:ch,range:UN,rangeFog:BN,rangeFogFactor:_u,reciprocal:Qd,reference:ie,referenceBuffer:Zo,reflect:th,reflectVector:Yh,reflectView:jh,reflector:Cb,refract:Xa,refractVector:Qh,refractView:Kh,reinhardToneMapping:If,remainder:Od,remap:Ph,remapClamp:Uh,renderGroup:k,renderOutput:Lh,rendererReference:Ah,rotate:Li,rotateUV:xb,roughness:xt,round:Yd,rtt:Af,sRGBTransferEOTF:_h,sRGBTransferOETF:bh,sampler:Yy,saturate:uh,saturation:oN,screen:nN,screenCoordinate:mr,screenSize:Yn,screenUV:Mt,scriptable:MN,scriptableValue:Xr,select:Pe,setCurrentStack:Wn,shaderStages:qo,shadow:Jf,shadowPositionWorld:Eu,shapeCircle:MS,sharedUniformGroup:_i,sheen:gs,sheenRoughness:bi,shiftLeft:Vd,shiftRight:Gd,shininess:ni,sign:Kn,sin:Je,sinc:ib,skinning:Dx,skinningReference:kp,smoothstep:At,smoothstepElement:dh,specularColor:$e,specularF90:Xn,spherizeUV:Tb,split:Ry,spritesheetUV:Sb,sqrt:Ut,stack:qr,step:Ri,storage:Ii,storageBarrier:WN,storageObject:kb,storageTexture:wf,string:Sy,struct:J_,sub:K,subgroupIndex:wx,subgroupSize:ON,tan:Hd,tangentGeometry:Fi,tangentLocal:hr,tangentView:pr,tangentWorld:Zh,temp:xh,texture:X,texture3D:N_,textureBarrier:$N,textureBicubic:cf,textureCubeUV:hf,textureLoad:ge,textureSize:Jt,textureStore:Kb,thickness:Ba,time:Es,timerDelta:pb,timerGlobal:hb,timerLocal:db,toOutputColorSpace:Nh,toWorkingColorSpace:Sh,toneMapping:Eh,toneMappingExposure:Ch,toonOutlinePass:yN,transformDirection:oh,transformNormal:qh,transformNormalToView:tu,transformedBentNormalView:sp,transformedBitangentView:ep,transformedBitangentWorld:bx,transformedClearcoatNormalView:Ws,transformedNormalView:me,transformedNormalWorld:Mi,transformedTangentView:su,transformedTangentWorld:yx,transmission:ri,transpose:Jd,triNoise3D:ab,triplanarTexture:Rb,triplanarTextures:Rf,trunc:Wa,tslFn:Ny,uint:L,uniform:G,uniformArray:lt,uniformGroup:_d,uniforms:Zy,userData:Qb,uv:de,uvec2:ld,uvec3:an,uvec4:fd,varying:ke,varyingProperty:$n,vec2:w,vec3:T,vec4:V,vectorComponents:Ss,velocity:Jb,vertexColor:Hb,vertexIndex:Dp,vertexStage:Th,vibrance:aN,viewZToLogarithmicDepth:cu,viewZToOrthographicDepth:Ys,viewZToPerspectiveDepth:Xp,viewport:Ks,viewportBottomLeft:Xx,viewportCoordinate:qp,viewportDepthTexture:au,viewportLinearDepth:Zx,viewportMipTexture:ou,viewportResolution:Hx,viewportSafeUV:bb,viewportSharedTexture:dT,viewportSize:Hp,viewportTexture:jx,viewportTopLeft:qx,viewportUV:$x,wgsl:SN,wgslFn:AN,workgroupArray:XN,workgroupBarrier:zN,workgroupId:IN,workingToColorSpace:vh,xor:Pd});const ct=new mu;class $v extends is{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,s){const n=this.renderer,r=this.nodes.getBackgroundNode(e)||e.background;let i=!1;if(r===null)n._clearColor.getRGB(ct,ys),ct.a=n._clearColor.a;else if(r.isColor===!0)r.getRGB(ct,ys),ct.a=1,i=!0;else if(r.isNode===!0){const u=this.get(e),c=r;ct.copy(n._clearColor);let l=u.backgroundMesh;if(l===void 0){const h=Ei(V(c).mul(aa),{getUV:()=>Cf.mul(wi),getTextureLevel:()=>Ef});let p=iu;p=p.setZ(p.w);const f=new Se;f.name="Background.material",f.side=vt,f.depthTest=!1,f.depthWrite=!1,f.fog=!1,f.lights=!1,f.vertexNode=p,f.colorNode=h,u.backgroundMeshNode=h,u.backgroundMesh=l=new Qs(new Hg(1,32,32),f),l.frustumCulled=!1,l.name="Background.mesh",l.onBeforeRender=function(m,b,_){this.matrixWorld.copyPosition(_.matrixWorld)}}const d=c.getCacheKey();u.backgroundCacheKey!==d&&(u.backgroundMeshNode.node=V(c).mul(aa),u.backgroundMeshNode.needsUpdate=!0,l.material.needsUpdate=!0,u.backgroundCacheKey=d),t.unshift(l,l.geometry,l.material,0,0,null,null)}else console.error("THREE.Renderer: Unsupported background configuration.",r);const a=n.xr.getEnvironmentBlendMode();if(a==="additive"?ct.set(0,0,0,1):a==="alpha-blend"&&ct.set(0,0,0,0),n.autoClear===!0||i===!0){const u=s.clearColorValue;u.r=ct.r,u.g=ct.g,u.b=ct.b,u.a=ct.a,(n.backend.isWebGLBackend===!0||n.alpha===!0)&&(u.r*=u.a,u.g*=u.a,u.b*=u.a),s.depthClearValue=n._clearDepth,s.stencilClearValue=n._clearStencil,s.clearColor=n.autoClearColor===!0,s.clearDepth=n.autoClearDepth===!0,s.clearStencil=n.autoClearStencil===!0}else s.clearColor=!1,s.clearDepth=!1,s.clearStencil=!1}}let Hv=0;class ua{constructor(e="",t=[],s=0,n=[]){this.name=e,this.bindings=t,this.index=s,this.bindingsReference=n,this.id=Hv++}}class qv{constructor(e,t,s,n,r,i,a,u,c,l=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=s,this.transforms=l,this.nodeAttributes=n,this.bindings=r,this.updateNodes=i,this.updateBeforeNodes=a,this.updateAfterNodes=u,this.observer=c,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings)if(t.bindings[0].groupNode.shared!==!0){const n=new ua(t.name,[],t.index,t);e.push(n);for(const r of t.bindings)n.bindings.push(r.clone())}else e.push(t);return e}}class Bc{constructor(e,t,s=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=s}}class Xv{constructor(e,t,s){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=s.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class hg{constructor(e,t,s=!1,n=null){this.isNodeVar=!0,this.name=e,this.type=t,this.readOnly=s,this.count=n}}class jv extends hg{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}}class Kv{constructor(e,t,s=""){this.name=e,this.type=t,this.code=s,Object.defineProperty(this,"isNodeCode",{value:!0})}}let Yv=0;class oo{constructor(e=null){this.id=Yv++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return t===void 0&&this.parent!==null&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class Qv{constructor(e,t){this.name=e,this.members=t,this.output=!1}}class os{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class Zv extends os{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class Jv extends os{constructor(e,t=new We){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class eR extends os{constructor(e,t=new j){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class tR extends os{constructor(e,t=new he){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class sR extends os{constructor(e,t=new Pt){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class nR extends os{constructor(e,t=new zl){super(e,t),this.isMatrix2Uniform=!0,this.boundary=16,this.itemSize=4}}class rR extends os{constructor(e,t=new Zn){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class iR extends os{constructor(e,t=new Ie){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class oR extends Zv{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class aR extends Jv{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class uR extends eR{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class cR extends tR{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class lR extends sR{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class dR extends nR{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class hR extends rR{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class pR extends iR{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}const $s=4,Fc=[.125,.215,.35,.446,.526,.582],ps=20,ao=new ol(-1,1,1,-1,0,1),fR=new Kr(90,1),Pc=new Pt;let uo=null,co=0,lo=0;const hs=(1+Math.sqrt(5))/2,Fs=1/hs,Uc=[new j(-hs,Fs,0),new j(hs,Fs,0),new j(-Fs,0,hs),new j(Fs,0,hs),new j(0,hs,-Fs),new j(0,hs,Fs),new j(-1,1,-1),new j(1,1,-1),new j(-1,1,1),new j(1,1,1)],pg=new WeakMap,gR=[3,1,5,0,4,2],ho=df(de(),Et("faceIndex")).normalize(),Bu=T(ho.x,ho.y,ho.z);class mR{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}get _hasInitialized(){return this._renderer.hasInitialized()}fromScene(e,t=0,s=.1,n=100,r=null){if(this._setSize(256),this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromScene() called before the backend is initialized. Try using .fromSceneAsync() instead.");const a=r||this._allocateTargets();return this.fromSceneAsync(e,t,s,n,a),a}uo=this._renderer.getRenderTarget(),co=this._renderer.getActiveCubeFace(),lo=this._renderer.getActiveMipmapLevel();const i=r||this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,s,n,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}async fromSceneAsync(e,t=0,s=.1,n=100,r=null){return this._hasInitialized===!1&&await this._renderer.init(),this.fromScene(e,t,s,n,r)}fromEquirectangular(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromEquirectangular() called before the backend is initialized. Try using .fromEquirectangularAsync() instead."),this._setSizeFromTexture(e);const s=t||this._allocateTargets();return this.fromEquirectangularAsync(e,s),s}return this._fromTexture(e,t)}async fromEquirectangularAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}fromCubemap(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromCubemap() called before the backend is initialized. Try using .fromCubemapAsync() instead."),this._setSizeFromTexture(e);const s=t||this._allocateTargets();return this.fromCubemapAsync(e,t),s}return this._fromTexture(e,t)}async fromCubemapAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}async compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Lc(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Ic(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSizeFromTexture(e){e.mapping===Zs||e.mapping===Js?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4)}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(uo,co,lo),e.scissorTest=!1,Mr(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSizeFromTexture(e),uo=this._renderer.getRenderTarget(),co=this._renderer.getActiveCubeFace(),lo=this._renderer.getActiveMipmapLevel();const s=t||this._allocateTargets();return this._textureToCubeUV(e,s),this._applyPMREM(s),this._cleanup(s),s}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,s={magFilter:zt,minFilter:zt,generateMipmaps:!1,type:it,format:es,colorSpace:ys},n=Dc(e,t,s);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Dc(e,t,s);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=yR(r)),this._blurMaterial=xR(r,e,t)}return n}async _compileMaterial(e){const t=new Qs(this._lodPlanes[0],e);await this._renderer.compile(t,ao)}_sceneToCubeUV(e,t,s,n){const r=fR;r.near=t,r.far=s;const i=[1,1,1,1,-1,1],a=[1,-1,1,-1,1,-1],u=this._renderer,c=u.autoClear;u.getClearColor(Pc),u.autoClear=!1;let l=this._backgroundBox;if(l===null){const p=new Ol({name:"PMREM.Background",side:vt,depthWrite:!1,depthTest:!1});l=new Qs(new jl,p)}let d=!1;const h=e.background;h?h.isColor&&(l.material.color.copy(h),e.background=null,d=!0):(l.material.color.copy(Pc),d=!0),u.setRenderTarget(n),u.clear(),d&&u.render(l,r);for(let p=0;p<6;p++){const f=p%3;f===0?(r.up.set(0,i[p],0),r.lookAt(a[p],0,0)):f===1?(r.up.set(0,0,i[p]),r.lookAt(0,a[p],0)):(r.up.set(0,i[p],0),r.lookAt(0,0,a[p]));const m=this._cubeSize;Mr(n,f*m,p>2?m:0,m,m),u.render(e,r)}u.autoClear=c,e.background=h}_textureToCubeUV(e,t){const s=this._renderer,n=e.mapping===Zs||e.mapping===Js;n?this._cubemapMaterial===null&&(this._cubemapMaterial=Lc(e)):this._equirectMaterial===null&&(this._equirectMaterial=Ic(e));const r=n?this._cubemapMaterial:this._equirectMaterial;r.fragmentNode.value=e;const i=this._lodMeshes[0];i.material=r;const a=this._cubeSize;Mr(t,0,0,3*a,2*a),s.setRenderTarget(t),s.render(i,ao)}_applyPMREM(e){const t=this._renderer,s=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let r=1;r<n;r++){const i=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=Uc[(n-r-1)%Uc.length];this._blur(e,r-1,r,i,a)}t.autoClear=s}_blur(e,t,s,n,r){const i=this._pingPongRenderTarget;this._halfBlur(e,i,t,s,n,"latitudinal",r),this._halfBlur(i,e,s,s,n,"longitudinal",r)}_halfBlur(e,t,s,n,r,i,a){const u=this._renderer,c=this._blurMaterial;i!=="latitudinal"&&i!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const l=3,d=this._lodMeshes[n];d.material=c;const h=pg.get(c),p=this._sizeLods[s]-1,f=isFinite(r)?Math.PI/(2*p):2*Math.PI/(2*ps-1),m=r/f,b=isFinite(r)?1+Math.floor(l*m):ps;b>ps&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${b} samples when the maximum is set to ${ps}`);const _=[];let C=0;for(let U=0;U<ps;++U){const D=U/m,Y=Math.exp(-D*D/2);_.push(Y),U===0?C+=Y:U<b&&(C+=2*Y)}for(let U=0;U<_.length;U++)_[U]=_[U]/C;e.texture.frame=(e.texture.frame||0)+1,h.envMap.value=e.texture,h.samples.value=b,h.weights.array=_,h.latitudinal.value=i==="latitudinal"?1:0,a&&(h.poleAxis.value=a);const{_lodMax:M}=this;h.dTheta.value=f,h.mipInt.value=M-s;const P=this._sizeLods[n],I=3*P*(n>M-$s?n-M+$s:0),B=4*(this._cubeSize-P);Mr(t,I,B,3*P,2*P),u.setRenderTarget(t),u.render(d,ao)}}function yR(o){const e=[],t=[],s=[],n=[];let r=o;const i=o-$s+1+Fc.length;for(let a=0;a<i;a++){const u=Math.pow(2,r);t.push(u);let c=1/u;a>o-$s?c=Fc[a-o+$s-1]:a===0&&(c=0),s.push(c);const l=1/(u-2),d=-l,h=1+l,p=[d,d,h,d,h,h,d,d,h,h,d,h],f=6,m=6,b=3,_=2,C=1,M=new Float32Array(b*m*f),P=new Float32Array(_*m*f),I=new Float32Array(C*m*f);for(let U=0;U<f;U++){const D=U%3*2/3-1,Y=U>2?0:-1,Q=[D,Y,0,D+2/3,Y,0,D+2/3,Y+1,0,D,Y,0,D+2/3,Y+1,0,D,Y+1,0],Z=gR[U];M.set(Q,b*m*Z),P.set(p,_*m*Z);const te=[Z,Z,Z,Z,Z,Z];I.set(te,C*m*Z)}const B=new Hl;B.setAttribute("position",new kr(M,b)),B.setAttribute("uv",new kr(P,_)),B.setAttribute("faceIndex",new kr(I,C)),e.push(B),n.push(new Qs(B,null)),r>$s&&r--}return{lodPlanes:e,sizeLods:t,sigmas:s,lodMeshes:n}}function Dc(o,e,t){const s=new ss(o,e,t);return s.texture.mapping=Ao,s.texture.name="PMREM.cubeUv",s.texture.isPMREMTexture=!0,s.scissorTest=!0,s}function Mr(o,e,t,s,n){o.viewport.set(e,t,s,n),o.scissor.set(e,t,s,n)}function Fu(o){const e=new Se;return e.depthTest=!1,e.depthWrite=!1,e.blending=In,e.name=`PMREM_${o}`,e}function xR(o,e,t){const s=lt(new Array(ps).fill(0)),n=G(new j(0,1,0)),r=G(0),i=g(ps),a=G(0),u=G(1),c=X(null),l=G(0),d=g(1/e),h=g(1/t),p=g(o),f={n:i,latitudinal:a,weights:s,poleAxis:n,outputDirection:Bu,dTheta:r,samples:u,envMap:c,mipInt:l,CUBEUV_TEXEL_WIDTH:d,CUBEUV_TEXEL_HEIGHT:h,CUBEUV_MAX_MIP:p},m=Fu("blur");return m.fragmentNode=pf({...f,latitudinal:a.equal(1)}),pg.set(m,f),m}function Lc(o){const e=Fu("cubemap");return e.fragmentNode=sn(o,Bu),e}function Ic(o){const e=Fu("equirect");return e.fragmentNode=X(o,du(Bu),0),e}const Vc=new WeakMap,TR=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),Br=o=>/e/g.test(o)?String(o).replace(/\+/g,""):(o=Number(o),o+(o%1?"":".0"));class fg{constructor(e,t,s){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=s,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.observer=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=qr(),this.stacks=[],this.tab="	",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new oo,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.useComparisonMethod=!1}getBindGroupsCache(){let e=Vc.get(this.renderer);return e===void 0&&(e=new Bt,Vc.set(this.renderer,e)),e}createRenderTarget(e,t,s){return new ss(e,t,s)}createCubeRenderTarget(e,t){return new Yp(e,t)}createPMREMGenerator(){return new mR(this.renderer)}includes(e){return this.nodes.includes(e)}getOutputStructName(){}_getBindGroup(e,t){const s=this.getBindGroupsCache(),n=[];let r=!0;for(const a of t)n.push(a),r=r&&a.groupNode.shared!==!0;let i;return r?(i=s.get(n),i===void 0&&(i=new ua(e,n,this.bindingsIndexes[e].group,n),s.set(n,i))):i=new ua(e,n,this.bindingsIndexes[e].group,n),i}getBindGroupArray(e,t){const s=this.bindings[t];let n=s[e];return n===void 0&&(this.bindingsIndexes[e]===void 0&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),s[e]=n=[]),n}getBindings(){let e=this.bindGroups;if(e===null){const t={},s=this.bindings;for(const n of qo)for(const r in s[n]){const i=s[n][r];(t[r]||(t[r]=[])).push(...i)}e=[];for(const n in t){const r=t[n],i=this._getBindGroup(n,r);e.push(i)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort((t,s)=>t.bindings[0].groupNode.order-s.bindings[0].groupNode.order);for(let t=0;t<e.length;t++){const s=e[t];this.bindingsIndexes[s.name].group=t,s.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){this.nodes.includes(e)===!1&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){this.sequentialNodes.includes(e)===!1&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes)e.getUpdateType()!==z.NONE&&this.updateNodes.push(e.getSelf());for(const e of this.sequentialNodes){const t=e.getUpdateBeforeType(),s=e.getUpdateAfterType();t!==z.NONE&&this.updateBeforeNodes.push(e.getSelf()),s!==z.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===zt||e.magFilter===Eo||e.magFilter===Ln||e.magFilter===xs||e.minFilter===zt||e.minFilter===Eo||e.minFilter===Ln||e.minFilter===xs}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return{...this.context},this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const s=this.getDataFromNode(e);return s.cache===void 0&&(s.cache=new oo(t?this.getCache():null)),s.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=t.usageCount===void 0?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateArrayDeclaration(e,t){return this.getType(e)+"[ "+t+" ]"}generateArray(e,t,s=null){let n=this.generateArrayDeclaration(e,t)+"( ";for(let r=0;r<t;r++){const i=s?s[r]:null;i!==null?n+=i.build(this,e):n+=this.generateConst(e),r<t-1&&(n+=", ")}return n+=" )",n}generateStruct(e,t,s=null){const n=[];for(const r of t){const{name:i,type:a}=r;s&&s[i]&&s[i].isNode?n.push(s[i].build(this,a)):n.push(this.generateConst(a))}return e+"( "+n.join(", ")+" )"}generateConst(e,t=null){if(t===null&&(e==="float"||e==="int"||e==="uint"?t=0:e==="bool"?t=!1:e==="color"?t=new Pt:e==="vec2"?t=new We:e==="vec3"?t=new j:e==="vec4"&&(t=new he)),e==="float")return Br(t);if(e==="int")return`${Math.round(t)}`;if(e==="uint")return t>=0?`${Math.round(t)}u`:"0u";if(e==="bool")return t?"true":"false";if(e==="color")return`${this.getType("vec3")}( ${Br(t.r)}, ${Br(t.g)}, ${Br(t.b)} )`;const s=this.getTypeLength(e),n=this.getComponentType(e),r=i=>this.generateConst(n,i);if(s===2)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)} )`;if(s===3)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)}, ${r(t.z)} )`;if(s===4)return`${this.getType(e)}( ${r(t.x)}, ${r(t.y)}, ${r(t.z)}, ${r(t.w)} )`;if(s>4&&t&&(t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(r).join(", ")} )`;if(s>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return e==="color"?"vec3":e}hasGeometryAttribute(e){return this.geometry&&this.geometry.getAttribute(e)!==void 0}getAttribute(e,t){const s=this.attributes;for(const r of s)if(r.name===e)return r;const n=new Bc(e,t);return s.push(n),n}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return e==="void"||e==="property"||e==="sampler"||e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="depthTexture"||e==="texture3D"}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===ze)return"int";if(t===Fe)return"uint"}return"float"}getElementType(e){return e==="mat2"?"vec2":e==="mat3"?"vec3":e==="mat4"?"vec4":this.getComponentType(e)}getComponentType(e){if(e=this.getVectorType(e),e==="float"||e==="bool"||e==="int"||e==="uint")return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return t===null?null:t[1]==="b"?"bool":t[1]==="i"?"int":t[1]==="u"?"uint":"float"}getVectorType(e){return e==="color"?"vec3":e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="texture3D"?"vec4":e}getTypeFromLength(e,t="float"){if(e===1)return t;let s=Ql(e);const n=t==="float"?"":t[0];return/mat2/.test(t)===!0&&(s=s.replace("vec","mat")),n+s}getTypeFromArray(e){return TR.get(e.constructor)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const s=t.array,n=e.itemSize,r=e.normalized;let i;return!(e instanceof Xl)&&r!==!0&&(i=this.getTypeFromArray(s)),this.getTypeFromLength(n,i)}getTypeLength(e){const t=this.getVectorType(e),s=/vec([2-4])/.exec(t);return s!==null?Number(s[1]):t==="float"||t==="bool"||t==="int"||t==="uint"?1:/mat2/.test(e)===!0?4:/mat3/.test(e)===!0?9:/mat4/.test(e)===!0?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return t==="int"||t==="uint"?e:this.changeComponentType(e,"int")}addStack(){return this.stack=qr(this.stack),this.stacks.push(Aa()||this.stack),Wn(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,Wn(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,s=null){s=s===null?e.isGlobal(this)?this.globalCache:this.cache:s;let n=s.getData(e);return n===void 0&&(n={},s.setData(e,n)),n[t]===void 0&&(n[t]={}),n[t]}getNodeProperties(e,t="any"){const s=this.getDataFromNode(e,t);return s.properties||(s.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const s=this.getDataFromNode(e);let n=s.bufferAttribute;if(n===void 0){const r=this.uniforms.index++;n=new Bc("nodeAttribute"+r,t,e),this.bufferAttributes.push(n),s.bufferAttribute=n}return n}getStructTypeFromNode(e,t,s=null,n=this.shaderStage){const r=this.getDataFromNode(e,n);let i=r.structType;if(i===void 0){const a=this.structs.index++;s===null&&(s="StructType"+a),i=new Qv(s,t),this.structs[n].push(i),r.structType=i}return i}getOutputStructTypeFromNode(e,t){const s=this.getStructTypeFromNode(e,t,"OutputType","fragment");return s.output=!0,s}getUniformFromNode(e,t,s=this.shaderStage,n=null){const r=this.getDataFromNode(e,s,this.globalCache);let i=r.uniform;if(i===void 0){const a=this.uniforms.index++;i=new Xv(n||"nodeUniform"+a,t,e),this.uniforms[s].push(i),r.uniform=i}return i}getArrayCount(e){let t=null;return e.isArrayNode?t=e.count:e.isVarNode&&e.node.isArrayNode&&(t=e.node.count),t}getVarFromNode(e,t=null,s=e.getNodeType(this),n=this.shaderStage,r=!1){const i=this.getDataFromNode(e,n);let a=i.variable;if(a===void 0){const u=r?"_const":"_var",c=this.vars[n]||(this.vars[n]=[]),l=this.vars[u]||(this.vars[u]=0);t===null&&(t=(r?"nodeConst":"nodeVar")+l,this.vars[u]++);const d=this.getArrayCount(e);a=new hg(t,s,r,d),r||c.push(a),i.variable=a}return a}isDeterministic(e){if(e.isMathNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0)&&(e.cNode?this.isDeterministic(e.cNode):!0);if(e.isOperatorNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0);if(e.isArrayNode){if(e.values!==null){for(const t of e.values)if(!this.isDeterministic(t))return!1}return!0}else if(e.isConstNode)return!0;return!1}getVaryingFromNode(e,t=null,s=e.getNodeType(this)){const n=this.getDataFromNode(e,"any");let r=n.varying;if(r===void 0){const i=this.varyings,a=i.length;t===null&&(t="nodeVarying"+a),r=new jv(t,s),i.push(r),n.varying=r}return r}getCodeFromNode(e,t,s=this.shaderStage){const n=this.getDataFromNode(e);let r=n.code;if(r===void 0){const i=this.codes[s]||(this.codes[s]=[]),a=i.length;r=new Kv("nodeCode"+a,t),i.push(r),n.code=r}return r}addFlowCodeHierarchy(e,t){const{flowCodes:s,flowCodeBlock:n}=this.getDataFromNode(e);let r=!0,i=t;for(;i;){if(n.get(i)===!0){r=!1;break}i=this.getDataFromNode(i).parentNodeBlock}if(r)for(const a of s)this.addLineFlowCode(a)}addLineFlowCodeBlock(e,t,s){const n=this.getDataFromNode(e),r=n.flowCodes||(n.flowCodes=[]),i=n.flowCodeBlock||(n.flowCodeBlock=new WeakMap);r.push(t),i.set(s,!0)}addLineFlowCode(e,t=null){return e===""?this:(t!==null&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e=e+`;
`),this.flow.code+=e,this)}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="	",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),s=this.flowChildNode(e,t);return this.flowsData.set(e,s),s}buildFunctionNode(e){const t=new zf,s=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=s,t}flowShaderNode(e){const t=e.layout,s={[Symbol.iterator](){let i=0;const a=Object.values(this);return{next:()=>({value:a[i],done:i++>=a.length})}}};for(const i of t.inputs)s[i.name]=new _f(i.type,i.name);e.layout=null;const n=e.call(s),r=this.flowStagesNode(n,t.type);return e.layout=t,r}flowStagesNode(e,t=null){const s=this.flow,n=this.vars,r=this.cache,i=this.buildStage,a=this.stack,u={code:""};this.flow=u,this.vars={},this.cache=new oo,this.stack=qr();for(const c of Ho)this.setBuildStage(c),u.result=e.build(this,t);return u.vars=this.getVars(this.shaderStage),this.flow=s,this.vars=n,this.cache=r,this.stack=a,this.setBuildStage(i),u}getFunctionOperator(){return null}flowChildNode(e,t=null){const s=this.flow,n={code:""};return this.flow=n,n.result=e.build(this,t),this.flow=s,n}flowNodeFromShaderStage(e,t,s=null,n=null){const r=this.shaderStage;this.setShaderStage(e);const i=this.flowChildNode(t,s);return n!==null&&(i.code+=`${this.tab+n} = ${i.result};
`),this.flowCode[e]=this.flowCode[e]+i.code,this.setShaderStage(r),i}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t,s=null){return`${s!==null?this.generateArrayDeclaration(e,s):this.getType(e)} ${t}`}getVars(e){let t="";const s=this.vars[e];if(s!==void 0)for(const n of s)t+=`${this.getVar(n.type,n.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let s="";if(t!==void 0)for(const n of t)s+=n.code+`
`;return s}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){const{object:e,material:t,renderer:s}=this;if(t!==null){let n=s.library.fromMaterial(t);n===null&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),n=new Se),n.build(this)}else this.addFlow("compute",e);for(const n of Ho){this.setBuildStage(n),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const r of qo){this.setShaderStage(r);const i=this.flowNodes[r];for(const a of i)n==="generate"?this.flowNode(a):a.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if(t==="float"||t==="int"||t==="uint")return new oR(e);if(t==="vec2"||t==="ivec2"||t==="uvec2")return new aR(e);if(t==="vec3"||t==="ivec3"||t==="uvec3")return new uR(e);if(t==="vec4"||t==="ivec4"||t==="uvec4")return new cR(e);if(t==="color")return new lR(e);if(t==="mat2")return new dR(e);if(t==="mat3")return new hR(e);if(t==="mat4")return new pR(e);throw new Error(`Uniform "${t}" not declared.`)}format(e,t,s){if(t=this.getVectorType(t),s=this.getVectorType(s),t===s||s===null||this.isReference(s))return e;const n=this.getTypeLength(t),r=this.getTypeLength(s);return n===16&&r===9?`${this.getType(s)}(${e}[0].xyz, ${e}[1].xyz, ${e}[2].xyz)`:n===9&&r===4?`${this.getType(s)}(${e}[0].xy, ${e}[1].xy)`:n>4||r>4||r===0?e:n===r?`${this.getType(s)}( ${e} )`:n>r?this.format(`${e}.${"xyz".slice(0,r)}`,this.getTypeFromLength(r,this.getComponentType(t)),s):r===4&&n>1?`${this.getType(s)}( ${this.format(e,t,"vec3")}, 1.0 )`:n===2?`${this.getType(s)}( ${this.format(e,t,"vec2")}, 0.0 )`:(n===1&&r>1&&t!==this.getComponentType(s)&&(e=`${this.getType(this.getComponentType(s))}( ${e} )`),`${this.getType(s)}( ${e} )`)}getSignature(){return`// Three.js r${ul} - Node System
`}createNodeMaterial(e="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${e}() instead.`)}}class Gc{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let s=e.get(t);return s===void 0&&(s={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,s)),s}updateBeforeNode(e){const t=e.getUpdateBeforeType(),s=e.updateReference(this);if(t===z.FRAME){const{frameMap:n}=this._getMaps(this.updateBeforeMap,s);n.get(s)!==this.frameId&&e.updateBefore(this)!==!1&&n.set(s,this.frameId)}else if(t===z.RENDER){const{renderMap:n}=this._getMaps(this.updateBeforeMap,s);n.get(s)!==this.renderId&&e.updateBefore(this)!==!1&&n.set(s,this.renderId)}else t===z.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),s=e.updateReference(this);if(t===z.FRAME){const{frameMap:n}=this._getMaps(this.updateAfterMap,s);n.get(s)!==this.frameId&&e.updateAfter(this)!==!1&&n.set(s,this.frameId)}else if(t===z.RENDER){const{renderMap:n}=this._getMaps(this.updateAfterMap,s);n.get(s)!==this.renderId&&e.updateAfter(this)!==!1&&n.set(s,this.renderId)}else t===z.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),s=e.updateReference(this);if(t===z.FRAME){const{frameMap:n}=this._getMaps(this.updateMap,s);n.get(s)!==this.frameId&&e.update(this)!==!1&&n.set(s,this.frameId)}else if(t===z.RENDER){const{renderMap:n}=this._getMaps(this.updateMap,s);n.get(s)!==this.renderId&&e.update(this)!==!1&&n.set(s,this.renderId)}else t===z.OBJECT&&e.update(this)}update(){this.frameId++,this.lastTime===void 0&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class Pu{constructor(e,t,s=null,n="",r=!1){this.type=e,this.name=t,this.count=s,this.qualifier=n,this.isConst=r}}Pu.isNodeFunctionInput=!0;class _R extends Cs{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setup(e){super.setup(e);const t=e.context.lightingModel,s=this.colorNode,n=Ru(this.light),r=e.context.reflectedLight;t.direct({lightDirection:n,lightColor:s,reflectedLight:r},e.stack,e)}}const po=new Ie,Fr=new Ie;let _n=null;class bR extends Cs{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=G(new j).setGroup(k),this.halfWidth=G(new j).setGroup(k),this.updateType=z.RENDER}update(e){super.update(e);const{light:t}=this,s=e.camera.matrixWorldInverse;Fr.identity(),po.copy(t.matrixWorld),po.premultiply(s),Fr.extractRotation(po),this.halfWidth.value.set(t.width*.5,0,0),this.halfHeight.value.set(0,t.height*.5,0),this.halfWidth.value.applyMatrix4(Fr),this.halfHeight.value.applyMatrix4(Fr)}setup(e){super.setup(e);let t,s;e.isAvailable("float32Filterable")?(t=X(_n.LTC_FLOAT_1),s=X(_n.LTC_FLOAT_2)):(t=X(_n.LTC_HALF_1),s=X(_n.LTC_HALF_2));const{colorNode:n,light:r}=this,i=e.context.lightingModel,a=Gi(r),u=e.context.reflectedLight;i.directRectArea({lightColor:n,lightPosition:a,halfWidth:this.halfWidth,halfHeight:this.halfHeight,reflectedLight:u,ltc_1:t,ltc_2:s},e.stack,e)}static setLTC(e){_n=e}}class gg extends Cs{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=G(0).setGroup(k),this.penumbraCosNode=G(0).setGroup(k),this.cutoffDistanceNode=G(0).setGroup(k),this.decayExponentNode=G(0).setGroup(k)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:s}=this;return At(t,s,e)}setup(e){super.setup(e);const t=e.context.lightingModel,{colorNode:s,cutoffDistanceNode:n,decayExponentNode:r,light:i}=this,a=Gi(i).sub(ye),u=a.normalize(),c=u.dot(Ru(i)),l=this.getSpotAttenuation(c),d=a.length(),h=Cu({lightDistance:d,cutoffDistance:n,decayExponent:r});let p=s.mul(l).mul(h);if(i.map){const m=qf(i),b=X(i.map,m.xy).onRenderUpdate(()=>i.map);p=m.mul(2).sub(1).abs().lessThan(1).all().select(p.mul(b),p)}const f=e.context.reflectedLight;t.direct({lightDirection:u,lightColor:p,reflectedLight:f},e.stack,e)}}class NR extends gg{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e){const t=this.light.iesMap;let s=null;if(t&&t.isTexture===!0){const n=e.acos().mul(1/Math.PI);s=X(t,w(n,0),0).r}else s=super.getSpotAttenuation(e);return s}}class SR extends Cs{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class vR extends Cs{static get type(){return"HemisphereLightNode"}constructor(e=null){super(e),this.lightPositionNode=vu(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=G(new Pt).setGroup(k)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:s,lightDirectionNode:n}=this,i=at.dot(n).mul(.5).add(.5),a=se(s,t,i);e.context.irradiance.addAssign(a)}}class RR extends Cs{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let s=0;s<9;s++)t.push(new j);this.lightProbe=lt(t)}update(e){const{light:t}=this;super.update(e);for(let s=0;s<9;s++)this.lightProbe.array[s].copy(t.sh.coefficients[s]).multiplyScalar(t.intensity)}setup(e){const t=dg(wi,this.lightProbe);e.context.irradiance.addAssign(t)}}class mg{parseFunction(){console.warn("Abstract function.")}}class Uu{constructor(e,t,s="",n=""){this.type=e,this.inputs=t,this.name=s,this.precision=n}getCode(){console.warn("Abstract function.")}}Uu.isNodeFunction=!0;const AR=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,ER=/[a-z_0-9]+/ig,Oc="#pragma main",CR=o=>{o=o.trim();const e=o.indexOf(Oc),t=e!==-1?o.slice(e+Oc.length):o,s=t.match(AR);if(s!==null&&s.length===5){const n=s[4],r=[];let i=null;for(;(i=ER.exec(n))!==null;)r.push(i);const a=[];let u=0;for(;u<r.length;){const f=r[u][0]==="const";f===!0&&u++;let m=r[u][0];m==="in"||m==="out"||m==="inout"?u++:m="";const b=r[u++][0];let _=Number.parseInt(r[u][0]);Number.isNaN(_)===!1?u++:_=null;const C=r[u++][0];a.push(new Pu(b,C,_,m,f))}const c=t.substring(s[0].length),l=s[3]!==void 0?s[3]:"",d=s[2],h=s[1]!==void 0?s[1]:"",p=e!==-1?o.slice(0,e):"";return{type:d,inputs:a,name:l,precision:h,inputsCode:n,blockCode:c,headerCode:p}}else throw new Error("FunctionNode: Function is not a GLSL code.")};class wR extends Uu{constructor(e){const{type:t,inputs:s,name:n,precision:r,inputsCode:i,blockCode:a,headerCode:u}=CR(e);super(t,s,n,r),this.inputsCode=i,this.blockCode=a,this.headerCode=u}getCode(e=this.name){let t;const s=this.blockCode;if(s!==""){const{type:n,inputsCode:r,headerCode:i,precision:a}=this;let u=`${n} ${e} ( ${r.trim()} )`;a!==""&&(u=`${a} ${u}`),t=i+u+s}else t="";return t}}class MR extends mg{parseFunction(e){return new wR(e)}}const kc=new WeakMap,gt=[],Ps=[];class BR extends is{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new Gc,this.nodeBuilderCache=new Map,this.callHashCache=new Bt,this.groupsData=new Bt,this.cacheLib={}}updateGroup(e){const t=e.groupNode,s=t.name;if(s===Ca.name)return!0;if(s===k.name){const r=this.get(e),i=this.nodeFrame.renderId;return r.renderId!==i?(r.renderId=i,!0):!1}if(s===bd.name){const r=this.get(e),i=this.nodeFrame.frameId;return r.frameId!==i?(r.frameId=i,!0):!1}gt[0]=t,gt[1]=e;let n=this.groupsData.get(gt);return n===void 0&&this.groupsData.set(gt,n={}),gt.length=0,n.version!==t.version?(n.version=t.version,!0):!1}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let s=t.nodeBuilderState;if(s===void 0){const{nodeBuilderCache:n}=this,r=this.getForRenderCacheKey(e);if(s=n.get(r),s===void 0){const i=this.backend.createNodeBuilder(e.object,this.renderer);i.scene=e.scene,i.material=e.material,i.camera=e.camera,i.context.material=e.material,i.lightsNode=e.lightsNode,i.environmentNode=this.getEnvironmentNode(e.scene),i.fogNode=this.getFogNode(e.scene),i.clippingContext=e.clippingContext,i.build(),s=this._createNodeBuilderState(i),n.set(r,s)}s.usedTimes++,t.nodeBuilderState=s}return s}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,t.usedTimes===0&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let s=t.nodeBuilderState;if(s===void 0){const n=this.backend.createNodeBuilder(e,this.renderer);n.build(),s=this._createNodeBuilderState(n),t.nodeBuilderState=s}return s}_createNodeBuilderState(e){return new qv(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.observer,e.transforms)}getEnvironmentNode(e){this.updateEnvironment(e);let t=null;if(e.environmentNode&&e.environmentNode.isNode)t=e.environmentNode;else{const s=this.get(e);s.environmentNode&&(t=s.environmentNode)}return t}getBackgroundNode(e){this.updateBackground(e);let t=null;if(e.backgroundNode&&e.backgroundNode.isNode)t=e.backgroundNode;else{const s=this.get(e);s.backgroundNode&&(t=s.backgroundNode)}return t}getFogNode(e){return this.updateFog(e),e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){gt[0]=e,gt[1]=t;const s=this.renderer.info.calls,n=this.callHashCache.get(gt)||{};if(n.callId!==s){const r=this.getEnvironmentNode(e),i=this.getFogNode(e);t&&Ps.push(t.getCacheKey(!0)),r&&Ps.push(r.getCacheKey()),i&&Ps.push(i.getCacheKey()),Ps.push(this.renderer.shadowMap.enabled?1:0),n.callId=s,n.cacheKey=mi(Ps),this.callHashCache.set(gt,n),Ps.length=0}return gt.length=0,n.cacheKey}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),s=e.background;if(s){const n=e.backgroundBlurriness===0&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&t.backgroundBlurriness===0;if(t.background!==s||n){const r=this.getCacheNode("background",s,()=>{if(s.isCubeTexture===!0||s.mapping===sr||s.mapping===nr||s.mapping===Ao){if(e.backgroundBlurriness>0||s.mapping===Ao)return gu(s);{let i;return s.isCubeTexture===!0?i=sn(s):i=X(s),Zp(i)}}else{if(s.isTexture===!0)return X(s,Mt.flipY()).setUpdateMatrix(!0);s.isColor!==!0&&console.error("WebGPUNodes: Unsupported background configuration.",s)}},n);t.backgroundNode=r,t.background=s,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}getCacheNode(e,t,s,n=!1){const r=this.cacheLib[e]||(this.cacheLib[e]=new WeakMap);let i=r.get(t);return(i===void 0||n)&&(i=s(),r.set(t,i)),i}updateFog(e){const t=this.get(e),s=e.fog;if(s){if(t.fog!==s){const n=this.getCacheNode("fog",s,()=>{if(s.isFogExp2){const r=ie("color","color",s).setGroup(k),i=ie("density","float",s).setGroup(k);return Qn(r,bu(i))}else if(s.isFog){const r=ie("color","color",s).setGroup(k),i=ie("near","float",s).setGroup(k),a=ie("far","float",s).setGroup(k);return Qn(r,_u(i,a))}else console.error("THREE.Renderer: Unsupported fog configuration.",s)});t.fogNode=n,t.fog=s}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),s=e.environment;if(s){if(t.environment!==s){const n=this.getCacheNode("environment",s,()=>{if(s.isCubeTexture===!0)return sn(s);if(s.isTexture===!0)return X(s);console.error("Nodes: Unsupported environment configuration.",s)});t.environmentNode=n,t.environment=s}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,s=null,n=null,r=null){const i=this.nodeFrame;return i.renderer=e,i.scene=t,i.object=s,i.camera=n,i.material=r,i}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace}hasOutputChange(e){return kc.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,s=this.getOutputCacheKey(),n=X(e,Mt).renderOutput(t.toneMapping,t.currentColorSpace);return kc.set(e,s),n}updateBefore(e){const t=e.getNodeBuilderState();for(const s of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(s)}updateAfter(e){const t=e.getNodeBuilderState();for(const s of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(s)}updateForCompute(e){const t=this.getNodeFrame(),s=this.getForCompute(e);for(const n of s.updateNodes)t.updateNode(n)}updateForRender(e){const t=this.getNodeFrameForRender(e),s=e.getNodeBuilderState();for(const n of s.updateNodes)t.updateNode(n)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new Gc,this.nodeBuilderCache=new Map,this.cacheLib={}}}const fo=new al;class pi{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",this.shadowPass=!1,this.viewNormalMatrix=new Zn,this.clippingGroupContexts=new WeakMap,this.intersectionPlanes=[],this.unionPlanes=[],this.parentVersion=null,e!==null&&(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix)}projectPlanes(e,t,s){const n=e.length;for(let r=0;r<n;r++){fo.copy(e[r]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const i=t[s+r],a=fo.normal;i.x=-a.x,i.y=-a.y,i.z=-a.z,i.w=fo.constant}}updateGlobal(e,t){this.shadowPass=e.overrideMaterial!==null&&e.overrideMaterial.isShadowPassMaterial,this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,t){let s=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==t.clipIntersection&&(this.clipIntersection=t.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);const n=t.clippingPlanes,r=n.length;let i,a;if(this.clipIntersection?(i=this.intersectionPlanes,a=e.intersectionPlanes.length):(i=this.unionPlanes,a=e.unionPlanes.length),i.length!==a+r){i.length=a+r;for(let u=0;u<r;u++)i[a+u]=new he;s=!0}this.projectPlanes(n,i,a),s&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let t=this.clippingGroupContexts.get(e);return t===void 0&&(t=new pi(this),this.clippingGroupContexts.set(e,t)),t.update(this,e),t}get unionClippingCount(){return this.unionPlanes.length}}class FR{constructor(e,t){this.bundleGroup=e,this.camera=t}}const bn=[];class PR{constructor(){this.bundles=new Bt}get(e,t){const s=this.bundles;bn[0]=e,bn[1]=t;let n=s.get(bn);return n===void 0&&(n=new FR(e,t),s.set(bn,n)),bn.length=0,n}dispose(){this.bundles=new Bt}}class yg{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const s=this.getMaterialNodeClass(e.type);if(s!==null){t=new s;for(const n in e)t[n]=e[n]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,s){if(s.has(t)){console.warn(`Redefinition of node ${t}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t=="function"||typeof t=="object")throw new Error(`Base class ${t} is not a class.`);s.set(t,e)}addClass(e,t,s){if(s.has(t)){console.warn(`Redefinition of node ${t.name}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t!="function")throw new Error(`Base class ${t.name} is not a class.`);s.set(t,e)}}const UR=new Au,Nn=[];class DR extends Bt{constructor(){super()}createNode(e=[]){return new Au().setLights(e)}getNode(e,t){if(e.isQuadMesh)return UR;Nn[0]=e,Nn[1]=t;let s=this.get(Nn);return s===void 0&&(s=this.createNode(),this.set(Nn,s)),Nn.length=0,s}}class zc extends ss{constructor(e=1,t=1,s={}){super(e,t,s),this.isXRRenderTarget=!0,this.hasExternalTextures=!1,this.autoAllocateDepthBuffer=!0}copy(e){return super.copy(e),this.hasExternalTextures=e.hasExternalTextures,this.autoAllocateDepthBuffer=e.autoAllocateDepthBuffer,this}}const Wc=new j,$c=new j;class LR extends pa{constructor(e){super(),this.enabled=!1,this.isPresenting=!1,this.cameraAutoUpdate=!0,this._renderer=e,this._cameraL=new Kr,this._cameraL.viewport=new he,this._cameraR=new Kr,this._cameraR.viewport=new he,this._cameras=[this._cameraL,this._cameraR],this._cameraXR=new Wg,this._currentDepthNear=null,this._currentDepthFar=null,this._controllers=[],this._controllerInputSources=[],this._currentRenderTarget=null,this._xrRenderTarget=null,this._currentAnimationContext=null,this._currentAnimationLoop=null,this._currentPixelRatio=null,this._currentSize=new We,this._onSessionEvent=GR.bind(this),this._onSessionEnd=OR.bind(this),this._onInputSourcesChange=kR.bind(this),this._onAnimationFrame=zR.bind(this),this._referenceSpace=null,this._referenceSpaceType="local-floor",this._customReferenceSpace=null,this._framebufferScaleFactor=1,this._foveation=1,this._session=null,this._glBaseLayer=null,this._glBinding=null,this._glProjLayer=null,this._xrFrame=null,this._useLayers=typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype}getController(e){return this._getController(e).getTargetRaySpace()}getControllerGrip(e){return this._getController(e).getGripSpace()}getHand(e){return this._getController(e).getHandSpace()}getFoveation(){if(!(this._glProjLayer===null&&this._glBaseLayer===null))return this._foveation}setFoveation(e){this._foveation=e,this._glProjLayer!==null&&(this._glProjLayer.fixedFoveation=e),this._glBaseLayer!==null&&this._glBaseLayer.fixedFoveation!==void 0&&(this._glBaseLayer.fixedFoveation=e)}getFramebufferScaleFactor(){return this._framebufferScaleFactor}setFramebufferScaleFactor(e){this._framebufferScaleFactor=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change framebuffer scale while presenting.")}getReferenceSpaceType(){return this._referenceSpaceType}setReferenceSpaceType(e){this._referenceSpaceType=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change reference space type while presenting.")}getReferenceSpace(){return this._customReferenceSpace||this._referenceSpace}setReferenceSpace(e){this._customReferenceSpace=e}getCamera(){return this._cameraXR}getEnvironmentBlendMode(){if(this._session!==null)return this._session.environmentBlendMode}getFrame(){return this._xrFrame}getSession(){return this._session}async setSession(e){const t=this._renderer,s=t.backend,n=t.getContext();if(this._session=e,e!==null){if(s.isWebGPUBackend===!0)throw new Error('THREE.XRManager: XR is currently not supported with a WebGPU backend. Use WebGL by passing "{ forceWebGL: true }" to the constructor of the renderer.');if(this._currentRenderTarget=t.getRenderTarget(),e.addEventListener("select",this._onSessionEvent),e.addEventListener("selectstart",this._onSessionEvent),e.addEventListener("selectend",this._onSessionEvent),e.addEventListener("squeeze",this._onSessionEvent),e.addEventListener("squeezestart",this._onSessionEvent),e.addEventListener("squeezeend",this._onSessionEvent),e.addEventListener("end",this._onSessionEnd),e.addEventListener("inputsourceschange",this._onInputSourcesChange),await s.makeXRCompatible(),this._currentPixelRatio=t.getPixelRatio(),t.getSize(this._currentSize),this._currentAnimationContext=t._animation.getContext(),this._currentAnimationLoop=t._animation.getAnimationLoop(),t._animation.stop(),this._useLayers===!0){let r=null,i=null,a=null;t.depth&&(a=t.stencil?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24,r=t.stencil?Jn:er,i=t.stencil?tr:Fe);const u={colorFormat:n.RGBA8,depthFormat:a,scaleFactor:this._framebufferScaleFactor},c=new XRWebGLBinding(e,n),l=c.createProjectionLayer(u);this._glBinding=c,this._glProjLayer=l,e.updateRenderState({layers:[l]}),t.setPixelRatio(1),t.setSize(l.textureWidth,l.textureHeight,!1),this._xrRenderTarget=new zc(l.textureWidth,l.textureHeight,{format:es,type:_t,colorSpace:t.outputColorSpace,depthTexture:new ns(l.textureWidth,l.textureHeight,i,void 0,void 0,void 0,void 0,void 0,void 0,r),stencilBuffer:t.stencil,samples:t.samples}),this._xrRenderTarget.hasExternalTextures=!0}else{const r={antialias:t.samples>0,alpha:!0,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:this.getFramebufferScaleFactor()},i=new XRWebGLLayer(e,n,r);this._glBaseLayer=i,e.updateRenderState({baseLayer:i}),t.setPixelRatio(1),t.setSize(i.framebufferWidth,i.framebufferHeight,!1),this._xrRenderTarget=new zc(i.framebufferWidth,i.framebufferHeight,{format:es,type:_t,colorSpace:t.outputColorSpace,stencilBuffer:t.stencil})}this.setFoveation(this.getFoveation()),this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType()),t._animation.setAnimationLoop(this._onAnimationFrame),t._animation.setContext(e),t._animation.start(),this.isPresenting=!0,this.dispatchEvent({type:"sessionstart"})}}updateCamera(e){const t=this._session;if(t===null)return;const s=e.near,n=e.far,r=this._cameraXR,i=this._cameraL,a=this._cameraR;r.near=a.near=i.near=s,r.far=a.far=i.far=n,(this._currentDepthNear!==r.near||this._currentDepthFar!==r.far)&&(t.updateRenderState({depthNear:r.near,depthFar:r.far}),this._currentDepthNear=r.near,this._currentDepthFar=r.far),i.layers.mask=e.layers.mask|2,a.layers.mask=e.layers.mask|4,r.layers.mask=i.layers.mask|a.layers.mask;const u=e.parent,c=r.cameras;Hc(r,u);for(let l=0;l<c.length;l++)Hc(c[l],u);c.length===2?IR(r,i,a):r.projectionMatrix.copy(i.projectionMatrix),VR(e,r,u)}_getController(e){let t=this._controllers[e];return t===void 0&&(t=new $g,this._controllers[e]=t),t}}function IR(o,e,t){Wc.setFromMatrixPosition(e.matrixWorld),$c.setFromMatrixPosition(t.matrixWorld);const s=Wc.distanceTo($c),n=e.projectionMatrix.elements,r=t.projectionMatrix.elements,i=n[14]/(n[10]-1),a=n[14]/(n[10]+1),u=(n[9]+1)/n[5],c=(n[9]-1)/n[5],l=(n[8]-1)/n[0],d=(r[8]+1)/r[0],h=i*l,p=i*d,f=s/(-l+d),m=f*-l;if(e.matrixWorld.decompose(o.position,o.quaternion,o.scale),o.translateX(m),o.translateZ(f),o.matrixWorld.compose(o.position,o.quaternion,o.scale),o.matrixWorldInverse.copy(o.matrixWorld).invert(),n[10]===-1)o.projectionMatrix.copy(e.projectionMatrix),o.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const b=i+f,_=a+f,C=h-m,M=p+(s-m),P=u*a/_*b,I=c*a/_*b;o.projectionMatrix.makePerspective(C,M,P,I,b,_),o.projectionMatrixInverse.copy(o.projectionMatrix).invert()}}function Hc(o,e){e===null?o.matrixWorld.copy(o.matrix):o.matrixWorld.multiplyMatrices(e.matrixWorld,o.matrix),o.matrixWorldInverse.copy(o.matrixWorld).invert()}function VR(o,e,t){t===null?o.matrix.copy(e.matrixWorld):(o.matrix.copy(t.matrixWorld),o.matrix.invert(),o.matrix.multiply(e.matrixWorld)),o.matrix.decompose(o.position,o.quaternion,o.scale),o.updateMatrixWorld(!0),o.projectionMatrix.copy(e.projectionMatrix),o.projectionMatrixInverse.copy(e.projectionMatrixInverse),o.isPerspectiveCamera&&(o.fov=Sm*2*Math.atan(1/o.projectionMatrix.elements[5]),o.zoom=1)}function GR(o){const e=this._controllerInputSources.indexOf(o.inputSource);if(e===-1)return;const t=this._controllers[e];if(t!==void 0){const s=this.getReferenceSpace();t.update(o.inputSource,o.frame,s),t.dispatchEvent({type:o.type,data:o.inputSource})}}function OR(){const o=this._session,e=this._renderer;o.removeEventListener("select",this._onSessionEvent),o.removeEventListener("selectstart",this._onSessionEvent),o.removeEventListener("selectend",this._onSessionEvent),o.removeEventListener("squeeze",this._onSessionEvent),o.removeEventListener("squeezestart",this._onSessionEvent),o.removeEventListener("squeezeend",this._onSessionEvent),o.removeEventListener("end",this._onSessionEnd),o.removeEventListener("inputsourceschange",this._onInputSourcesChange);for(let t=0;t<this._controllers.length;t++){const s=this._controllerInputSources[t];s!==null&&(this._controllerInputSources[t]=null,this._controllers[t].disconnect(s))}this._currentDepthNear=null,this._currentDepthFar=null,e.backend.setXRTarget(null),e.setRenderTarget(this._currentRenderTarget),this._session=null,this._xrRenderTarget=null,this.isPresenting=!1,e._animation.stop(),e._animation.setAnimationLoop(this._currentAnimationLoop),e._animation.setContext(this._currentAnimationContext),e._animation.start(),e.setPixelRatio(this._currentPixelRatio),e.setSize(this._currentSize.width,this._currentSize.height,!1),this.dispatchEvent({type:"sessionend"})}function kR(o){const e=this._controllers,t=this._controllerInputSources;for(let s=0;s<o.removed.length;s++){const n=o.removed[s],r=t.indexOf(n);r>=0&&(t[r]=null,e[r].disconnect(n))}for(let s=0;s<o.added.length;s++){const n=o.added[s];let r=t.indexOf(n);if(r===-1){for(let a=0;a<e.length;a++)if(a>=t.length){t.push(n),r=a;break}else if(t[a]===null){t[a]=n,r=a;break}if(r===-1)break}const i=e[r];i&&i.connect(n)}}function zR(o,e){if(e===void 0)return;const t=this._cameraXR,s=this._renderer,n=s.backend,r=this._glBaseLayer,i=this.getReferenceSpace(),a=e.getViewerPose(i);if(this._xrFrame=e,a!==null){const u=a.views;this._glBaseLayer!==null&&n.setXRTarget(r.framebuffer);let c=!1;u.length!==t.cameras.length&&(t.cameras.length=0,c=!0);for(let l=0;l<u.length;l++){const d=u[l];let h;if(this._useLayers===!0){const f=this._glBinding.getViewSubImage(this._glProjLayer,d);h=f.viewport,l===0&&n.setXRRenderTargetTextures(this._xrRenderTarget,f.colorTexture,this._glProjLayer.ignoreDepthValues?void 0:f.depthStencilTexture)}else h=r.getViewport(d);let p=this._cameras[l];p===void 0&&(p=new Kr,p.layers.enable(l),p.viewport=new he,this._cameras[l]=p),p.matrix.fromArray(d.transform.matrix),p.matrix.decompose(p.position,p.quaternion,p.scale),p.projectionMatrix.fromArray(d.projectionMatrix),p.projectionMatrixInverse.copy(p.projectionMatrix).invert(),p.viewport.set(h.x,h.y,h.width,h.height),l===0&&(t.matrix.copy(p.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale)),c===!0&&t.cameras.push(p)}s.setRenderTarget(this._xrRenderTarget)}for(let u=0;u<this._controllers.length;u++){const c=this._controllerInputSources[u],l=this._controllers[u];c!==null&&l!==void 0&&l.update(c,e,i)}this._currentAnimationLoop&&this._currentAnimationLoop(o,e),e.detectedPlanes&&this.dispatchEvent({type:"planesdetected",data:e}),this._xrFrame=null}const qc=new ha,Pr=new We,go=new he,mo=new Mg,Ur=new Ie,qt=new he;class WR{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:s=!1,alpha:n=!0,depth:r=!0,stencil:i=!1,antialias:a=!1,samples:u=0,getFallback:c=null,colorBufferType:l=it}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=u||a===!0?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=n,this.logarithmicDepthBuffer=s,this.outputColorSpace=q,this.toneMapping=qs,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=r,this.stencil=i,this.info=new F_,this.nodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new yg,this.lighting=new DR,this._getFallback=c,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new he(0,0,this._width,this._height),this._scissor=new he(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new xu(new Se),this._quad.material.name="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const d=this.alpha===!0?0:1;this._clearColor=new mu(0,0,0,d),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._colorBufferType=l,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:wg},this.xr=new LR(this),this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(h,p,f)=>{await this.compileAsync(h,p);const m=this._renderLists.get(h,p),b=this._renderContexts.get(h,p,this._renderTarget),_=h.overrideMaterial||f.material,C=this._objects.get(f,_,h,p,m.lightsNode,b,b.clippingContext),{fragmentShader:M,vertexShader:P}=C.getNodeBuilderState();return{fragmentShader:M,vertexShader:P}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return this._initPromise!==null?this._initPromise:(this._initPromise=new Promise(async(e,t)=>{let s=this.backend;try{await s.init(this)}catch(n){if(this._getFallback!==null)try{this.backend=s=this._getFallback(n),await s.init(this)}catch(r){t(r);return}else{t(n);return}}this._nodes=new BR(this,s),this._animation=new S_(this._nodes,this.info),this._attributes=new M_(s),this._background=new $v(this,this._nodes),this._geometries=new B_(this._attributes,this.info),this._textures=new X_(this,s,this.info),this._pipelines=new L_(s,this._nodes),this._bindings=new I_(s,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new E_(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new O_(this.lighting),this._bundles=new PR,this._renderContexts=new H_,this._animation.start(),this._initialized=!0,e()}),this._initPromise)}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,s=null){if(this._isDeviceLost===!0)return;this._initialized===!1&&await this.init();const n=this._nodes.nodeFrame,r=n.renderId,i=this._currentRenderContext,a=this._currentRenderObjectFunction,u=this._compilationPromises,c=e.isScene===!0?e:qc;s===null&&(s=e);const l=this._renderTarget,d=this._renderContexts.get(s,t,l),h=this._activeMipmapLevel,p=[];this._currentRenderContext=d,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=p,n.renderId++,n.update(),d.depth=this.depth,d.stencil=this.stencil,d.clippingContext||(d.clippingContext=new pi),d.clippingContext.updateGlobal(c,t),c.onBeforeRender(this,e,t,l);const f=this._renderLists.get(e,t);if(f.begin(),this._projectObject(e,t,0,f,d.clippingContext),s!==e&&s.traverseVisible(function(M){M.isLight&&M.layers.test(t.layers)&&f.pushLight(M)}),f.finish(),l!==null){this._textures.updateRenderTarget(l,h);const M=this._textures.get(l);d.textures=M.textures,d.depthTexture=M.depthTexture}else d.textures=null,d.depthTexture=null;this._background.update(c,f,d);const m=f.opaque,b=f.transparent,_=f.transparentDoublePass,C=f.lightsNode;this.opaque===!0&&m.length>0&&this._renderObjects(m,t,c,C),this.transparent===!0&&b.length>0&&this._renderTransparents(b,_,t,c,C),n.renderId=r,this._currentRenderContext=i,this._currentRenderObjectFunction=a,this._compilationPromises=u,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(p)}async renderAsync(e,t){this._initialized===!1&&await this.init(),this._renderScene(e,t)}async waitForGPU(){await this.backend.waitForGPU()}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getColorBufferType(){return this._colorBufferType}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:

Message: ${e.message}`;e.reason&&(t+=`
Reason: ${e.reason}`),console.error(t),this._isDeviceLost=!0}_renderBundle(e,t,s){const{bundleGroup:n,camera:r,renderList:i}=e,a=this._currentRenderContext,u=this._bundles.get(n,r),c=this.backend.get(u);c.renderContexts===void 0&&(c.renderContexts=new Set);const l=n.version!==c.version,d=c.renderContexts.has(a)===!1||l;if(c.renderContexts.add(a),d){this.backend.beginBundle(a),(c.renderObjects===void 0||l)&&(c.renderObjects=[]),this._currentRenderBundle=u;const h=i.opaque;this.opaque===!0&&h.length>0&&this._renderObjects(h,r,t,s),this._currentRenderBundle=null,this.backend.finishBundle(a,u),c.version=n.version}else{const{renderObjects:h}=c;for(let p=0,f=h.length;p<f;p++){const m=h[p];this._nodes.needsRefresh(m)&&(this._nodes.updateBefore(m),this._nodes.updateForRender(m),this._bindings.updateForRender(m),this._nodes.updateAfter(m))}}this.backend.addBundle(a,u)}render(e,t){if(this._initialized===!1)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this;if(e!==qs===!1&&t!==ys===!1)return null;const{width:r,height:i}=this.getDrawingBufferSize(Pr),{depth:a,stencil:u}=this;let c=this._frameBufferTarget;return c===null&&(c=new ss(r,i,{depthBuffer:a,stencilBuffer:u,type:this._colorBufferType,format:es,colorSpace:ys,generateMipmaps:!1,minFilter:zt,magFilter:zt,samples:this.samples}),c.isPostProcessingRenderTarget=!0,this._frameBufferTarget=c),c.depthBuffer=a,c.stencilBuffer=u,c.setSize(r,i),c.viewport.copy(this._viewport),c.scissor.copy(this._scissor),c.viewport.multiplyScalar(this._pixelRatio),c.scissor.multiplyScalar(this._pixelRatio),c.scissorTest=this._scissorTest,c}_renderScene(e,t,s=!0){if(this._isDeviceLost===!0)return;const n=s?this._getFrameBufferTarget():null,r=this._nodes.nodeFrame,i=r.renderId,a=this._currentRenderContext,u=this._currentRenderObjectFunction,c=e.isScene===!0?e:qc,l=this._renderTarget,d=this._activeCubeFace,h=this._activeMipmapLevel;let p;n!==null?(p=n,this.setRenderTarget(p)):p=l;const f=this._renderContexts.get(e,t,p);this._currentRenderContext=f,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,r.renderId=this.info.calls;const m=this.coordinateSystem,b=this.xr;if(t.coordinateSystem!==m&&b.isPresenting===!1&&(t.coordinateSystem=m,t.updateProjectionMatrix(),t.isArrayCamera))for(const te of t.cameras)te.coordinateSystem=m,te.updateProjectionMatrix();e.matrixWorldAutoUpdate===!0&&e.updateMatrixWorld(),t.parent===null&&t.matrixWorldAutoUpdate===!0&&t.updateMatrixWorld(),b.enabled===!0&&b.isPresenting===!0&&(b.cameraAutoUpdate===!0&&b.updateCamera(t),t=b.getCamera());let _=this._viewport,C=this._scissor,M=this._pixelRatio;p!==null&&(_=p.viewport,C=p.scissor,M=1),this.getDrawingBufferSize(Pr),go.set(0,0,Pr.width,Pr.height);const P=_.minDepth===void 0?0:_.minDepth,I=_.maxDepth===void 0?1:_.maxDepth;f.viewportValue.copy(_).multiplyScalar(M).floor(),f.viewportValue.width>>=h,f.viewportValue.height>>=h,f.viewportValue.minDepth=P,f.viewportValue.maxDepth=I,f.viewport=f.viewportValue.equals(go)===!1,f.scissorValue.copy(C).multiplyScalar(M).floor(),f.scissor=this._scissorTest&&f.scissorValue.equals(go)===!1,f.scissorValue.width>>=h,f.scissorValue.height>>=h,f.clippingContext||(f.clippingContext=new pi),f.clippingContext.updateGlobal(c,t),c.onBeforeRender(this,e,t,p),Ur.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),mo.setFromProjectionMatrix(Ur,m);const B=this._renderLists.get(e,t);if(B.begin(),this._projectObject(e,t,0,B,f.clippingContext),B.finish(),this.sortObjects===!0&&B.sort(this._opaqueSort,this._transparentSort),p!==null){this._textures.updateRenderTarget(p,h);const te=this._textures.get(p);f.textures=te.textures,f.depthTexture=te.depthTexture,f.width=te.width,f.height=te.height,f.renderTarget=p,f.depth=p.depthBuffer,f.stencil=p.stencilBuffer}else f.textures=null,f.depthTexture=null,f.width=this.domElement.width,f.height=this.domElement.height,f.depth=this.depth,f.stencil=this.stencil;f.width>>=h,f.height>>=h,f.activeCubeFace=d,f.activeMipmapLevel=h,f.occlusionQueryCount=B.occlusionQueryCount,this._background.update(c,B,f),this.backend.beginRender(f);const{bundles:U,lightsNode:D,transparentDoublePass:Y,transparent:Q,opaque:Z}=B;if(U.length>0&&this._renderBundles(U,c,D),this.opaque===!0&&Z.length>0&&this._renderObjects(Z,t,c,D),this.transparent===!0&&Q.length>0&&this._renderTransparents(Q,Y,t,c,D),this.backend.finishRender(f),r.renderId=i,this._currentRenderContext=a,this._currentRenderObjectFunction=u,n!==null){this.setRenderTarget(l,d,h);const te=this._quad;this._nodes.hasOutputChange(p.texture)&&(te.material.fragmentNode=this._nodes.getOutputNode(p.texture),te.material.needsUpdate=!0),this._renderScene(te,te.camera,!1)}return c.onAfterRender(this,e,t,p),f}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){this._initialized===!1&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,s){this._width=e,this._height=t,this._pixelRatio=s,this.domElement.width=Math.floor(e*s),this.domElement.height=Math.floor(t*s),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setSize(e,t,s=!0){this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),s===!0&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,s,n){const r=this._scissor;e.isVector4?r.copy(e):r.set(e,t,s,n)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,s,n,r=0,i=1){const a=this._viewport;e.isVector4?a.copy(e):a.set(e,t,s,n),a.minDepth=r,a.maxDepth=i}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,s=!0){if(this._initialized===!1)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,s);const n=this._renderTarget||this._getFrameBufferTarget();let r=null;if(n!==null){this._textures.updateRenderTarget(n);const i=this._textures.get(n);r=this._renderContexts.getForClear(n),r.textures=i.textures,r.depthTexture=i.depthTexture,r.width=i.width,r.height=i.height,r.renderTarget=n,r.depth=n.depthBuffer,r.stencil=n.stencilBuffer}if(r.clearColorValue=this._clearColor,this.backend.clear(e,t,s,r),n!==null&&this._renderTarget===null){const i=this._quad;this._nodes.hasOutputChange(n.texture)&&(i.material.fragmentNode=this._nodes.getOutputNode(n.texture),i.material.needsUpdate=!0),this._renderScene(i,i.camera,!1)}}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,s=!0){this._initialized===!1&&await this.init(),this.clear(e,t,s)}async clearColorAsync(){this.clearAsync(!0,!1,!1)}async clearDepthAsync(){this.clearAsync(!1,!0,!1)}async clearStencilAsync(){this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this._renderTarget!==null?qs:this.toneMapping}get currentColorSpace(){return this._renderTarget!==null?ys:this.outputColorSpace}dispose(){this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this._frameBufferTarget!==null&&this._frameBufferTarget.dispose(),Object.values(this.backend.timestampQueryPool).forEach(e=>{e!==null&&e.dispose()}),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,s=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=s}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e){if(this._isDeviceLost===!0)return;if(this._initialized===!1)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);const t=this._nodes.nodeFrame,s=t.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,t.renderId=this.info.calls;const n=this.backend,r=this._pipelines,i=this._bindings,a=this._nodes,u=Array.isArray(e)?e:[e];if(u[0]===void 0||u[0].isComputeNode!==!0)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");n.beginCompute(e);for(const c of u){if(r.has(c)===!1){const h=()=>{c.removeEventListener("dispose",h),r.delete(c),i.delete(c),a.delete(c)};c.addEventListener("dispose",h);const p=c.onInitFunction;p!==null&&p.call(c,{renderer:this})}a.updateForCompute(c),i.updateForCompute(c);const l=i.getForCompute(c),d=r.getForCompute(c,l);n.compute(e,c,l,d)}n.finishCompute(e),t.renderId=s}async computeAsync(e){this._initialized===!1&&await this.init(),this.compute(e)}async hasFeatureAsync(e){return this._initialized===!1&&await this.init(),this.backend.hasFeature(e)}async resolveTimestampsAsync(e="render"){return this._initialized===!1&&await this.init(),this.backend.resolveTimestampsAsync(e)}hasFeature(e){return this._initialized===!1?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}hasInitialized(){return this._initialized}async initTextureAsync(e){this._initialized===!1&&await this.init(),this._textures.updateTexture(e)}initTexture(e){this._initialized===!1&&console.warn("THREE.Renderer: .initTexture() called before the backend is initialized. Try using .initTextureAsync() instead."),this._textures.updateTexture(e)}copyFramebufferToTexture(e,t=null){if(t!==null)if(t.isVector2)t=qt.set(t.x,t.y,e.image.width,e.image.height).floor();else if(t.isVector4)t=qt.copy(t).floor();else{console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");return}else t=qt.set(0,0,e.image.width,e.image.height);let s=this._currentRenderContext,n;s!==null?n=s.renderTarget:(n=this._renderTarget||this._getFrameBufferTarget(),n!==null&&(this._textures.updateRenderTarget(n),s=this._textures.get(n))),this._textures.updateTexture(e,{renderTarget:n}),this.backend.copyFramebufferToTexture(e,s,t)}copyTextureToTexture(e,t,s=null,n=null,r=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,s,n,r)}async readRenderTargetPixelsAsync(e,t,s,n,r,i=0,a=0){return this.backend.copyTextureToBuffer(e.textures[i],t,s,n,r,a)}_projectObject(e,t,s,n,r){if(e.visible===!1)return;if(e.layers.test(t.layers)){if(e.isGroup)s=e.renderOrder,e.isClippingGroup&&e.enabled&&(r=r.getGroupContext(e));else if(e.isLOD)e.autoUpdate===!0&&e.update(t);else if(e.isLight)n.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||mo.intersectsSprite(e)){this.sortObjects===!0&&qt.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Ur);const{geometry:u,material:c}=e;c.visible&&n.push(e,u,c,s,qt.z,null,r)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||mo.intersectsObject(e))){const{geometry:u,material:c}=e;if(this.sortObjects===!0&&(u.boundingSphere===null&&u.computeBoundingSphere(),qt.copy(u.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(Ur)),Array.isArray(c)){const l=u.groups;for(let d=0,h=l.length;d<h;d++){const p=l[d],f=c[p.materialIndex];f&&f.visible&&n.push(e,u,f,s,qt.z,p,r)}}else c.visible&&n.push(e,u,c,s,qt.z,null,r)}}if(e.isBundleGroup===!0&&this.backend.beginBundle!==void 0){const u=n;n=this._renderLists.get(e,t),n.begin(),u.pushBundle({bundleGroup:e,camera:t,renderList:n}),n.finish()}const a=e.children;for(let u=0,c=a.length;u<c;u++)this._projectObject(a[u],t,s,n,r)}_renderBundles(e,t,s){for(const n of e)this._renderBundle(n,t,s)}_renderTransparents(e,t,s,n,r){if(t.length>0){for(const{material:i}of t)i.side=vt;this._renderObjects(t,s,n,r,"backSide");for(const{material:i}of t)i.side=Ro;this._renderObjects(e,s,n,r);for(const{material:i}of t)i.side=Xs}else this._renderObjects(e,s,n,r)}_renderObjects(e,t,s,n,r=null){for(let i=0,a=e.length;i<a;i++){const{object:u,geometry:c,material:l,group:d,clippingContext:h}=e[i];this._currentRenderObjectFunction(u,s,t,c,l,d,n,h,r)}}renderObject(e,t,s,n,r,i,a,u=null,c=null){let l,d,h;if(e.onBeforeRender(this,t,s,n,r,i),t.overrideMaterial!==null){const p=t.overrideMaterial;r.positionNode&&r.positionNode.isNode&&(l=p.positionNode,p.positionNode=r.positionNode),p.alphaTest=r.alphaTest,p.alphaMap=r.alphaMap,p.transparent=r.transparent||r.transmission>0,p.isShadowPassMaterial&&(p.side=r.shadowSide===null?r.side:r.shadowSide,r.depthNode&&r.depthNode.isNode&&(h=p.depthNode,p.depthNode=r.depthNode),r.castShadowNode&&r.castShadowNode.isNode&&(d=p.colorNode,p.colorNode=r.castShadowNode)),r=p}r.transparent===!0&&r.side===Xs&&r.forceSinglePass===!1?(r.side=vt,this._handleObjectFunction(e,r,t,s,a,i,u,"backSide"),r.side=Ro,this._handleObjectFunction(e,r,t,s,a,i,u,c),r.side=Xs):this._handleObjectFunction(e,r,t,s,a,i,u,c),l!==void 0&&(t.overrideMaterial.positionNode=l),h!==void 0&&(t.overrideMaterial.depthNode=h),d!==void 0&&(t.overrideMaterial.colorNode=d),e.onAfterRender(this,t,s,n,r,i)}_renderObjectDirect(e,t,s,n,r,i,a,u){const c=this._objects.get(e,t,s,n,r,this._currentRenderContext,a,u);c.drawRange=e.geometry.drawRange,c.group=i;const l=this._nodes.needsRefresh(c);l&&(this._nodes.updateBefore(c),this._geometries.updateForRender(c),this._nodes.updateForRender(c),this._bindings.updateForRender(c)),this._pipelines.updateForRender(c),this._currentRenderBundle!==null&&(this.backend.get(this._currentRenderBundle).renderObjects.push(c),c.bundle=this._currentRenderBundle.bundleGroup),this.backend.draw(c,this.info),l&&this._nodes.updateAfter(c)}_createObjectPipeline(e,t,s,n,r,i,a,u){const c=this._objects.get(e,t,s,n,r,this._currentRenderContext,a,u);c.drawRange=e.geometry.drawRange,c.group=i,this._nodes.updateBefore(c),this._geometries.updateForRender(c),this._nodes.updateForRender(c),this._bindings.updateForRender(c),this._pipelines.getForRender(c,this._compilationPromises),this._nodes.updateAfter(c)}get compile(){return this.compileAsync}}class Du{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function $R(o){return o+(Qt-o%Qt)%Qt}class xg extends Du{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return $R(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class Tg extends xg{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let HR=0;class _g extends Tg{constructor(e,t){super("UniformBuffer_"+HR++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class qR extends Tg{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}get values(){return this._values===null&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(e===null){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,s=this.uniforms.length;t<s;t++){const n=this.uniforms[t],{boundary:r,itemSize:i}=n,a=e%Qt,u=Qt-a;a!==0&&u-r<0?e+=Qt-a:a%r!==0&&(e+=a%r),n.offset=e/this.bytesPerElement,e+=i*this.bytesPerElement}return Math.ceil(e/Qt)*Qt}update(){let e=!1;for(const t of this.uniforms)this.updateByType(t)===!0&&(e=!0);return e}updateByType(e){if(e.isNumberUniform)return this.updateNumber(e);if(e.isVector2Uniform)return this.updateVector2(e);if(e.isVector3Uniform)return this.updateVector3(e);if(e.isVector4Uniform)return this.updateVector4(e);if(e.isColorUniform)return this.updateColor(e);if(e.isMatrix3Uniform)return this.updateMatrix3(e);if(e.isMatrix4Uniform)return this.updateMatrix4(e);console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const s=this.values,n=e.getValue(),r=e.offset,i=e.getType();if(s[r]!==n){const a=this._getBufferForType(i);a[r]=s[r]=n,t=!0}return t}updateVector2(e){let t=!1;const s=this.values,n=e.getValue(),r=e.offset,i=e.getType();if(s[r+0]!==n.x||s[r+1]!==n.y){const a=this._getBufferForType(i);a[r+0]=s[r+0]=n.x,a[r+1]=s[r+1]=n.y,t=!0}return t}updateVector3(e){let t=!1;const s=this.values,n=e.getValue(),r=e.offset,i=e.getType();if(s[r+0]!==n.x||s[r+1]!==n.y||s[r+2]!==n.z){const a=this._getBufferForType(i);a[r+0]=s[r+0]=n.x,a[r+1]=s[r+1]=n.y,a[r+2]=s[r+2]=n.z,t=!0}return t}updateVector4(e){let t=!1;const s=this.values,n=e.getValue(),r=e.offset,i=e.getType();if(s[r+0]!==n.x||s[r+1]!==n.y||s[r+2]!==n.z||s[r+4]!==n.w){const a=this._getBufferForType(i);a[r+0]=s[r+0]=n.x,a[r+1]=s[r+1]=n.y,a[r+2]=s[r+2]=n.z,a[r+3]=s[r+3]=n.w,t=!0}return t}updateColor(e){let t=!1;const s=this.values,n=e.getValue(),r=e.offset;if(s[r+0]!==n.r||s[r+1]!==n.g||s[r+2]!==n.b){const i=this.buffer;i[r+0]=s[r+0]=n.r,i[r+1]=s[r+1]=n.g,i[r+2]=s[r+2]=n.b,t=!0}return t}updateMatrix3(e){let t=!1;const s=this.values,n=e.getValue().elements,r=e.offset;if(s[r+0]!==n[0]||s[r+1]!==n[1]||s[r+2]!==n[2]||s[r+4]!==n[3]||s[r+5]!==n[4]||s[r+6]!==n[5]||s[r+8]!==n[6]||s[r+9]!==n[7]||s[r+10]!==n[8]){const i=this.buffer;i[r+0]=s[r+0]=n[0],i[r+1]=s[r+1]=n[1],i[r+2]=s[r+2]=n[2],i[r+4]=s[r+4]=n[3],i[r+5]=s[r+5]=n[4],i[r+6]=s[r+6]=n[5],i[r+8]=s[r+8]=n[6],i[r+9]=s[r+9]=n[7],i[r+10]=s[r+10]=n[8],t=!0}return t}updateMatrix4(e){let t=!1;const s=this.values,n=e.getValue().elements,r=e.offset;return jR(s,n,r)===!1&&(this.buffer.set(n,r),XR(s,n,r),t=!0),t}_getBufferForType(e){return e==="int"||e==="ivec2"||e==="ivec3"||e==="ivec4"?new Int32Array(this.buffer.buffer):e==="uint"||e==="uvec2"||e==="uvec3"||e==="uvec4"?new Uint32Array(this.buffer.buffer):this.buffer}}function XR(o,e,t){for(let s=0,n=e.length;s<n;s++)o[t+s]=e[s]}function jR(o,e,t){for(let s=0,n=e.length;s<n;s++)if(o[t+s]!==e[s])return!1;return!0}let KR=0;class bg extends qR{constructor(e,t){super(e),this.id=KR++,this.groupNode=t,this.isNodeUniformsGroup=!0}}let YR=0;class QR extends Du{constructor(e,t){super(e),this.id=YR++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(e){const{texture:t}=this;return e!==this.generation?(this.generation=e,!0):t.isVideoTexture}update(){const{texture:e,version:t}=this;return t!==e.version?(this.version=e.version,!0):!1}}class Oi extends QR{constructor(e,t,s,n=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=s,this.access=n}needsBindingsUpdate(e){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(e)}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class Ng extends Oi{constructor(e,t,s,n=null){super(e,t,s,n),this.isSampledCubeTexture=!0}}class Sg extends Oi{constructor(e,t,s,n=null){super(e,t,s,n),this.isSampledTexture3D=!0}}const ZR={textureDimensions:"textureSize",equals:"equal"},JR={low:"lowp",medium:"mediump",high:"highp"},Xc={swizzleAssign:!0,storageBuffer:!1},jc=`
precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler3D;
precision highp samplerCube;
precision highp sampler2DArray;

precision highp usampler2D;
precision highp usampler3D;
precision highp usamplerCube;
precision highp usampler2DArray;

precision highp isampler2D;
precision highp isampler3D;
precision highp isamplerCube;
precision highp isampler2DArray;

precision lowp sampler2DShadow;
`;class eA extends fg{constructor(e,t){super(e,t,new MR),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]},this.useComparisonMethod=!0}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==Vn}getMethod(e){return ZR[e]||e}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),n=[];for(const i of t.inputs)n.push(this.getType(i.type)+" "+i.name);return`${this.getType(t.type)} ${t.name}( ${n.join(", ")} ) {

	${s.vars}

${s.code}
	return ${s.result};

}`}setupPBO(e){const t=e.value;if(t.pbo===void 0){const s=t.array,n=t.count*t.itemSize,{itemSize:r}=t,i=t.array.constructor.name.toLowerCase().includes("int");let a=i?xa:ya;r===2?a=i?Ta:Gn:r===3?a=i?Hm:ma:r===4&&(a=i?_a:es);const u={Float32Array:nt,Uint8Array:_t,Uint16Array:ks,Uint32Array:Fe,Int8Array:Rn,Int16Array:An,Int32Array:ze,Uint8ClampedArray:_t},c=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(n/r))));let l=Math.ceil(n/r/c);c*l*r<n&&l++;const d=c*l*r,h=new s.constructor(d);h.set(s,0),t.array=h;const p=new nm(t.array,c,l,a,u[t.array.constructor.name]||nt);p.needsUpdate=!0,p.isPBOTexture=!0;const f=new Ct(p,null,null);f.setPrecision("high"),t.pboNode=f,t.pbo=f.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&e.node.isTextureNode!==!0&&e.node.isBufferNode!==!0?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:s}=e,n=t.value;if(this.renderer.backend.has(n)){const l=this.renderer.backend.get(n);l.pbo=n.pbo}const r=this.getUniformFromNode(n.pboNode,"texture",this.shaderStage,this.context.label),i=this.getPropertyName(r);this.increaseUsage(s);const a=s.build(this,"uint"),u=this.getDataFromNode(e);let c=u.propertyName;if(c===void 0){const l=this.getVarFromNode(e);c=this.getPropertyName(l);const d=this.getDataFromNode(t);let h=d.propertySizeName;h===void 0&&(h=c+"Size",this.getVarFromNode(t,h,"uint"),this.addLineFlowCode(`${h} = uint( textureSize( ${i}, 0 ).x )`,e),d.propertySizeName=h);const{itemSize:p}=n,f="."+Ss.join("").slice(0,p),m=`ivec2(${a} % ${h}, ${a} / ${h})`,b=this.generateTextureLoad(null,i,m,null,"0");let _="vec4";n.pbo.type===Fe?_="uvec4":n.pbo.type===ze&&(_="ivec4"),this.addLineFlowCode(`${c} = ${_}(${b})${f}`,e),u.propertyName=c}return c}generateTextureLoad(e,t,s,n,r="0"){return n?`texelFetch( ${t}, ivec3( ${s}, ${n} ), ${r} )`:`texelFetch( ${t}, ${s}, ${r} )`}generateTexture(e,t,s,n){return e.isDepthTexture?`texture( ${t}, ${s} ).x`:(n&&(s=`vec3( ${s}, ${n} )`),`texture( ${t}, ${s} )`)}generateTextureLevel(e,t,s,n){return`textureLod( ${t}, ${s}, ${n} )`}generateTextureBias(e,t,s,n){return`texture( ${t}, ${s}, ${n} )`}generateTextureGrad(e,t,s,n){return`textureGrad( ${t}, ${s}, ${n[0]}, ${n[1]} )`}generateTextureCompare(e,t,s,n,r,i=this.shaderStage){if(i==="fragment")return`texture( ${t}, vec3( ${s}, ${n} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${i} shader.`)}getVars(e){const t=[],s=this.vars[e];if(s!==void 0)for(const n of s)t.push(`${this.getVar(n.type,n.name,n.count)};`);return t.join(`
	`)}getUniforms(e){const t=this.uniforms[e],s=[],n={};for(const i of t){let a=null,u=!1;if(i.type==="texture"){const l=i.node.value;let d="";l.isDataTexture===!0&&(l.type===Fe?d="u":l.type===ze&&(d="i")),l.compareFunction?a=`sampler2DShadow ${i.name};`:l.isDataArrayTexture===!0||l.isCompressedArrayTexture===!0?a=`${d}sampler2DArray ${i.name};`:a=`${d}sampler2D ${i.name};`}else if(i.type==="cubeTexture")a=`samplerCube ${i.name};`;else if(i.type==="texture3D")a=`sampler3D ${i.name};`;else if(i.type==="buffer"){const l=i.node,d=this.getType(l.bufferType),h=l.bufferCount,p=h>0?h:"";a=`${l.name} {
	${d} ${i.name}[${p}];
};
`}else a=`${this.getVectorType(i.type)} ${this.getPropertyName(i,e)};`,u=!0;const c=i.node.precision;if(c!==null&&(a=JR[c]+" "+a),u){a="	"+a;const l=i.groupNode.name;(n[l]||(n[l]=[])).push(a)}else a="uniform "+a,s.push(a)}let r="";for(const i in n){const a=n[i];r+=this._getGLSLUniformStruct(e+"_"+i,a.join(`
`))+`
`}return r+=s.join(`
`),r}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==ze){let s=e;e.isInterleavedBufferAttribute&&(s=e.data);const n=s.array;n instanceof Uint32Array||n instanceof Int32Array||(t=t.slice(1))}return t}getAttributes(e){let t="";if(e==="vertex"||e==="compute"){const s=this.getAttributesArray();let n=0;for(const r of s)t+=`layout( location = ${n++} ) in ${r.type} ${r.name};
`}return t}getStructMembers(e){const t=[];for(const s of e.members)t.push(`	${s.type} ${s.name};`);return t.join(`
`)}getStructs(e){const t=[],s=this.structs[e],n=[];for(const r of s)if(r.output)for(const i of r.members)n.push(`layout( location = ${i.index} ) out ${i.type} ${i.name};`);else{let i="struct "+r.name+` {
`;i+=this.getStructMembers(r),i+=`
};
`,t.push(i)}return n.length===0&&n.push("layout( location = 0 ) out vec4 fragColor;"),`
`+n.join(`
`)+`

`+t.join(`
`)}getVaryings(e){let t="";const s=this.varyings;if(e==="vertex"||e==="compute")for(const n of s){e==="compute"&&(n.needsInterpolation=!0);const r=this.getType(n.type);if(n.needsInterpolation){const i=r.includes("int")||r.includes("uv")||r.includes("iv")?"flat ":"";t+=`${i} out ${r} ${n.name};
`}else t+=`${r} ${n.name};
`}else if(e==="fragment"){for(const n of s)if(n.needsInterpolation){const r=this.getType(n.type),i=r.includes("int")||r.includes("uv")||r.includes("iv")?"flat ":"";t+=`${i}in ${r} ${n.name};
`}}for(const n of this.builtins[e])t+=`${n};
`;return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((s,n)=>s*n,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,s=this.shaderStage){const n=this.extensions[s]||(this.extensions[s]=new Map);n.has(e)===!1&&n.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if(e==="vertex"){const n=this.renderer.backend.extensions;this.object.isBatchedMesh&&n.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const s=this.extensions[e];if(s!==void 0)for(const{name:n,behavior:r}of s.values())t.push(`#extension ${n} : ${r}`);return t.join(`
`)}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let t=Xc[e];if(t===void 0){let s;switch(t=!1,e){case"float32Filterable":s="OES_texture_float_linear";break;case"clipDistance":s="WEBGL_clip_cull_distance";break}if(s!==void 0){const n=this.renderer.backend.extensions;n.has(s)&&(n.get(s),t=!0)}Xc[e]=t}return t}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let s=0;s<e.length;s++){const n=e[s],r=this.getPropertyName(n.attributeNode);t+=`${n.varyingName} = ${r};
	`}return t}_getGLSLUniformStruct(e,t){return`
layout( std140 ) uniform ${e} {
${t}
};`}_getGLSLVertexCode(e){return`#version 300 es

${this.getSignature()}

// extensions 
${e.extensions}

// precision
${jc}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// attributes
${e.attributes}

// codes
${e.codes}

void main() {

	// vars
	${e.vars}

	// transforms
	${e.transforms}

	// flow
	${e.flow}

	gl_PointSize = 1.0;

}
`}_getGLSLFragmentCode(e){return`#version 300 es

${this.getSignature()}

// precision
${jc}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// codes
${e.codes}

// structs
${e.structs}

void main() {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let s=`// code

`;s+=this.flowCode[t];const n=this.flowNodes[t],r=n[n.length-1];for(const a of n){const u=this.getFlowData(a),c=a.name;c&&(s.length>0&&(s+=`
`),s+=`	// flow -> ${c}
	`),s+=`${u.code}
	`,a===r&&t!=="compute"&&(s+=`// result
	`,t==="vertex"?(s+="gl_Position = ",s+=`${u.result};`):t==="fragment"&&(a.outputNode.isOutputStructNode||(s+="fragColor = ",s+=`${u.result};`)))}const i=e[t];i.extensions=this.getExtensions(t),i.uniforms=this.getUniforms(t),i.attributes=this.getAttributes(t),i.varyings=this.getVaryings(t),i.vars=this.getVars(t),i.structs=this.getStructs(t),i.codes=this.getCodes(t),i.transforms=this.getTransforms(t),i.flow=s}this.material!==null?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,s,n=null){const r=super.getUniformFromNode(e,t,s,n),i=this.getDataFromNode(e,s,this.globalCache);let a=i.uniformGPU;if(a===void 0){const u=e.groupNode,c=u.name,l=this.getBindGroupArray(c,s);if(t==="texture")a=new Oi(r.name,r.node,u),l.push(a);else if(t==="cubeTexture")a=new Ng(r.name,r.node,u),l.push(a);else if(t==="texture3D")a=new Sg(r.name,r.node,u),l.push(a);else if(t==="buffer"){e.name=`NodeBuffer_${e.id}`,r.name=`buffer${e.id}`;const d=new _g(e,u);d.name=e.name,l.push(d),a=d}else{const d=this.uniformGroups[s]||(this.uniformGroups[s]={});let h=d[c];h===void 0&&(h=new bg(s+"_"+c,u),d[c]=h,l.push(h)),a=this.getNodeUniform(r,t),h.addUniform(a)}i.uniformGPU=a}return r}}let yo=null,Us=null;class vg{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null,this.timestampQueryPool={render:null,compute:null}}async init(e){this.renderer=e}get coordinateSystem(){}beginRender(){}finishRender(){}beginCompute(){}finishCompute(){}draw(){}compute(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}updateBinding(){}createRenderPipeline(){}createComputePipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}destroySampler(){}createDefaultTexture(){}createTexture(){}updateTexture(){}generateMipmaps(){}destroyTexture(){}async copyTextureToBuffer(){}copyTextureToTexture(){}copyFramebufferToTexture(){}createAttribute(){}createIndexAttribute(){}createStorageAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}updateViewport(){}isOccluded(){}async resolveTimestampsAsync(e="render"){if(!this.trackTimestamp){Dn("WebGPURenderer: Timestamp tracking is disabled.");return}const t=this.timestampQueryPool[e];if(!t){Dn(`WebGPURenderer: No timestamp query pool for type '${e}' found.`);return}const s=await t.resolveQueriesAsync();return this.renderer.info[e].timestamp=s,s}async waitForGPU(){}async getArrayBufferAsync(){}async hasFeatureAsync(){}hasFeature(){}getMaxAnisotropy(){}getDrawingBufferSize(){return yo=yo||new We,this.renderer.getDrawingBufferSize(yo)}setScissorTest(){}getClearColor(){const e=this.renderer;return Us=Us||new mu,e.getClearColor(Us),Us.getRGB(Us,this.renderer.currentColorSpace),Us}getDomElement(){let e=this.domElement;return e===null&&(e=this.parameters.canvas!==void 0?this.parameters.canvas:Xg(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${ul} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let tA=0;class sA{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[this.activeBufferIndex^1]}switchBuffers(){this.activeBufferIndex^=1}}class nA{constructor(e){this.backend=e}createAttribute(e,t){const s=this.backend,{gl:n}=s,r=e.array,i=e.usage||n.STATIC_DRAW,a=e.isInterleavedBufferAttribute?e.data:e,u=s.get(a);let c=u.bufferGPU;c===void 0&&(c=this._createBuffer(n,t,r,i),u.bufferGPU=c,u.bufferType=t,u.version=a.version);let l;if(r instanceof Float32Array)l=n.FLOAT;else if(r instanceof Uint16Array)e.isFloat16BufferAttribute?l=n.HALF_FLOAT:l=n.UNSIGNED_SHORT;else if(r instanceof Int16Array)l=n.SHORT;else if(r instanceof Uint32Array)l=n.UNSIGNED_INT;else if(r instanceof Int32Array)l=n.INT;else if(r instanceof Int8Array)l=n.BYTE;else if(r instanceof Uint8Array)l=n.UNSIGNED_BYTE;else if(r instanceof Uint8ClampedArray)l=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+r);let d={bufferGPU:c,bufferType:t,type:l,byteLength:r.byteLength,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:l===n.INT||l===n.UNSIGNED_INT||e.gpuType===ze,id:tA++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const h=this._createBuffer(n,t,r,i);d=new sA(d,h)}s.set(e,d)}updateAttribute(e){const t=this.backend,{gl:s}=t,n=e.array,r=e.isInterleavedBufferAttribute?e.data:e,i=t.get(r),a=i.bufferType,u=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(s.bindBuffer(a,i.bufferGPU),u.length===0)s.bufferSubData(a,0,n);else{for(let c=0,l=u.length;c<l;c++){const d=u[c];s.bufferSubData(a,d.start*n.BYTES_PER_ELEMENT,n,d.start,d.count)}r.clearUpdateRanges()}s.bindBuffer(a,null),i.version=r.version}destroyAttribute(e){const t=this.backend,{gl:s}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const n=t.get(e);s.deleteBuffer(n.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:s}=t,n=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:r}=t.get(n),i=e.array,a=i.byteLength;s.bindBuffer(s.COPY_READ_BUFFER,r);const u=s.createBuffer();s.bindBuffer(s.COPY_WRITE_BUFFER,u),s.bufferData(s.COPY_WRITE_BUFFER,a,s.STREAM_READ),s.copyBufferSubData(s.COPY_READ_BUFFER,s.COPY_WRITE_BUFFER,0,0,a),await t.utils._clientWaitAsync();const c=new e.array.constructor(i.length);return s.bindBuffer(s.COPY_WRITE_BUFFER,u),s.getBufferSubData(s.COPY_WRITE_BUFFER,0,c),s.deleteBuffer(u),s.bindBuffer(s.COPY_READ_BUFFER,null),s.bindBuffer(s.COPY_WRITE_BUFFER,null),c.buffer}_createBuffer(e,t,s,n){const r=e.createBuffer();return e.bindBuffer(t,r),e.bufferData(t,s,n),e.bindBuffer(t,null),r}}let xo,Sn;class rA{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},this._init()}_init(){const e=this.gl;xo={[Is]:e.FUNC_ADD,[xl]:e.FUNC_SUBTRACT,[yl]:e.FUNC_REVERSE_SUBTRACT},Sn={[wl]:e.ZERO,[Cl]:e.ONE,[El]:e.SRC_COLOR,[Al]:e.SRC_ALPHA,[Rl]:e.SRC_ALPHA_SATURATE,[vl]:e.DST_COLOR,[Sl]:e.DST_ALPHA,[Nl]:e.ONE_MINUS_SRC_COLOR,[bl]:e.ONE_MINUS_SRC_ALPHA,[_l]:e.ONE_MINUS_DST_COLOR,[Tl]:e.ONE_MINUS_DST_ALPHA};const t=e.getParameter(e.SCISSOR_BOX),s=e.getParameter(e.VIEWPORT);this.currentScissor=new he().fromArray(t),this.currentViewport=new he().fromArray(s),this._tempVec4=new he}enable(e){const{enabled:t}=this;t[e]!==!0&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;t[e]!==!1&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==jg?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===Kg?t.cullFace(t.BACK):e===Yg?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:s}=this;e!==t&&(s.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,s,n,r,i,a,u){const{gl:c}=this;if(e===In){this.currentBlendingEnabled===!0&&(this.disable(c.BLEND),this.currentBlendingEnabled=!1);return}if(this.currentBlendingEnabled===!1&&(this.enable(c.BLEND),this.currentBlendingEnabled=!0),e!==Ml){if(e!==this.currentBlending||u!==this.currentPremultipledAlpha){if((this.currentBlendEquation!==Is||this.currentBlendEquationAlpha!==Is)&&(c.blendEquation(c.FUNC_ADD),this.currentBlendEquation=Is,this.currentBlendEquationAlpha=Is),u)switch(e){case js:c.blendFuncSeparate(c.ONE,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case Zr:c.blendFunc(c.ONE,c.ONE);break;case Qr:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case Yr:c.blendFuncSeparate(c.ZERO,c.SRC_COLOR,c.ZERO,c.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case js:c.blendFuncSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case Zr:c.blendFunc(c.SRC_ALPHA,c.ONE);break;case Qr:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case Yr:c.blendFunc(c.ZERO,c.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=u}return}r=r||t,i=i||s,a=a||n,(t!==this.currentBlendEquation||r!==this.currentBlendEquationAlpha)&&(c.blendEquationSeparate(xo[t],xo[r]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=r),(s!==this.currentBlendSrc||n!==this.currentBlendDst||i!==this.currentBlendSrcAlpha||a!==this.currentBlendDstAlpha)&&(c.blendFuncSeparate(Sn[s],Sn[n],Sn[i],Sn[a]),this.currentBlendSrc=s,this.currentBlendDst=n,this.currentBlendSrcAlpha=i,this.currentBlendDstAlpha=a),this.currentBlending=e,this.currentPremultipledAlpha=!1}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case Vl:t.depthFunc(t.NEVER);break;case Il:t.depthFunc(t.ALWAYS);break;case Ll:t.depthFunc(t.LESS);break;case Dl:t.depthFunc(t.LEQUAL);break;case Ul:t.depthFunc(t.EQUAL);break;case Pl:t.depthFunc(t.GEQUAL);break;case Fl:t.depthFunc(t.GREATER);break;case Bl:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}scissor(e,t,s,n){const r=this._tempVec4.set(e,t,s,n);if(this.currentScissor.equals(r)===!1){const{gl:i}=this;i.scissor(r.x,r.y,r.z,r.w),this.currentScissor.copy(r)}}viewport(e,t,s,n){const r=this._tempVec4.set(e,t,s,n);if(this.currentViewport.equals(r)===!1){const{gl:i}=this;i.viewport(r.x,r.y,r.z,r.w),this.currentViewport.copy(r)}}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,s){(this.currentStencilFunc!==e||this.currentStencilRef!==t||this.currentStencilFuncMask!==s)&&(this.gl.stencilFunc(e,t,s),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=s)}setStencilOp(e,t,s){(this.currentStencilFail!==e||this.currentStencilZFail!==t||this.currentStencilZPass!==s)&&(this.gl.stencilOp(e,t,s),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=s)}setMaterial(e,t,s){const{gl:n}=this;e.side===Xs?this.disable(n.CULL_FACE):this.enable(n.CULL_FACE);let r=e.side===vt;t&&(r=!r),this.setFlipSided(r),e.blending===js&&e.transparent===!1?this.setBlending(In):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const i=e.stencilWrite;if(this.setStencilTest(i),i&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),e.alphaToCoverage===!0&&this.backend.renderer.samples>1?this.enable(n.SAMPLE_ALPHA_TO_COVERAGE):this.disable(n.SAMPLE_ALPHA_TO_COVERAGE),s>0&&this.currentClippingPlanes!==s)for(let u=0;u<8;u++)u<s?this.enable(12288+u):this.disable(12288+u)}setPolygonOffset(e,t,s){const{gl:n}=this;e?(this.enable(n.POLYGON_OFFSET_FILL),(this.currentPolygonOffsetFactor!==t||this.currentPolygonOffsetUnits!==s)&&(n.polygonOffset(t,s),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=s)):this.disable(n.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e?(this.gl.useProgram(e),this.currentProgram=e,!0):!1}bindFramebuffer(e,t){const{gl:s,currentBoundFramebuffers:n}=this;return n[e]!==t?(s.bindFramebuffer(e,t),n[e]=t,e===s.DRAW_FRAMEBUFFER&&(n[s.FRAMEBUFFER]=t),e===s.FRAMEBUFFER&&(n[s.DRAW_FRAMEBUFFER]=t),!0):!1}drawBuffers(e,t){const{gl:s}=this;let n=[],r=!1;if(e.textures!==null){n=this.currentDrawbuffers.get(t),n===void 0&&(n=[],this.currentDrawbuffers.set(t,n));const i=e.textures;if(n.length!==i.length||n[0]!==s.COLOR_ATTACHMENT0){for(let a=0,u=i.length;a<u;a++)n[a]=s.COLOR_ATTACHMENT0+a;n.length=i.length,r=!0}}else n[0]!==s.BACK&&(n[0]=s.BACK,r=!0);r&&s.drawBuffers(n)}activeTexture(e){const{gl:t,currentTextureSlot:s,maxTextures:n}=this;e===void 0&&(e=t.TEXTURE0+n-1),s!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,s){const{gl:n,currentTextureSlot:r,currentBoundTextures:i,maxTextures:a}=this;s===void 0&&(r===null?s=n.TEXTURE0+a-1:s=r);let u=i[s];u===void 0&&(u={type:void 0,texture:void 0},i[s]=u),(u.type!==e||u.texture!==t)&&(r!==s&&(n.activeTexture(s),this.currentTextureSlot=s),n.bindTexture(e,t),u.type=e,u.texture=t)}bindBufferBase(e,t,s){const{gl:n}=this,r=`${e}-${t}`;return this.currentBoundBufferBases[r]!==s?(n.bindBufferBase(e,t,s),this.currentBoundBufferBases[r]=s,!0):!1}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:s}=this,n=s[t];n!==void 0&&n.type!==void 0&&(e.bindTexture(n.type,null),n.type=void 0,n.texture=void 0)}}class iA{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=Vn){const{gl:s,extensions:n}=this;let r;if(e===_t)return s.UNSIGNED_BYTE;if(e===Qg)return s.UNSIGNED_SHORT_4_4_4_4;if(e===Zg)return s.UNSIGNED_SHORT_5_5_5_1;if(e===Gl)return s.UNSIGNED_INT_5_9_9_9_REV;if(e===Rn)return s.BYTE;if(e===An)return s.SHORT;if(e===ks)return s.UNSIGNED_SHORT;if(e===ze)return s.INT;if(e===Fe)return s.UNSIGNED_INT;if(e===nt)return s.FLOAT;if(e===it)return s.HALF_FLOAT;if(e===Jg)return s.ALPHA;if(e===ma)return s.RGB;if(e===es)return s.RGBA;if(e===em)return s.LUMINANCE;if(e===tm)return s.LUMINANCE_ALPHA;if(e===er)return s.DEPTH_COMPONENT;if(e===Jn)return s.DEPTH_STENCIL;if(e===ya)return s.RED;if(e===xa)return s.RED_INTEGER;if(e===Gn)return s.RG;if(e===Ta)return s.RG_INTEGER;if(e===_a)return s.RGBA_INTEGER;if(e===ki||e===Vr||e===Gr||e===Or)if(t===q)if(r=n.get("WEBGL_compressed_texture_s3tc_srgb"),r!==null){if(e===ki)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===Vr)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===Gr)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===Or)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(r=n.get("WEBGL_compressed_texture_s3tc"),r!==null){if(e===ki)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Vr)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Gr)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Or)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===Vu||e===Gu||e===Ou||e===ku)if(r=n.get("WEBGL_compressed_texture_pvrtc"),r!==null){if(e===Vu)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Gu)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Ou)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===ku)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===zu||e===Co||e===wo)if(r=n.get("WEBGL_compressed_texture_etc"),r!==null){if(e===zu||e===Co)return t===q?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(e===wo)return t===q?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(e===Mo||e===Bo||e===Fo||e===Po||e===Uo||e===Do||e===Lo||e===Io||e===Vo||e===Go||e===Oo||e===ko||e===zo||e===Wo)if(r=n.get("WEBGL_compressed_texture_astc"),r!==null){if(e===Mo)return t===q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Bo)return t===q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Fo)return t===q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Po)return t===q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Uo)return t===q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===Do)return t===q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Lo)return t===q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===Io)return t===q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===Vo)return t===q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===Go)return t===q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===Oo)return t===q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===ko)return t===q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===zo)return t===q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===Wo)return t===q?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(e===zi)if(r=n.get("EXT_texture_compression_bptc"),r!==null){if(e===zi)return t===q?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(e===sm||e===Wu||e===$u||e===Hu)if(r=n.get("EXT_texture_compression_rgtc"),r!==null){if(e===zi)return r.COMPRESSED_RED_RGTC1_EXT;if(e===Wu)return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===$u)return r.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===Hu)return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return e===tr?s.UNSIGNED_INT_24_8:s[e]!==void 0?s[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((s,n)=>{function r(){const i=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(i===e.WAIT_FAILED){e.deleteSync(t),n();return}if(i===e.TIMEOUT_EXPIRED){requestAnimationFrame(r);return}e.deleteSync(t),s()}r()})}}let Kc=!1,Dr,To,Yc;class oA{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},Kc===!1&&(this._init(),Kc=!0)}_init(){const e=this.gl;Dr={[gi]:e.REPEAT,[fa]:e.CLAMP_TO_EDGE,[fi]:e.MIRRORED_REPEAT},To={[Vt]:e.NEAREST,[cl]:e.NEAREST_MIPMAP_NEAREST,[Ln]:e.NEAREST_MIPMAP_LINEAR,[zt]:e.LINEAR,[Eo]:e.LINEAR_MIPMAP_NEAREST,[xs]:e.LINEAR_MIPMAP_LINEAR},Yc={[ml]:e.NEVER,[gl]:e.ALWAYS,[ga]:e.LESS,[fl]:e.LEQUAL,[pl]:e.EQUAL,[hl]:e.GEQUAL,[dl]:e.GREATER,[ll]:e.NOTEQUAL}}getGLTextureType(e){const{gl:t}=this;let s;return e.isCubeTexture===!0?s=t.TEXTURE_CUBE_MAP:e.isDataArrayTexture===!0||e.isCompressedArrayTexture===!0?s=t.TEXTURE_2D_ARRAY:e.isData3DTexture===!0?s=t.TEXTURE_3D:s=t.TEXTURE_2D,s}getInternalFormat(e,t,s,n,r=!1){const{gl:i,extensions:a}=this;if(e!==null){if(i[e]!==void 0)return i[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let u=t;return t===i.RED&&(s===i.FLOAT&&(u=i.R32F),s===i.HALF_FLOAT&&(u=i.R16F),s===i.UNSIGNED_BYTE&&(u=i.R8),s===i.UNSIGNED_SHORT&&(u=i.R16),s===i.UNSIGNED_INT&&(u=i.R32UI),s===i.BYTE&&(u=i.R8I),s===i.SHORT&&(u=i.R16I),s===i.INT&&(u=i.R32I)),t===i.RED_INTEGER&&(s===i.UNSIGNED_BYTE&&(u=i.R8UI),s===i.UNSIGNED_SHORT&&(u=i.R16UI),s===i.UNSIGNED_INT&&(u=i.R32UI),s===i.BYTE&&(u=i.R8I),s===i.SHORT&&(u=i.R16I),s===i.INT&&(u=i.R32I)),t===i.RG&&(s===i.FLOAT&&(u=i.RG32F),s===i.HALF_FLOAT&&(u=i.RG16F),s===i.UNSIGNED_BYTE&&(u=i.RG8),s===i.UNSIGNED_SHORT&&(u=i.RG16),s===i.UNSIGNED_INT&&(u=i.RG32UI),s===i.BYTE&&(u=i.RG8I),s===i.SHORT&&(u=i.RG16I),s===i.INT&&(u=i.RG32I)),t===i.RG_INTEGER&&(s===i.UNSIGNED_BYTE&&(u=i.RG8UI),s===i.UNSIGNED_SHORT&&(u=i.RG16UI),s===i.UNSIGNED_INT&&(u=i.RG32UI),s===i.BYTE&&(u=i.RG8I),s===i.SHORT&&(u=i.RG16I),s===i.INT&&(u=i.RG32I)),t===i.RGB&&(s===i.FLOAT&&(u=i.RGB32F),s===i.HALF_FLOAT&&(u=i.RGB16F),s===i.UNSIGNED_BYTE&&(u=i.RGB8),s===i.UNSIGNED_SHORT&&(u=i.RGB16),s===i.UNSIGNED_INT&&(u=i.RGB32UI),s===i.BYTE&&(u=i.RGB8I),s===i.SHORT&&(u=i.RGB16I),s===i.INT&&(u=i.RGB32I),s===i.UNSIGNED_BYTE&&(u=n===q&&r===!1?i.SRGB8:i.RGB8),s===i.UNSIGNED_SHORT_5_6_5&&(u=i.RGB565),s===i.UNSIGNED_SHORT_5_5_5_1&&(u=i.RGB5_A1),s===i.UNSIGNED_SHORT_4_4_4_4&&(u=i.RGB4),s===i.UNSIGNED_INT_5_9_9_9_REV&&(u=i.RGB9_E5)),t===i.RGB_INTEGER&&(s===i.UNSIGNED_BYTE&&(u=i.RGB8UI),s===i.UNSIGNED_SHORT&&(u=i.RGB16UI),s===i.UNSIGNED_INT&&(u=i.RGB32UI),s===i.BYTE&&(u=i.RGB8I),s===i.SHORT&&(u=i.RGB16I),s===i.INT&&(u=i.RGB32I)),t===i.RGBA&&(s===i.FLOAT&&(u=i.RGBA32F),s===i.HALF_FLOAT&&(u=i.RGBA16F),s===i.UNSIGNED_BYTE&&(u=i.RGBA8),s===i.UNSIGNED_SHORT&&(u=i.RGBA16),s===i.UNSIGNED_INT&&(u=i.RGBA32UI),s===i.BYTE&&(u=i.RGBA8I),s===i.SHORT&&(u=i.RGBA16I),s===i.INT&&(u=i.RGBA32I),s===i.UNSIGNED_BYTE&&(u=n===q&&r===!1?i.SRGB8_ALPHA8:i.RGBA8),s===i.UNSIGNED_SHORT_4_4_4_4&&(u=i.RGBA4),s===i.UNSIGNED_SHORT_5_5_5_1&&(u=i.RGB5_A1)),t===i.RGBA_INTEGER&&(s===i.UNSIGNED_BYTE&&(u=i.RGBA8UI),s===i.UNSIGNED_SHORT&&(u=i.RGBA16UI),s===i.UNSIGNED_INT&&(u=i.RGBA32UI),s===i.BYTE&&(u=i.RGBA8I),s===i.SHORT&&(u=i.RGBA16I),s===i.INT&&(u=i.RGBA32I)),t===i.DEPTH_COMPONENT&&(s===i.UNSIGNED_SHORT&&(u=i.DEPTH_COMPONENT16),s===i.UNSIGNED_INT&&(u=i.DEPTH_COMPONENT24),s===i.FLOAT&&(u=i.DEPTH_COMPONENT32F)),t===i.DEPTH_STENCIL&&s===i.UNSIGNED_INT_24_8&&(u=i.DEPTH24_STENCIL8),(u===i.R16F||u===i.R32F||u===i.RG16F||u===i.RG32F||u===i.RGBA16F||u===i.RGBA32F)&&a.get("EXT_color_buffer_float"),u}setTextureParameters(e,t){const{gl:s,extensions:n,backend:r}=this;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,t.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,t.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE),s.texParameteri(e,s.TEXTURE_WRAP_S,Dr[t.wrapS]),s.texParameteri(e,s.TEXTURE_WRAP_T,Dr[t.wrapT]),(e===s.TEXTURE_3D||e===s.TEXTURE_2D_ARRAY)&&s.texParameteri(e,s.TEXTURE_WRAP_R,Dr[t.wrapR]),s.texParameteri(e,s.TEXTURE_MAG_FILTER,To[t.magFilter]);const i=t.mipmaps!==void 0&&t.mipmaps.length>0,a=t.minFilter===zt&&i?xs:t.minFilter;if(s.texParameteri(e,s.TEXTURE_MIN_FILTER,To[a]),t.compareFunction&&(s.texParameteri(e,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(e,s.TEXTURE_COMPARE_FUNC,Yc[t.compareFunction])),n.has("EXT_texture_filter_anisotropic")===!0){if(t.magFilter===Vt||t.minFilter!==Ln&&t.minFilter!==xs||t.type===nt&&n.has("OES_texture_float_linear")===!1)return;if(t.anisotropy>1){const u=n.get("EXT_texture_filter_anisotropic");s.texParameterf(e,u.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,r.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:s,defaultTextures:n}=this,r=this.getGLTextureType(e);let i=n[r];i===void 0&&(i=t.createTexture(),s.state.bindTexture(r,i),t.texParameteri(r,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(r,t.TEXTURE_MAG_FILTER,t.NEAREST),n[r]=i),s.set(e,{textureGPU:i,glTextureType:r,isDefault:!0})}createTexture(e,t){const{gl:s,backend:n}=this,{levels:r,width:i,height:a,depth:u}=t,c=n.utils.convert(e.format,e.colorSpace),l=n.utils.convert(e.type),d=this.getInternalFormat(e.internalFormat,c,l,e.colorSpace,e.isVideoTexture),h=s.createTexture(),p=this.getGLTextureType(e);n.state.bindTexture(p,h),this.setTextureParameters(p,e),e.isDataArrayTexture||e.isCompressedArrayTexture?s.texStorage3D(s.TEXTURE_2D_ARRAY,r,d,i,a,u):e.isData3DTexture?s.texStorage3D(s.TEXTURE_3D,r,d,i,a,u):e.isVideoTexture||s.texStorage2D(p,r,d,i,a),n.set(e,{textureGPU:h,glTextureType:p,glFormat:c,glType:l,glInternalFormat:d})}copyBufferToTexture(e,t){const{gl:s,backend:n}=this,{textureGPU:r,glTextureType:i,glFormat:a,glType:u}=n.get(t),{width:c,height:l}=t.source.data;s.bindBuffer(s.PIXEL_UNPACK_BUFFER,e),n.state.bindTexture(i,r),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,!1),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),s.texSubImage2D(i,0,0,0,c,l,a,u,0),s.bindBuffer(s.PIXEL_UNPACK_BUFFER,null),n.state.unbindTexture()}updateTexture(e,t){const{gl:s}=this,{width:n,height:r}=t,{textureGPU:i,glTextureType:a,glFormat:u,glType:c,glInternalFormat:l}=this.backend.get(e);if(e.isRenderTargetTexture||i===void 0)return;const d=h=>h.isDataTexture?h.image.data:typeof HTMLImageElement<"u"&&h instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&h instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&h instanceof ImageBitmap||h instanceof OffscreenCanvas?h:h.data;if(this.backend.state.bindTexture(a,i),this.setTextureParameters(a,e),e.isCompressedTexture){const h=e.mipmaps,p=t.image;for(let f=0;f<h.length;f++){const m=h[f];e.isCompressedArrayTexture?e.format!==s.RGBA?u!==null?s.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,f,0,0,0,m.width,m.height,p.depth,u,m.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):s.texSubImage3D(s.TEXTURE_2D_ARRAY,f,0,0,0,m.width,m.height,p.depth,u,c,m.data):u!==null?s.compressedTexSubImage2D(s.TEXTURE_2D,f,0,0,m.width,m.height,u,m.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const h=t.images;for(let p=0;p<6;p++){const f=d(h[p]);s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+p,0,0,0,n,r,u,c,f)}}else if(e.isDataArrayTexture){const h=t.image;s.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,h.width,h.height,h.depth,u,c,h.data)}else if(e.isData3DTexture){const h=t.image;s.texSubImage3D(s.TEXTURE_3D,0,0,0,0,h.width,h.height,h.depth,u,c,h.data)}else if(e.isVideoTexture)e.update(),s.texImage2D(a,0,l,u,c,t.image);else{const h=d(t.image);s.texSubImage2D(a,0,0,0,n,r,u,c,h)}}generateMipmaps(e){const{gl:t,backend:s}=this,{textureGPU:n,glTextureType:r}=s.get(e);s.state.bindTexture(r,n),t.generateMipmap(r)}deallocateRenderBuffers(e){const{gl:t,backend:s}=this;if(e){const n=s.get(e);if(n.renderBufferStorageSetup=void 0,n.framebuffers){for(const r in n.framebuffers)t.deleteFramebuffer(n.framebuffers[r]);delete n.framebuffers}if(n.depthRenderbuffer&&(t.deleteRenderbuffer(n.depthRenderbuffer),delete n.depthRenderbuffer),n.stencilRenderbuffer&&(t.deleteRenderbuffer(n.stencilRenderbuffer),delete n.stencilRenderbuffer),n.msaaFrameBuffer&&(t.deleteFramebuffer(n.msaaFrameBuffer),delete n.msaaFrameBuffer),n.msaaRenderbuffers){for(let r=0;r<n.msaaRenderbuffers.length;r++)t.deleteRenderbuffer(n.msaaRenderbuffers[r]);delete n.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:s}=this,{textureGPU:n,renderTarget:r}=s.get(e);this.deallocateRenderBuffers(r),t.deleteTexture(n),s.delete(e)}copyTextureToTexture(e,t,s=null,n=null,r=0){const{gl:i,backend:a}=this,{state:u}=this.backend,{textureGPU:c,glTextureType:l,glType:d,glFormat:h}=a.get(t);let p,f,m,b,_,C;s!==null?(p=s.max.x-s.min.x,f=s.max.y-s.min.y,m=s.min.x,b=s.min.y):(p=e.image.width,f=e.image.height,m=0,b=0),n!==null?(_=n.x,C=n.y):(_=0,C=0),u.bindTexture(l,c),i.pixelStorei(i.UNPACK_ALIGNMENT,t.unpackAlignment),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,t.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,t.unpackAlignment);const M=i.getParameter(i.UNPACK_ROW_LENGTH),P=i.getParameter(i.UNPACK_IMAGE_HEIGHT),I=i.getParameter(i.UNPACK_SKIP_PIXELS),B=i.getParameter(i.UNPACK_SKIP_ROWS),U=i.getParameter(i.UNPACK_SKIP_IMAGES),D=e.isCompressedTexture?e.mipmaps[r]:e.image;if(i.pixelStorei(i.UNPACK_ROW_LENGTH,D.width),i.pixelStorei(i.UNPACK_IMAGE_HEIGHT,D.height),i.pixelStorei(i.UNPACK_SKIP_PIXELS,m),i.pixelStorei(i.UNPACK_SKIP_ROWS,b),e.isRenderTargetTexture||e.isDepthTexture){const Y=a.get(e),Q=a.get(t),Z=a.get(Y.renderTarget),te=a.get(Q.renderTarget),ve=Z.framebuffers[Y.cacheKey],De=te.framebuffers[Q.cacheKey];u.bindFramebuffer(i.READ_FRAMEBUFFER,ve),u.bindFramebuffer(i.DRAW_FRAMEBUFFER,De);let ut=i.COLOR_BUFFER_BIT;e.isDepthTexture&&(ut=i.DEPTH_BUFFER_BIT),i.blitFramebuffer(m,b,p,f,_,C,p,f,ut,i.NEAREST),u.bindFramebuffer(i.READ_FRAMEBUFFER,null),u.bindFramebuffer(i.DRAW_FRAMEBUFFER,null)}else e.isDataTexture?i.texSubImage2D(i.TEXTURE_2D,r,_,C,p,f,h,d,D.data):e.isCompressedTexture?i.compressedTexSubImage2D(i.TEXTURE_2D,r,_,C,D.width,D.height,h,D.data):i.texSubImage2D(i.TEXTURE_2D,r,_,C,p,f,h,d,D);i.pixelStorei(i.UNPACK_ROW_LENGTH,M),i.pixelStorei(i.UNPACK_IMAGE_HEIGHT,P),i.pixelStorei(i.UNPACK_SKIP_PIXELS,I),i.pixelStorei(i.UNPACK_SKIP_ROWS,B),i.pixelStorei(i.UNPACK_SKIP_IMAGES,U),r===0&&t.generateMipmaps&&i.generateMipmap(i.TEXTURE_2D),u.unbindTexture()}copyFramebufferToTexture(e,t,s){const{gl:n}=this,{state:r}=this.backend,{textureGPU:i}=this.backend.get(e),{x:a,y:u,z:c,w:l}=s,d=e.isDepthTexture===!0||t.renderTarget&&t.renderTarget.samples>0,h=t.renderTarget?t.renderTarget.height:this.backend.getDrawingBufferSize().y;if(d){const p=a!==0||u!==0;let f,m;if(e.isDepthTexture===!0?(f=n.DEPTH_BUFFER_BIT,m=n.DEPTH_ATTACHMENT,t.stencil&&(f|=n.STENCIL_BUFFER_BIT)):(f=n.COLOR_BUFFER_BIT,m=n.COLOR_ATTACHMENT0),p){const b=this.backend.get(t.renderTarget),_=b.framebuffers[t.getCacheKey()],C=b.msaaFrameBuffer;r.bindFramebuffer(n.DRAW_FRAMEBUFFER,_),r.bindFramebuffer(n.READ_FRAMEBUFFER,C);const M=h-u-l;n.blitFramebuffer(a,M,a+c,M+l,a,M,a+c,M+l,f,n.NEAREST),r.bindFramebuffer(n.READ_FRAMEBUFFER,_),r.bindTexture(n.TEXTURE_2D,i),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,M,c,l),r.unbindTexture()}else{const b=n.createFramebuffer();r.bindFramebuffer(n.DRAW_FRAMEBUFFER,b),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,m,n.TEXTURE_2D,i,0),n.blitFramebuffer(0,0,c,l,0,0,c,l,f,n.NEAREST),n.deleteFramebuffer(b)}}else r.bindTexture(n.TEXTURE_2D,i),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,h-l-u,c,l),r.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t,s,n=!1){const{gl:r}=this,i=t.renderTarget,{depthTexture:a,depthBuffer:u,stencilBuffer:c,width:l,height:d}=i;if(r.bindRenderbuffer(r.RENDERBUFFER,e),u&&!c){let h=r.DEPTH_COMPONENT24;n===!0?this.extensions.get("WEBGL_multisampled_render_to_texture").renderbufferStorageMultisampleEXT(r.RENDERBUFFER,i.samples,h,l,d):s>0?(a&&a.isDepthTexture&&a.type===r.FLOAT&&(h=r.DEPTH_COMPONENT32F),r.renderbufferStorageMultisample(r.RENDERBUFFER,s,h,l,d)):r.renderbufferStorage(r.RENDERBUFFER,h,l,d),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,e)}else u&&c&&(s>0?r.renderbufferStorageMultisample(r.RENDERBUFFER,s,r.DEPTH24_STENCIL8,l,d):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,l,d),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,e))}async copyTextureToBuffer(e,t,s,n,r,i){const{backend:a,gl:u}=this,{textureGPU:c,glFormat:l,glType:d}=this.backend.get(e),h=u.createFramebuffer();u.bindFramebuffer(u.READ_FRAMEBUFFER,h);const p=e.isCubeTexture?u.TEXTURE_CUBE_MAP_POSITIVE_X+i:u.TEXTURE_2D;u.framebufferTexture2D(u.READ_FRAMEBUFFER,u.COLOR_ATTACHMENT0,p,c,0);const f=this._getTypedArrayType(d),m=this._getBytesPerTexel(d,l),_=n*r*m,C=u.createBuffer();u.bindBuffer(u.PIXEL_PACK_BUFFER,C),u.bufferData(u.PIXEL_PACK_BUFFER,_,u.STREAM_READ),u.readPixels(t,s,n,r,l,d,0),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const M=new f(_/f.BYTES_PER_ELEMENT);return u.bindBuffer(u.PIXEL_PACK_BUFFER,C),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,M),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),u.deleteFramebuffer(h),M}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5||e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:s}=this;let n=0;if(e===s.UNSIGNED_BYTE&&(n=1),(e===s.UNSIGNED_SHORT_4_4_4_4||e===s.UNSIGNED_SHORT_5_5_5_1||e===s.UNSIGNED_SHORT_5_6_5||e===s.UNSIGNED_SHORT||e===s.HALF_FLOAT)&&(n=2),(e===s.UNSIGNED_INT||e===s.FLOAT)&&(n=4),t===s.RGBA)return n*4;if(t===s.RGB)return n*3;if(t===s.ALPHA)return n}}class aA{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return t===void 0&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class uA{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(this.maxAnisotropy!==null)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(t.has("EXT_texture_filter_anisotropic")===!0){const s=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(s.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const Qc={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query"};class cA{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:s,mode:n,object:r,type:i,info:a,index:u}=this;u!==0?s.drawElements(n,t,i,e):s.drawArrays(n,e,t),a.update(r,t,n,1)}renderInstances(e,t,s){const{gl:n,mode:r,type:i,index:a,object:u,info:c}=this;s!==0&&(a!==0?n.drawElementsInstanced(r,t,i,e,s):n.drawArraysInstanced(r,e,t,s),c.update(u,t,r,s))}renderMultiDraw(e,t,s){const{extensions:n,mode:r,object:i,info:a}=this;if(s===0)return;const u=n.get("WEBGL_multi_draw");if(u===null)for(let c=0;c<s;c++)this.render(e[c],t[c]);else{this.index!==0?u.multiDrawElementsWEBGL(r,t,0,this.type,e,0,s):u.multiDrawArraysWEBGL(r,e,0,t,0,s);let c=0;for(let l=0;l<s;l++)c+=t[l];a.update(i,c,r,1)}}renderMultiDrawInstances(e,t,s,n){const{extensions:r,mode:i,object:a,info:u}=this;if(s===0)return;const c=r.get("WEBGL_multi_draw");if(c===null)for(let l=0;l<s;l++)this.renderInstances(e[l],t[l],n[l]);else{this.index!==0?c.multiDrawElementsInstancedWEBGL(i,t,0,this.type,e,0,n,0,s):c.multiDrawArraysInstancedWEBGL(i,e,0,t,0,n,0,s);let l=0;for(let d=0;d<s;d++)l+=t[d]*n[d];u.update(a,l,i,1)}}}class Rg{constructor(e=256){this.trackTimestamp=!0,this.maxQueries=e,this.currentQueryIndex=0,this.queryOffsets=new Map,this.isDisposed=!1,this.lastValue=0,this.pendingResolve=!1}allocateQueriesForContext(){}async resolveQueriesAsync(){}dispose(){}}class lA extends Rg{constructor(e,t,s=2048){if(super(s),this.gl=e,this.type=t,this.ext=e.getExtension("EXT_disjoint_timer_query_webgl2")||e.getExtension("EXT_disjoint_timer_query"),!this.ext){console.warn("EXT_disjoint_timer_query not supported; timestamps will be disabled."),this.trackTimestamp=!1;return}this.queries=[];for(let n=0;n<this.maxQueries;n++)this.queries.push(e.createQuery());this.activeQuery=null,this.queryStates=new Map}allocateQueriesForContext(e){if(!this.trackTimestamp)return null;if(this.currentQueryIndex+2>this.maxQueries)return Dn(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryStates.set(t,"inactive"),this.queryOffsets.set(e.id,t),t}beginQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e.id);if(t==null||this.activeQuery!==null)return;const s=this.queries[t];if(s)try{this.queryStates.get(t)==="inactive"&&(this.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,s),this.activeQuery=t,this.queryStates.set(t,"started"))}catch(n){console.error("Error in beginQuery:",n),this.activeQuery=null,this.queryStates.set(t,"inactive")}}endQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e.id);if(t!=null&&this.activeQuery===t)try{this.gl.endQuery(this.ext.TIME_ELAPSED_EXT),this.queryStates.set(t,"ended"),this.activeQuery=null}catch(s){console.error("Error in endQuery:",s),this.queryStates.set(t,"inactive"),this.activeQuery=null}}async resolveQueriesAsync(){if(!this.trackTimestamp||this.pendingResolve)return this.lastValue;this.pendingResolve=!0;try{const e=[];for(const[n,r]of this.queryStates)if(r==="ended"){const i=this.queries[n];e.push(this.resolveQuery(i))}if(e.length===0)return this.lastValue;const s=(await Promise.all(e)).reduce((n,r)=>n+r,0);return this.lastValue=s,this.currentQueryIndex=0,this.queryOffsets.clear(),this.queryStates.clear(),this.activeQuery=null,s}catch(e){return console.error("Error resolving queries:",e),this.lastValue}finally{this.pendingResolve=!1}}async resolveQuery(e){return new Promise(t=>{if(this.isDisposed){t(this.lastValue);return}let s,n=!1;const r=()=>{s&&(clearTimeout(s),s=null)},i=u=>{n||(n=!0,r(),t(u))},a=()=>{if(this.isDisposed){i(this.lastValue);return}try{if(this.gl.getParameter(this.ext.GPU_DISJOINT_EXT)){i(this.lastValue);return}if(!this.gl.getQueryParameter(e,this.gl.QUERY_RESULT_AVAILABLE)){s=setTimeout(a,1);return}const l=this.gl.getQueryParameter(e,this.gl.QUERY_RESULT);t(Number(l)/1e6)}catch(u){console.error("Error checking query:",u),t(this.lastValue)}};a()})}dispose(){if(!this.isDisposed&&(this.isDisposed=!0,!!this.trackTimestamp)){for(const e of this.queries)this.gl.deleteQuery(e);this.queries=[],this.queryStates.clear(),this.queryOffsets.clear(),this.lastValue=0,this.activeQuery=null}}}class Zc extends vg{constructor(e={}){super(e),this.isWebGLBackend=!0,this.attributeUtils=null,this.extensions=null,this.capabilities=null,this.textureUtils=null,this.bufferRenderer=null,this.gl=null,this.state=null,this.utils=null,this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.disjoint=null,this.parallel=null,this.trackTimestamp=e.trackTimestamp===!0,this._currentContext=null,this._knownBindings=new WeakSet,this._xrFamebuffer=null}init(e){super.init(e);const t=this.parameters,s={antialias:!1,alpha:!0,depth:!1,stencil:!1},n=t.context!==void 0?t.context:e.domElement.getContext("webgl2",s);function r(i){i.preventDefault();const a={api:"WebGL",message:i.statusMessage||"Unknown reason",reason:null,originalEvent:i};e.onDeviceLost(a)}this._onContextLost=r,e.domElement.addEventListener("webglcontextlost",r,!1),this.gl=n,this.extensions=new aA(this),this.capabilities=new uA(this),this.attributeUtils=new nA(this),this.textureUtils=new oA(this),this.bufferRenderer=new cA(this),this.state=new rA(this),this.utils=new iA(this),this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile")}get coordinateSystem(){return Un}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}async makeXRCompatible(){this.gl.getContextAttributes().xrCompatible!==!0&&await this.gl.makeXRCompatible()}setXRTarget(e){this._xrFamebuffer=e}setXRRenderTargetTextures(e,t,s=null){const n=this.gl;if(this.set(e.texture,{textureGPU:t,glInternalFormat:n.RGBA8}),s!==null){const r=e.stencilBuffer?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24;this.set(e.depthTexture,{textureGPU:s,glInternalFormat:r}),e.autoAllocateDepthBuffer=!1,this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&console.warn("THREE.WebGLBackend: Render-to-texture extension was disabled because an external texture was provided")}}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;const t=e.isComputeNode?"compute":"render";this.timestampQueryPool[t]||(this.timestampQueryPool[t]=new lA(this.gl,t,2048));const s=this.timestampQueryPool[t];s.allocateQueriesForContext(e)!==null&&s.beginQuery(e)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;const t=e.isComputeNode?"compute":"render";this.timestampQueryPool[t].endQuery(e)}getContext(){return this.gl}beginRender(e){const{state:t,gl:s}=this,n=this.get(e);if(this.initTimestampQuery(e),n.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1),e.viewport?this.updateViewport(e):t.viewport(0,0,s.drawingBufferWidth,s.drawingBufferHeight),e.scissor){const{x:i,y:a,width:u,height:c}=e.scissorValue;t.scissor(i,e.height-c-a,u,c)}const r=e.occlusionQueryCount;r>0&&(n.currentOcclusionQueries=n.occlusionQueries,n.currentOcclusionQueryObjects=n.occlusionQueryObjects,n.lastOcclusionObject=null,n.occlusionQueries=new Array(r),n.occlusionQueryObjects=new Array(r),n.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:s}=this,n=this.get(e),r=n.previousContext,i=e.occlusionQueryCount;i>0&&(i>n.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const a=e.textures;if(a!==null)for(let u=0;u<a.length;u++){const c=a[u];c.generateMipmaps&&this.generateMipmaps(c)}if(this._currentContext=r,e.textures!==null&&e.renderTarget){const u=this.get(e.renderTarget),{samples:c}=e.renderTarget;if(c>0&&this._useMultisampledRTT(e.renderTarget)===!1){const l=u.framebuffers[e.getCacheKey()],d=t.COLOR_BUFFER_BIT,h=u.msaaFrameBuffer,p=e.textures;s.bindFramebuffer(t.READ_FRAMEBUFFER,h),s.bindFramebuffer(t.DRAW_FRAMEBUFFER,l);for(let f=0;f<p.length;f++)if(e.scissor){const{x:m,y:b,width:_,height:C}=e.scissorValue,M=e.height-C-b;t.blitFramebuffer(m,M,m+_,M+C,m,M,m+_,M+C,d,t.NEAREST),t.invalidateSubFramebuffer(t.READ_FRAMEBUFFER,u.invalidationArray,m,M,_,C)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,d,t.NEAREST),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,u.invalidationArray)}}r!==null&&(this._setFramebuffer(r),r.viewport?this.updateViewport(r):s.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight)),this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:s,currentOcclusionQueryObjects:n}=t;if(s&&n){const r=new WeakSet,{gl:i}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const a=()=>{let u=0;for(let c=0;c<s.length;c++){const l=s[c];l!==null&&i.getQueryParameter(l,i.QUERY_RESULT_AVAILABLE)&&(i.getQueryParameter(l,i.QUERY_RESULT)===0&&r.add(n[c]),s[c]=null,i.deleteQuery(l),u++)}u<s.length?requestAnimationFrame(a):t.occluded=r};a()}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}updateViewport(e){const{state:t}=this,{x:s,y:n,width:r,height:i}=e.viewportValue;t.viewport(s,e.height-i-n,r,i)}setScissorTest(e){this.state.setScissorTest(e)}clear(e,t,s,n=null,r=!0){const{gl:i}=this;if(n===null){const u=this.getClearColor();u.r*=u.a,u.g*=u.a,u.b*=u.a,n={textures:null,clearColorValue:u}}let a=0;if(e&&(a|=i.COLOR_BUFFER_BIT),t&&(a|=i.DEPTH_BUFFER_BIT),s&&(a|=i.STENCIL_BUFFER_BIT),a!==0){let u;if(n.clearColorValue?u=n.clearColorValue:(u=this.getClearColor(),u.r*=u.a,u.g*=u.a,u.b*=u.a),t&&this.state.setDepthMask(!0),n.textures===null)i.clearColor(u.r,u.g,u.b,u.a),i.clear(a);else{if(r&&this._setFramebuffer(n),e)for(let c=0;c<n.textures.length;c++)i.clearBufferfv(i.COLOR,c,[u.r,u.g,u.b,u.a]);t&&s?i.clearBufferfi(i.DEPTH_STENCIL,0,1,0):t?i.clearBufferfv(i.DEPTH,0,[1]):s&&i.clearBufferiv(i.STENCIL,0,[0])}}}beginCompute(e){const{state:t,gl:s}=this;t.bindFramebuffer(s.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,s,n){const{state:r,gl:i}=this;this.discard===!1&&(i.enable(i.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:a,transformBuffers:u,attributes:c}=this.get(n),l=this._getVaoKey(null,c),d=this.vaoCache[l];d===void 0?this._createVao(null,c):i.bindVertexArray(d),r.useProgram(a),this._bindUniforms(s);const h=this._getTransformFeedback(u);i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,h),i.beginTransformFeedback(i.POINTS),c[0].isStorageInstancedBufferAttribute?i.drawArraysInstanced(i.POINTS,0,1,t.count):i.drawArrays(i.POINTS,0,t.count),i.endTransformFeedback(),i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,null);for(let p=0;p<u.length;p++){const f=u[p];f.pbo&&this.textureUtils.copyBufferToTexture(f.transformBuffer,f.pbo),f.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e),this._currentContext&&this._setFramebuffer(this._currentContext)}draw(e){const{object:t,pipeline:s,material:n,context:r,hardwareClippingPlanes:i}=e,{programGPU:a}=this.get(s),{gl:u,state:c}=this,l=this.get(r),d=e.getDrawParameters();if(d===null)return;this._bindUniforms(e.getBindings());const h=t.isMesh&&t.matrixWorld.determinant()<0;c.setMaterial(n,h,i),c.useProgram(a);const p=this.get(e);let f=p.staticVao;if(f===void 0||p.geometryId!==e.geometry.id){const B=this._getVaoKey(e.getIndex(),e.getAttributes());if(f=this.vaoCache[B],f===void 0){let U;({vaoGPU:f,staticVao:U}=this._createVao(e.getIndex(),e.getAttributes())),U&&(p.staticVao=f,p.geometryId=e.geometry.id)}}u.bindVertexArray(f);const m=e.getIndex(),b=l.lastOcclusionObject;if(b!==t&&b!==void 0){if(b!==null&&b.occlusionTest===!0&&(u.endQuery(u.ANY_SAMPLES_PASSED),l.occlusionQueryIndex++),t.occlusionTest===!0){const B=u.createQuery();u.beginQuery(u.ANY_SAMPLES_PASSED,B),l.occlusionQueries[l.occlusionQueryIndex]=B,l.occlusionQueryObjects[l.occlusionQueryIndex]=t}l.lastOcclusionObject=t}const _=this.bufferRenderer;t.isPoints?_.mode=u.POINTS:t.isLineSegments?_.mode=u.LINES:t.isLine?_.mode=u.LINE_STRIP:t.isLineLoop?_.mode=u.LINE_LOOP:n.wireframe===!0?(c.setLineWidth(n.wireframeLinewidth*this.renderer.getPixelRatio()),_.mode=u.LINES):_.mode=u.TRIANGLES;const{vertexCount:C,instanceCount:M}=d;let{firstVertex:P}=d;if(_.object=t,m!==null){P*=m.array.BYTES_PER_ELEMENT;const B=this.get(m);_.index=m.count,_.type=B.type}else _.index=0;const I=()=>{t.isBatchedMesh?t._multiDrawInstances!==null?_.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances):this.hasFeature("WEBGL_multi_draw")?_.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):Dn("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):M>1?_.renderInstances(P,C,M):_.render(P,C)};if(e.camera.isArrayCamera&&e.camera.cameras.length>0){const B=this.get(e.camera),U=e.camera.cameras,D=e.getBindingGroup("cameraIndex").bindings[0];if(B.indexesGPU===void 0||B.indexesGPU.length!==U.length){const Z=new Uint32Array([0,0,0,0]),te=[];for(let ve=0,De=U.length;ve<De;ve++){const ut=u.createBuffer();Z[0]=ve,u.bindBuffer(u.UNIFORM_BUFFER,ut),u.bufferData(u.UNIFORM_BUFFER,Z,u.STATIC_DRAW),te.push(ut)}B.indexesGPU=te}const Y=this.get(D),Q=this.renderer.getPixelRatio();for(let Z=0,te=U.length;Z<te;Z++){const ve=U[Z];if(t.layers.test(ve.layers)){const De=ve.viewport,ut=De.x*Q,Eg=De.y*Q,Cg=De.width*Q,Lu=De.height*Q;c.viewport(Math.floor(ut),Math.floor(e.context.height-Lu-Eg),Math.floor(Cg),Math.floor(Lu)),c.bindBufferBase(u.UNIFORM_BUFFER,Y.index,B.indexesGPU[Z]),I()}}}else I();u.bindVertexArray(null)}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,s,n,r,i){return this.textureUtils.copyTextureToBuffer(e,t,s,n,r,i)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new eA(e,t)}createProgram(e){const t=this.gl,{stage:s,code:n}=e,r=s==="fragment"?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(r,n),t.compileShader(r),this.set(e,{shaderGPU:r})}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){const s=this.gl,n=e.pipeline,{fragmentProgram:r,vertexProgram:i}=n,a=s.createProgram(),u=this.get(r).shaderGPU,c=this.get(i).shaderGPU;if(s.attachShader(a,u),s.attachShader(a,c),s.linkProgram(a),this.set(n,{programGPU:a,fragmentShader:u,vertexShader:c}),t!==null&&this.parallel){const l=new Promise(d=>{const h=this.parallel,p=()=>{s.getProgramParameter(a,h.COMPLETION_STATUS_KHR)?(this._completeCompile(e,n),d()):requestAnimationFrame(p)};p()});t.push(l);return}this._completeCompile(e,n)}_handleSource(e,t){const s=e.split(`
`),n=[],r=Math.max(t-6,0),i=Math.min(t+6,s.length);for(let a=r;a<i;a++){const u=a+1;n.push(`${u===t?">":" "} ${u}: ${s[a]}`)}return n.join(`
`)}_getShaderErrors(e,t,s){const n=e.getShaderParameter(t,e.COMPILE_STATUS),r=e.getShaderInfoLog(t).trim();if(n&&r==="")return"";const i=/ERROR: 0:(\d+)/.exec(r);if(i){const a=parseInt(i[1]);return s.toUpperCase()+`

`+r+`

`+this._handleSource(e.getShaderSource(t),a)}else return r}_logProgramError(e,t,s){if(this.renderer.debug.checkShaderErrors){const n=this.gl,r=n.getProgramInfoLog(e).trim();if(n.getProgramParameter(e,n.LINK_STATUS)===!1)if(typeof this.renderer.debug.onShaderError=="function")this.renderer.debug.onShaderError(n,e,s,t);else{const i=this._getShaderErrors(n,s,"vertex"),a=this._getShaderErrors(n,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(e,n.VALIDATE_STATUS)+`

Program Info Log: `+r+`
`+i+`
`+a)}else r!==""&&console.warn("THREE.WebGLProgram: Program Info Log:",r)}}_completeCompile(e,t){const{state:s,gl:n}=this,r=this.get(t),{programGPU:i,fragmentShader:a,vertexShader:u}=r;n.getProgramParameter(i,n.LINK_STATUS)===!1&&this._logProgramError(i,a,u),s.useProgram(i);const c=e.getBindings();this._setupBindings(c,i),this.set(t,{programGPU:i})}createComputePipeline(e,t){const{state:s,gl:n}=this,r={stage:"fragment",code:`#version 300 es
precision highp float;
void main() {}`};this.createProgram(r);const{computeProgram:i}=e,a=n.createProgram(),u=this.get(r).shaderGPU,c=this.get(i).shaderGPU,l=i.transforms,d=[],h=[];for(let b=0;b<l.length;b++){const _=l[b];d.push(_.varyingName),h.push(_.attributeNode)}n.attachShader(a,u),n.attachShader(a,c),n.transformFeedbackVaryings(a,d,n.SEPARATE_ATTRIBS),n.linkProgram(a),n.getProgramParameter(a,n.LINK_STATUS)===!1&&this._logProgramError(a,u,c),s.useProgram(a),this._setupBindings(t,a);const p=i.attributes,f=[],m=[];for(let b=0;b<p.length;b++){const _=p[b].node.attribute;f.push(_),this.has(_)||this.attributeUtils.createAttribute(_,n.ARRAY_BUFFER)}for(let b=0;b<h.length;b++){const _=h[b].attribute;this.has(_)||this.attributeUtils.createAttribute(_,n.ARRAY_BUFFER);const C=this.get(_);m.push(C)}this.set(e,{programGPU:a,transformBuffers:m,attributes:f})}createBindings(e,t){if(this._knownBindings.has(t)===!1){this._knownBindings.add(t);let s=0,n=0;for(const r of t){this.set(r,{textures:n,uniformBuffers:s});for(const i of r.bindings)i.isUniformBuffer&&s++,i.isSampledTexture&&n++}}this.updateBindings(e,t)}updateBindings(e){const{gl:t}=this,s=this.get(e);let n=s.uniformBuffers,r=s.textures;for(const i of e.bindings)if(i.isUniformsGroup||i.isUniformBuffer){const a=i.buffer,u=t.createBuffer();t.bindBuffer(t.UNIFORM_BUFFER,u),t.bufferData(t.UNIFORM_BUFFER,a,t.DYNAMIC_DRAW),this.set(i,{index:n++,bufferGPU:u})}else if(i.isSampledTexture){const{textureGPU:a,glTextureType:u}=this.get(i.texture);this.set(i,{index:r++,textureGPU:a,glTextureType:u})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const n=this.get(e).bufferGPU,r=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,n),t.bufferData(t.UNIFORM_BUFFER,r,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}hasFeature(e){const t=Object.keys(Qc).filter(n=>Qc[n]===e),s=this.extensions;for(let n=0;n<t.length;n++)if(s.has(t[n]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,s=null,n=null,r=0){this.textureUtils.copyTextureToTexture(e,t,s,n,r)}copyFramebufferToTexture(e,t,s){this.textureUtils.copyFramebufferToTexture(e,t,s)}_setFramebuffer(e){const{gl:t,state:s}=this;let n=null;if(e.textures!==null){const r=e.renderTarget,i=this.get(r),{samples:a,depthBuffer:u,stencilBuffer:c}=r,l=r.isWebGLCubeRenderTarget===!0,d=r.isRenderTarget3D===!0,h=r.isRenderTargetArray===!0,p=r.isXRRenderTarget===!0,f=p===!0&&r.hasExternalTextures===!0;let m=i.msaaFrameBuffer,b=i.depthRenderbuffer;const _=this.extensions.get("WEBGL_multisampled_render_to_texture"),C=this._useMultisampledRTT(r),M=Tf(e);let P;if(l?(i.cubeFramebuffers||(i.cubeFramebuffers={}),P=i.cubeFramebuffers[M]):p&&f===!1?P=this._xrFamebuffer:(i.framebuffers||(i.framebuffers={}),P=i.framebuffers[M]),P===void 0){P=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,P);const I=e.textures;if(l){i.cubeFramebuffers[M]=P;const{textureGPU:B}=this.get(I[0]),U=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+U,B,0)}else{i.framebuffers[M]=P;for(let B=0;B<I.length;B++){const U=I[B],D=this.get(U);D.renderTarget=e.renderTarget,D.cacheKey=M;const Y=t.COLOR_ATTACHMENT0+B;if(d||h){const Q=this.renderer._activeCubeFace;t.framebufferTextureLayer(t.FRAMEBUFFER,Y,D.textureGPU,0,Q)}else C?_.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,Y,t.TEXTURE_2D,D.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,Y,t.TEXTURE_2D,D.textureGPU,0)}s.drawBuffers(e,P)}if(r.isXRRenderTarget&&r.autoAllocateDepthBuffer===!0){const B=t.createRenderbuffer();this.textureUtils.setupRenderBufferStorage(B,e,0,C),i.xrDepthRenderbuffer=B}else if(e.depthTexture!==null){const B=this.get(e.depthTexture),U=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;B.renderTarget=e.renderTarget,B.cacheKey=M,C?_.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,U,t.TEXTURE_2D,B.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,U,t.TEXTURE_2D,B.textureGPU,0)}}else if(p&&f){s.bindFramebuffer(t.FRAMEBUFFER,P);const I=this.get(e.textures[0]);C?_.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,I.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,I.textureGPU,0);const B=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(r.autoAllocateDepthBuffer===!0){const U=i.xrDepthRenderbuffer;t.bindRenderbuffer(t.RENDERBUFFER,U),t.framebufferRenderbuffer(t.FRAMEBUFFER,B,t.RENDERBUFFER,U)}else{const U=this.get(e.depthTexture);C?_.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,B,t.TEXTURE_2D,U.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,B,t.TEXTURE_2D,U.textureGPU,0)}}if(a>0&&C===!1){if(m===void 0){const I=[];m=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,m);const B=[],U=e.textures;for(let D=0;D<U.length;D++){if(B[D]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,B[D]),I.push(t.COLOR_ATTACHMENT0+D),u){const Z=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;I.push(Z)}const Y=e.textures[D],Q=this.get(Y);t.renderbufferStorageMultisample(t.RENDERBUFFER,a,Q.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+D,t.RENDERBUFFER,B[D])}if(i.msaaFrameBuffer=m,i.msaaRenderbuffers=B,b===void 0){b=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(b,e,a),i.depthRenderbuffer=b;const D=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;I.push(D)}i.invalidationArray=I}n=i.msaaFrameBuffer}else n=P}s.bindFramebuffer(t.FRAMEBUFFER,n)}_getVaoKey(e,t){let s="";if(e!==null){const n=this.get(e);s+=":"+n.id}for(let n=0;n<t.length;n++){const r=this.get(t[n]);s+=":"+r.id}return s}_createVao(e,t){const{gl:s}=this,n=s.createVertexArray();let r="",i=!0;if(s.bindVertexArray(n),e!==null){const a=this.get(e);s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,a.bufferGPU),r+=":"+a.id}for(let a=0;a<t.length;a++){const u=t[a],c=this.get(u);r+=":"+c.id,s.bindBuffer(s.ARRAY_BUFFER,c.bufferGPU),s.enableVertexAttribArray(a),(u.isStorageBufferAttribute||u.isStorageInstancedBufferAttribute)&&(i=!1);let l,d;u.isInterleavedBufferAttribute===!0?(l=u.data.stride*c.bytesPerElement,d=u.offset*c.bytesPerElement):(l=0,d=0),c.isInteger?s.vertexAttribIPointer(a,u.itemSize,c.type,l,d):s.vertexAttribPointer(a,u.itemSize,c.type,u.normalized,l,d),u.isInstancedBufferAttribute&&!u.isInterleavedBufferAttribute?s.vertexAttribDivisor(a,u.meshPerAttribute):u.isInterleavedBufferAttribute&&u.data.isInstancedInterleavedBuffer&&s.vertexAttribDivisor(a,u.data.meshPerAttribute)}return s.bindBuffer(s.ARRAY_BUFFER,null),this.vaoCache[r]=n,{vaoGPU:n,staticVao:i}}_getTransformFeedback(e){let t="";for(let r=0;r<e.length;r++)t+=":"+e[r].id;let s=this.transformFeedbackCache[t];if(s!==void 0)return s;const{gl:n}=this;s=n.createTransformFeedback(),n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,s);for(let r=0;r<e.length;r++){const i=e[r];n.bindBufferBase(n.TRANSFORM_FEEDBACK_BUFFER,r,i.transformBuffer)}return n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=s,s}_setupBindings(e,t){const s=this.gl;for(const n of e)for(const r of n.bindings){const a=this.get(r).index;if(r.isUniformsGroup||r.isUniformBuffer){const u=s.getUniformBlockIndex(t,r.name);s.uniformBlockBinding(t,u,a)}else if(r.isSampledTexture){const u=s.getUniformLocation(t,r.name);s.uniform1i(u,a)}}}_bindUniforms(e){const{gl:t,state:s}=this;for(const n of e)for(const r of n.bindings){const i=this.get(r),a=i.index;r.isUniformsGroup||r.isUniformBuffer?s.bindBufferBase(t.UNIFORM_BUFFER,a,i.bufferGPU):r.isSampledTexture&&s.bindTexture(i.glTextureType,i.textureGPU,t.TEXTURE0+a)}}_useMultisampledRTT(e){return e.samples>0&&this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e.autoAllocateDepthBuffer!==!1}dispose(){const e=this.extensions.get("WEBGL_lose_context");e&&e.loseContext(),this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}const Hs={PointList:"point-list",LineList:"line-list",LineStrip:"line-strip",TriangleList:"triangle-list",TriangleStrip:"triangle-strip"},Be={Never:"never",Less:"less",Equal:"equal",LessEqual:"less-equal",Greater:"greater",NotEqual:"not-equal",GreaterEqual:"greater-equal",Always:"always"},Le={Store:"store"},_e={Load:"load",Clear:"clear"},_o={CCW:"ccw"},bo={None:"none",Front:"front",Back:"back"},rn={Uint16:"uint16",Uint32:"uint32"},x={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},No={ClampToEdge:"clamp-to-edge",Repeat:"repeat",MirrorRepeat:"mirror-repeat"},fs={Linear:"linear",Nearest:"nearest"},$={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDstColor:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},ds={Add:"add",Subtract:"subtract",ReverseSubtract:"reverse-subtract",Min:"min",Max:"max"},Jc={None:0,All:15},Xt={Keep:"keep",Zero:"zero",Replace:"replace",Invert:"invert",IncrementClamp:"increment-clamp",DecrementClamp:"decrement-clamp",IncrementWrap:"increment-wrap",DecrementWrap:"decrement-wrap"},So={Storage:"storage",ReadOnlyStorage:"read-only-storage"},vo={WriteOnly:"write-only",ReadOnly:"read-only",ReadWrite:"read-write"},Ds={Float:"float",UnfilterableFloat:"unfilterable-float",Depth:"depth",SInt:"sint",UInt:"uint"},el={TwoD:"2d",ThreeD:"3d"},He={TwoD:"2d",TwoDArray:"2d-array",Cube:"cube",ThreeD:"3d"},dA={All:"all"},Lr={Vertex:"vertex",Instance:"instance"},ca={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups"};class hA extends Du{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class pA extends hA{constructor(e,t,s){super(e,t?t.value:null),this.textureNode=t,this.groupNode=s}update(){this.texture=this.textureNode.value}}class fA extends xg{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let gA=0;class mA extends fA{constructor(e,t){super("StorageBuffer_"+gA++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:Ve.READ_WRITE,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class yA extends is{constructor(e){super(),this.device=e;const t=`
struct VarysStruct {
	@builtin( position ) Position: vec4<f32>,
	@location( 0 ) vTex : vec2<f32>
};

@vertex
fn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {

	var Varys : VarysStruct;

	var pos = array< vec2<f32>, 4 >(
		vec2<f32>( -1.0,  1.0 ),
		vec2<f32>(  1.0,  1.0 ),
		vec2<f32>( -1.0, -1.0 ),
		vec2<f32>(  1.0, -1.0 )
	);

	var tex = array< vec2<f32>, 4 >(
		vec2<f32>( 0.0, 0.0 ),
		vec2<f32>( 1.0, 0.0 ),
		vec2<f32>( 0.0, 1.0 ),
		vec2<f32>( 1.0, 1.0 )
	);

	Varys.vTex = tex[ vertexIndex ];
	Varys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );

	return Varys;

}
`,s=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vTex );

}
`,n=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );

}
`;this.mipmapSampler=e.createSampler({minFilter:fs.Linear}),this.flipYSampler=e.createSampler({minFilter:fs.Nearest}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:t}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:s}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:n})}getTransferPipeline(e){let t=this.transferPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Hs.TriangleStrip,stripIndexFormat:rn.Uint32},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:Hs.TriangleStrip,stripIndexFormat:rn.Uint32},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,s=0){const n=t.format,{width:r,height:i}=t.size,a=this.getTransferPipeline(n),u=this.getFlipYPipeline(n),c=this.device.createTexture({size:{width:r,height:i,depthOrArrayLayers:1},format:n,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),l=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:He.TwoD,baseArrayLayer:s}),d=c.createView({baseMipLevel:0,mipLevelCount:1,dimension:He.TwoD,baseArrayLayer:0}),h=this.device.createCommandEncoder({}),p=(f,m,b)=>{const _=f.getBindGroupLayout(0),C=this.device.createBindGroup({layout:_,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:m}]}),M=h.beginRenderPass({colorAttachments:[{view:b,loadOp:_e.Clear,storeOp:Le.Store,clearValue:[0,0,0,0]}]});M.setPipeline(f),M.setBindGroup(0,C),M.draw(4,1,0,0),M.end()};p(a,l,d),p(u,d,l),this.device.queue.submit([h.finish()]),c.destroy()}generateMipmaps(e,t,s=0){const n=this.get(e);n.useCount===void 0&&(n.useCount=0,n.layers=[]);const r=n.layers[s]||this._mipmapCreateBundles(e,t,s),i=this.device.createCommandEncoder({});this._mipmapRunBundles(i,r),this.device.queue.submit([i.finish()]),n.useCount!==0&&(n.layers[s]=r),n.useCount++}_mipmapCreateBundles(e,t,s){const n=this.getTransferPipeline(t.format),r=n.getBindGroupLayout(0);let i=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:He.TwoD,baseArrayLayer:s});const a=[];for(let u=1;u<t.mipLevelCount;u++){const c=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:i}]}),l=e.createView({baseMipLevel:u,mipLevelCount:1,dimension:He.TwoD,baseArrayLayer:s}),d={colorAttachments:[{view:l,loadOp:_e.Clear,storeOp:Le.Store,clearValue:[0,0,0,0]}]},h=this.device.createRenderBundleEncoder({colorFormats:[t.format]});h.setPipeline(n),h.setBindGroup(0,c),h.draw(4,1,0,0),a.push({renderBundles:[h.finish()],passDescriptor:d}),i=l}return a}_mipmapRunBundles(e,t){const s=t.length;for(let n=0;n<s;n++){const r=t[n],i=e.beginRenderPass(r.passDescriptor);i.executeBundles(r.renderBundles),i.end()}}}const xA={[ml]:"never",[ga]:"less",[pl]:"equal",[fl]:"less-equal",[dl]:"greater",[hl]:"greater-equal",[gl]:"always",[ll]:"not-equal"},TA=[0,1,3,2,4,5];class _A{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new ns,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,s=t.device,n=t.get(e),r={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};r.magFilter===fs.Linear&&r.minFilter===fs.Linear&&r.mipmapFilter===fs.Linear&&(r.maxAnisotropy=e.anisotropy),e.isDepthTexture&&e.compareFunction!==null&&(r.compare=xA[e.compareFunction]),n.sampler=s.createSampler(r)}createDefaultTexture(e){let t;const s=la(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(s):e.isVideoTexture?this.backend.get(e).externalTexture=this._getDefaultVideoFrame():t=this._getDefaultTextureGPU(s),this.backend.get(e).texture=t}createTexture(e,t={}){const s=this.backend,n=s.get(e);if(n.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");t.needsMipmaps===void 0&&(t.needsMipmaps=!1),t.levels===void 0&&(t.levels=1),t.depth===void 0&&(t.depth=1);const{width:r,height:i,depth:a,levels:u}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());const c=this._getDimension(e),l=e.internalFormat||t.format||la(e,s.device);n.format=l;const{samples:d,primarySamples:h,isMSAA:p}=s.utils.getTextureSampleData(e);let f=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;e.isStorageTexture===!0&&(f|=GPUTextureUsage.STORAGE_BINDING),e.isCompressedTexture!==!0&&e.isCompressedArrayTexture!==!0&&(f|=GPUTextureUsage.RENDER_ATTACHMENT);const m={label:e.name,size:{width:r,height:i,depthOrArrayLayers:a},mipLevelCount:u,sampleCount:h,dimension:c,format:l,usage:f};if(e.isVideoTexture){const b=e.source.data,_=new VideoFrame(b);m.size.width=_.displayWidth,m.size.height=_.displayHeight,_.close(),n.externalTexture=b}else{if(l===void 0)return console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);n.texture=s.device.createTexture(m)}if(p){const b=Object.assign({},m);b.label=b.label+"-msaa",b.sampleCount=d,n.msaaTexture=s.device.createTexture(b)}n.initialized=!0,n.textureDescriptorGPU=m}destroyTexture(e){const t=this.backend,s=t.get(e);s.texture!==void 0&&s.texture.destroy(),s.msaaTexture!==void 0&&s.msaaTexture.destroy(),t.delete(e)}destroySampler(e){const s=this.backend.get(e);delete s.sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let s=0;s<6;s++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,s);else{const s=e.image.depth||1;for(let n=0;n<s;n++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,n)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:s}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:s,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const s=this.backend,{width:n,height:r}=s.getDrawingBufferSize(),i=this.depthTexture,a=s.get(i).texture;let u,c;if(t?(u=Jn,c=tr):e&&(u=er,c=Fe),a!==void 0){if(i.image.width===n&&i.image.height===r&&i.format===u&&i.type===c)return a;this.destroyTexture(i)}return i.name="depthBuffer",i.format=u,i.type=c,i.image.width=n,i.image.height=r,this.createTexture(i,{width:n,height:r}),s.get(i).texture}updateTexture(e,t){const s=this.backend.get(e),{textureDescriptorGPU:n}=s;if(!(e.isRenderTargetTexture||n===void 0)){if(e.isDataTexture)this._copyBufferToTexture(t.image,s.texture,n,0,e.flipY);else if(e.isDataArrayTexture||e.isData3DTexture)for(let r=0;r<t.image.depth;r++)this._copyBufferToTexture(t.image,s.texture,n,r,e.flipY,r);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,s.texture,n);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,s.texture,n,e.flipY);else if(e.isVideoTexture){const r=e.source.data;s.externalTexture=r}else this._copyImageToTexture(t.image,s.texture,n,0,e.flipY);s.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,s,n,r,i){const a=this.backend.device,u=this.backend.get(e),c=u.texture,l=u.textureDescriptorGPU.format,d=this._getBytesPerTexel(l);let h=n*d;h=Math.ceil(h/256)*256;const p=a.createBuffer({size:n*r*d,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),f=a.createCommandEncoder();f.copyTextureToBuffer({texture:c,origin:{x:t,y:s,z:i}},{buffer:p,bytesPerRow:h},{width:n,height:r});const m=this._getTypedArrayType(l);a.queue.submit([f.finish()]),await p.mapAsync(GPUMapMode.READ);const b=p.getMappedRange();return new m(b)}_isEnvironmentTexture(e){const t=e.mapping;return t===sr||t===nr||t===Zs||t===Js}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const s=new $l;s.minFilter=Vt,s.magFilter=Vt,this.createTexture(s,{width:1,height:1,format:e}),this.defaultTexture[e]=t=s}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const s=new ql;s.minFilter=Vt,s.magFilter=Vt,this.createTexture(s,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=s}return this.backend.get(t).texture}_getDefaultVideoFrame(){let e=this.defaultVideoFrame;if(e===null){const t={timestamp:0,codedWidth:1,codedHeight:1,format:"RGBA"};this.defaultVideoFrame=e=new VideoFrame(new Uint8Array([0,0,0,255]),t)}return e}_copyCubeMapToTexture(e,t,s,n){for(let r=0;r<6;r++){const i=e[r],a=n===!0?TA[r]:r;i.isDataTexture?this._copyBufferToTexture(i.image,t,s,a,n):this._copyImageToTexture(i,t,s,a,n)}}_copyImageToTexture(e,t,s,n,r){this.backend.device.queue.copyExternalImageToTexture({source:e,flipY:r},{texture:t,mipLevel:0,origin:{x:0,y:0,z:n}},{width:e.width,height:e.height,depthOrArrayLayers:1})}_getPassUtils(){let e=this._passUtils;return e===null&&(this._passUtils=e=new yA(this.backend.device)),e}_generateMipmaps(e,t,s=0){this._getPassUtils().generateMipmaps(e,t,s)}_flipY(e,t,s=0){this._getPassUtils().flipY(e,t,s)}_copyBufferToTexture(e,t,s,n,r,i=0){const a=this.backend.device,u=e.data,c=this._getBytesPerTexel(s.format),l=e.width*c;a.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:n}},u,{offset:e.width*e.height*c*i,bytesPerRow:l},{width:e.width,height:e.height,depthOrArrayLayers:1}),r===!0&&this._flipY(t,s,n)}_copyCompressedBufferToTexture(e,t,s){const n=this.backend.device,r=this._getBlockData(s.format),i=s.size.depthOrArrayLayers>1;for(let a=0;a<e.length;a++){const u=e[a],c=u.width,l=u.height,d=i?s.size.depthOrArrayLayers:1,h=Math.ceil(c/r.width)*r.byteLength,p=h*Math.ceil(l/r.height);for(let f=0;f<d;f++)n.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:f}},u.data,{offset:f*p,bytesPerRow:h,rowsPerImage:Math.ceil(l/r.height)},{width:Math.ceil(c/r.width)*r.width,height:Math.ceil(l/r.height)*r.height,depthOrArrayLayers:1})}}_getBlockData(e){if(e===x.BC1RGBAUnorm||e===x.BC1RGBAUnormSRGB)return{byteLength:8,width:4,height:4};if(e===x.BC2RGBAUnorm||e===x.BC2RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===x.BC3RGBAUnorm||e===x.BC3RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===x.BC4RUnorm||e===x.BC4RSNorm)return{byteLength:8,width:4,height:4};if(e===x.BC5RGUnorm||e===x.BC5RGSnorm)return{byteLength:16,width:4,height:4};if(e===x.BC6HRGBUFloat||e===x.BC6HRGBFloat)return{byteLength:16,width:4,height:4};if(e===x.BC7RGBAUnorm||e===x.BC7RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===x.ETC2RGB8Unorm||e===x.ETC2RGB8UnormSRGB)return{byteLength:8,width:4,height:4};if(e===x.ETC2RGB8A1Unorm||e===x.ETC2RGB8A1UnormSRGB)return{byteLength:8,width:4,height:4};if(e===x.ETC2RGBA8Unorm||e===x.ETC2RGBA8UnormSRGB)return{byteLength:16,width:4,height:4};if(e===x.EACR11Unorm)return{byteLength:8,width:4,height:4};if(e===x.EACR11Snorm)return{byteLength:8,width:4,height:4};if(e===x.EACRG11Unorm)return{byteLength:16,width:4,height:4};if(e===x.EACRG11Snorm)return{byteLength:16,width:4,height:4};if(e===x.ASTC4x4Unorm||e===x.ASTC4x4UnormSRGB)return{byteLength:16,width:4,height:4};if(e===x.ASTC5x4Unorm||e===x.ASTC5x4UnormSRGB)return{byteLength:16,width:5,height:4};if(e===x.ASTC5x5Unorm||e===x.ASTC5x5UnormSRGB)return{byteLength:16,width:5,height:5};if(e===x.ASTC6x5Unorm||e===x.ASTC6x5UnormSRGB)return{byteLength:16,width:6,height:5};if(e===x.ASTC6x6Unorm||e===x.ASTC6x6UnormSRGB)return{byteLength:16,width:6,height:6};if(e===x.ASTC8x5Unorm||e===x.ASTC8x5UnormSRGB)return{byteLength:16,width:8,height:5};if(e===x.ASTC8x6Unorm||e===x.ASTC8x6UnormSRGB)return{byteLength:16,width:8,height:6};if(e===x.ASTC8x8Unorm||e===x.ASTC8x8UnormSRGB)return{byteLength:16,width:8,height:8};if(e===x.ASTC10x5Unorm||e===x.ASTC10x5UnormSRGB)return{byteLength:16,width:10,height:5};if(e===x.ASTC10x6Unorm||e===x.ASTC10x6UnormSRGB)return{byteLength:16,width:10,height:6};if(e===x.ASTC10x8Unorm||e===x.ASTC10x8UnormSRGB)return{byteLength:16,width:10,height:8};if(e===x.ASTC10x10Unorm||e===x.ASTC10x10UnormSRGB)return{byteLength:16,width:10,height:10};if(e===x.ASTC12x10Unorm||e===x.ASTC12x10UnormSRGB)return{byteLength:16,width:12,height:10};if(e===x.ASTC12x12Unorm||e===x.ASTC12x12UnormSRGB)return{byteLength:16,width:12,height:12}}_convertAddressMode(e){let t=No.ClampToEdge;return e===gi?t=No.Repeat:e===fi&&(t=No.MirrorRepeat),t}_convertFilterMode(e){let t=fs.Linear;return(e===Vt||e===cl||e===Ln)&&(t=fs.Nearest),t}_getBytesPerTexel(e){if(e===x.R8Unorm||e===x.R8Snorm||e===x.R8Uint||e===x.R8Sint)return 1;if(e===x.R16Uint||e===x.R16Sint||e===x.R16Float||e===x.RG8Unorm||e===x.RG8Snorm||e===x.RG8Uint||e===x.RG8Sint)return 2;if(e===x.R32Uint||e===x.R32Sint||e===x.R32Float||e===x.RG16Uint||e===x.RG16Sint||e===x.RG16Float||e===x.RGBA8Unorm||e===x.RGBA8UnormSRGB||e===x.RGBA8Snorm||e===x.RGBA8Uint||e===x.RGBA8Sint||e===x.BGRA8Unorm||e===x.BGRA8UnormSRGB||e===x.RGB9E5UFloat||e===x.RGB10A2Unorm||e===x.RG11B10UFloat||e===x.Depth32Float||e===x.Depth24Plus||e===x.Depth24PlusStencil8||e===x.Depth32FloatStencil8)return 4;if(e===x.RG32Uint||e===x.RG32Sint||e===x.RG32Float||e===x.RGBA16Uint||e===x.RGBA16Sint||e===x.RGBA16Float)return 8;if(e===x.RGBA32Uint||e===x.RGBA32Sint||e===x.RGBA32Float)return 16}_getTypedArrayType(e){if(e===x.R8Uint)return Uint8Array;if(e===x.R8Sint)return Int8Array;if(e===x.R8Unorm)return Uint8Array;if(e===x.R8Snorm)return Int8Array;if(e===x.RG8Uint)return Uint8Array;if(e===x.RG8Sint)return Int8Array;if(e===x.RG8Unorm)return Uint8Array;if(e===x.RG8Snorm)return Int8Array;if(e===x.RGBA8Uint)return Uint8Array;if(e===x.RGBA8Sint)return Int8Array;if(e===x.RGBA8Unorm)return Uint8Array;if(e===x.RGBA8Snorm)return Int8Array;if(e===x.R16Uint)return Uint16Array;if(e===x.R16Sint)return Int16Array;if(e===x.RG16Uint)return Uint16Array;if(e===x.RG16Sint)return Int16Array;if(e===x.RGBA16Uint)return Uint16Array;if(e===x.RGBA16Sint)return Int16Array;if(e===x.R16Float||e===x.RG16Float||e===x.RGBA16Float)return Uint16Array;if(e===x.R32Uint)return Uint32Array;if(e===x.R32Sint)return Int32Array;if(e===x.R32Float)return Float32Array;if(e===x.RG32Uint)return Uint32Array;if(e===x.RG32Sint)return Int32Array;if(e===x.RG32Float)return Float32Array;if(e===x.RGBA32Uint)return Uint32Array;if(e===x.RGBA32Sint)return Int32Array;if(e===x.RGBA32Float)return Float32Array;if(e===x.BGRA8Unorm||e===x.BGRA8UnormSRGB)return Uint8Array;if(e===x.RGB10A2Unorm||e===x.RGB9E5UFloat||e===x.RG11B10UFloat)return Uint32Array;if(e===x.Depth32Float)return Float32Array;if(e===x.Depth24Plus||e===x.Depth24PlusStencil8)return Uint32Array;if(e===x.Depth32FloatStencil8)return Float32Array}_getDimension(e){let t;return e.isData3DTexture?t=el.ThreeD:t=el.TwoD,t}}function la(o,e=null){const t=o.format,s=o.type,n=o.colorSpace;let r;if(o.isCompressedTexture===!0||o.isCompressedArrayTexture===!0)switch(t){case Vr:r=n===q?x.BC1RGBAUnormSRGB:x.BC1RGBAUnorm;break;case Gr:r=n===q?x.BC2RGBAUnormSRGB:x.BC2RGBAUnorm;break;case Or:r=n===q?x.BC3RGBAUnormSRGB:x.BC3RGBAUnorm;break;case Co:r=n===q?x.ETC2RGB8UnormSRGB:x.ETC2RGB8Unorm;break;case wo:r=n===q?x.ETC2RGBA8UnormSRGB:x.ETC2RGBA8Unorm;break;case Mo:r=n===q?x.ASTC4x4UnormSRGB:x.ASTC4x4Unorm;break;case Bo:r=n===q?x.ASTC5x4UnormSRGB:x.ASTC5x4Unorm;break;case Fo:r=n===q?x.ASTC5x5UnormSRGB:x.ASTC5x5Unorm;break;case Po:r=n===q?x.ASTC6x5UnormSRGB:x.ASTC6x5Unorm;break;case Uo:r=n===q?x.ASTC6x6UnormSRGB:x.ASTC6x6Unorm;break;case Do:r=n===q?x.ASTC8x5UnormSRGB:x.ASTC8x5Unorm;break;case Lo:r=n===q?x.ASTC8x6UnormSRGB:x.ASTC8x6Unorm;break;case Io:r=n===q?x.ASTC8x8UnormSRGB:x.ASTC8x8Unorm;break;case Vo:r=n===q?x.ASTC10x5UnormSRGB:x.ASTC10x5Unorm;break;case Go:r=n===q?x.ASTC10x6UnormSRGB:x.ASTC10x6Unorm;break;case Oo:r=n===q?x.ASTC10x8UnormSRGB:x.ASTC10x8Unorm;break;case ko:r=n===q?x.ASTC10x10UnormSRGB:x.ASTC10x10Unorm;break;case zo:r=n===q?x.ASTC12x10UnormSRGB:x.ASTC12x10Unorm;break;case Wo:r=n===q?x.ASTC12x12UnormSRGB:x.ASTC12x12Unorm;break;case es:r=n===q?x.RGBA8UnormSRGB:x.RGBA8Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}else switch(t){case es:switch(s){case Rn:r=x.RGBA8Snorm;break;case An:r=x.RGBA16Sint;break;case ks:r=x.RGBA16Uint;break;case Fe:r=x.RGBA32Uint;break;case ze:r=x.RGBA32Sint;break;case _t:r=n===q?x.RGBA8UnormSRGB:x.RGBA8Unorm;break;case it:r=x.RGBA16Float;break;case nt:r=x.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",s)}break;case ma:switch(s){case Gl:r=x.RGB9E5UFloat;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",s)}break;case ya:switch(s){case Rn:r=x.R8Snorm;break;case An:r=x.R16Sint;break;case ks:r=x.R16Uint;break;case Fe:r=x.R32Uint;break;case ze:r=x.R32Sint;break;case _t:r=x.R8Unorm;break;case it:r=x.R16Float;break;case nt:r=x.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",s)}break;case Gn:switch(s){case Rn:r=x.RG8Snorm;break;case An:r=x.RG16Sint;break;case ks:r=x.RG16Uint;break;case Fe:r=x.RG32Uint;break;case ze:r=x.RG32Sint;break;case _t:r=x.RG8Unorm;break;case it:r=x.RG16Float;break;case nt:r=x.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",s)}break;case er:switch(s){case ks:r=x.Depth16Unorm;break;case Fe:r=x.Depth24Plus;break;case nt:r=x.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",s)}break;case Jn:switch(s){case tr:r=x.Depth24PlusStencil8;break;case nt:e&&e.features.has(ca.Depth32FloatStencil8)===!1&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),r=x.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",s)}break;case xa:switch(s){case ze:r=x.R32Sint;break;case Fe:r=x.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",s)}break;case Ta:switch(s){case ze:r=x.RG32Sint;break;case Fe:r=x.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",s)}break;case _a:switch(s){case ze:r=x.RGBA32Sint;break;case Fe:r=x.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",s)}break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}return r}const bA=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,NA=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/ig,tl={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_depth_multisampled_2d:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"},SA=o=>{o=o.trim();const e=o.match(bA);if(e!==null&&e.length===4){const t=e[2],s=[];let n=null;for(;(n=NA.exec(t))!==null;)s.push({name:n[1],type:n[2]});const r=[];for(let l=0;l<s.length;l++){const{name:d,type:h}=s[l];let p=h;p.startsWith("ptr")?p="pointer":(p.startsWith("texture")&&(p=h.split("<")[0]),p=tl[p]),r.push(new Pu(p,d))}const i=o.substring(e[0].length),a=e[3]||"void",u=e[1]!==void 0?e[1]:"";return{type:tl[a]||a,inputs:r,name:u,inputsCode:t,blockCode:i,outputType:a}}else throw new Error("FunctionNode: Function is not a WGSL code.")};class vA extends Uu{constructor(e){const{type:t,inputs:s,name:n,inputsCode:r,blockCode:i,outputType:a}=SA(e);super(t,s,n),this.inputsCode=r,this.blockCode=i,this.outputType=a}getCode(e=this.name){const t=this.outputType!=="void"?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class RA extends mg{parseFunction(e){return new vA(e)}}const Ls=typeof self<"u"?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4},AA={[Ve.READ_ONLY]:"read",[Ve.WRITE_ONLY]:"write",[Ve.READ_WRITE]:"read_write"},sl={[gi]:"repeat",[fa]:"clamp",[fi]:"mirror"},Ir={vertex:Ls?Ls.VERTEX:1,fragment:Ls?Ls.FRAGMENT:2,compute:Ls?Ls.COMPUTE:4},nl={instance:!0,swizzleAssign:!1,storageBuffer:!0},EA={"^^":"tsl_xor"},CA={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},rl={},st={tsl_xor:new Re("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new Re("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new Re("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new Re("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new Re("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new Re("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new Re("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new Re("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new Re("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new Re("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new Re("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new Re("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new Re(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {

	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},vn={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};typeof navigator<"u"&&/Windows/g.test(navigator.userAgent)&&(st.pow_float=new Re("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),st.pow_vec2=new Re("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[st.pow_float]),st.pow_vec3=new Re("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[st.pow_float]),st.pow_vec4=new Re("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[st.pow_float]),vn.pow_float="tsl_pow_float",vn.pow_vec2="tsl_pow_vec2",vn.pow_vec3="tsl_pow_vec3",vn.pow_vec4="tsl_pow_vec4");let Ag="";(typeof navigator<"u"&&/Firefox|Deno/g.test(navigator.userAgent))!==!0&&(Ag+=`diagnostic( off, derivative_uniformity );
`);class wA extends fg{constructor(e,t){super(e,t,new RA),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==Vn}_generateTextureSample(e,t,s,n,r=this.shaderStage){return r==="fragment"?n?`textureSample( ${t}, ${t}_sampler, ${s}, ${n} )`:`textureSample( ${t}, ${t}_sampler, ${s} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,s):this.generateTextureLod(e,t,s,n,"0")}_generateVideoSample(e,t,s=this.shaderStage){if(s==="fragment")return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`;console.error(`WebGPURenderer: THREE.VideoTexture does not support ${s} shader.`)}_generateTextureSampleLevel(e,t,s,n,r,i=this.shaderStage){return(i==="fragment"||i==="compute")&&this.isUnfilterable(e)===!1?`textureSampleLevel( ${t}, ${t}_sampler, ${s}, ${n} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,s,n):this.generateTextureLod(e,t,s,r,n)}generateWrapFunction(e){const t=`tsl_coord_${sl[e.wrapS]}S_${sl[e.wrapT]}_${e.isData3DTexture?"3d":"2d"}T`;let s=rl[t];if(s===void 0){const n=[],r=e.isData3DTexture?"vec3f":"vec2f";let i=`fn ${t}( coord : ${r} ) -> ${r} {

	return ${r}(
`;const a=(u,c)=>{u===gi?(n.push(st.repeatWrapping_float),i+=`		tsl_repeatWrapping_float( coord.${c} )`):u===fa?(n.push(st.clampWrapping_float),i+=`		tsl_clampWrapping_float( coord.${c} )`):u===fi?(n.push(st.mirrorWrapping_float),i+=`		tsl_mirrorWrapping_float( coord.${c} )`):(i+=`		coord.${c}`,console.warn(`WebGPURenderer: Unsupported texture wrap type "${u}" for vertex shader.`))};a(e.wrapS,"x"),i+=`,
`,a(e.wrapT,"y"),e.isData3DTexture&&(i+=`,
`,a(e.wrapR,"z")),i+=`
	);

}
`,rl[t]=s=new Re(i,n)}return s.build(this),t}generateArrayDeclaration(e,t){return`array< ${this.getType(e)}, ${t} >`}generateTextureDimension(e,t,s){const n=this.getDataFromNode(e,this.shaderStage,this.globalCache);n.dimensionsSnippet===void 0&&(n.dimensionsSnippet={});let r=n.dimensionsSnippet[s];if(n.dimensionsSnippet[s]===void 0){let i,a;const{primarySamples:u}=this.renderer.backend.utils.getTextureSampleData(e),c=u>1;e.isData3DTexture?a="vec3<u32>":a="vec2<u32>",c||e.isVideoTexture||e.isStorageTexture?i=t:i=`${t}${s?`, u32( ${s} )`:""}`,r=new Wr(new $r(`textureDimensions( ${i} )`,a)),n.dimensionsSnippet[s]=r,(e.isDataArrayTexture||e.isData3DTexture)&&(n.arrayLayerCount=new Wr(new $r(`textureNumLayers(${t})`,"u32"))),e.isTextureCube&&(n.cubeFaceCount=new Wr(new $r("6u","u32")))}return r.build(this)}generateFilteredTexture(e,t,s,n="0u"){this._include("biquadraticTexture");const r=this.generateWrapFunction(e),i=this.generateTextureDimension(e,t,n);return`tsl_biquadraticTexture( ${t}, ${r}( ${s} ), ${i}, u32( ${n} ) )`}generateTextureLod(e,t,s,n,r="0u"){const i=this.generateWrapFunction(e),a=this.generateTextureDimension(e,t,r),u=e.isData3DTexture?"vec3":"vec2",c=`${u}<u32>(${i}(${s}) * ${u}<f32>(${a}))`;return this.generateTextureLoad(e,t,c,n,r)}generateTextureLoad(e,t,s,n,r="0u"){return e.isVideoTexture===!0||e.isStorageTexture===!0?`textureLoad( ${t}, ${s} )`:n?`textureLoad( ${t}, ${s}, ${n}, u32( ${r} ) )`:`textureLoad( ${t}, ${s}, u32( ${r} ) )`}generateTextureStore(e,t,s,n){return`textureStore( ${t}, ${s}, ${n} )`}isSampleCompare(e){return e.isDepthTexture===!0&&e.compareFunction!==null}isUnfilterable(e){return this.getComponentTypeFromTexture(e)!=="float"||!this.isAvailable("float32Filterable")&&e.isDataTexture===!0&&e.type===nt||this.isSampleCompare(e)===!1&&e.minFilter===Vt&&e.magFilter===Vt||this.renderer.backend.utils.getTextureSampleData(e).primarySamples>1}generateTexture(e,t,s,n,r=this.shaderStage){let i=null;return e.isVideoTexture===!0?i=this._generateVideoSample(t,s,r):this.isUnfilterable(e)?i=this.generateTextureLod(e,t,s,n,"0",r):i=this._generateTextureSample(e,t,s,n,r),i}generateTextureGrad(e,t,s,n,r,i=this.shaderStage){if(i==="fragment")return`textureSampleGrad( ${t}, ${t}_sampler, ${s},  ${n[0]}, ${n[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${i} shader.`)}generateTextureCompare(e,t,s,n,r,i=this.shaderStage){if(i==="fragment")return`textureSampleCompare( ${t}, ${t}_sampler, ${s}, ${n} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${i} shader.`)}generateTextureLevel(e,t,s,n,r,i=this.shaderStage){let a=null;return e.isVideoTexture===!0?a=this._generateVideoSample(t,s,i):a=this._generateTextureSampleLevel(e,t,s,n,r,i),a}generateTextureBias(e,t,s,n,r,i=this.shaderStage){if(i==="fragment")return`textureSampleBias( ${t}, ${t}_sampler, ${s}, ${n} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${i} shader.`)}getPropertyName(e,t=this.shaderStage){if(e.isNodeVarying===!0&&e.needsInterpolation===!0){if(t==="vertex")return`varyings.${e.name}`}else if(e.isNodeUniform===!0){const s=e.name,n=e.type;return n==="texture"||n==="cubeTexture"||n==="storageTexture"||n==="texture3D"?s:n==="buffer"||n==="storageBuffer"||n==="indirectStorageBuffer"?this.isCustomStruct(e)?s:s+".value":e.groupNode.name+"."+s}return super.getPropertyName(e)}getOutputStructName(){return"output"}_getUniformGroupCount(e){return Object.keys(this.uniforms[e]).length}getFunctionOperator(e){const t=EA[e];return t!==void 0?(this._include(t),t):null}getNodeAccess(e,t){return t!=="compute"?Ve.READ_ONLY:e.access}getStorageAccess(e,t){return AA[this.getNodeAccess(e,t)]}getUniformFromNode(e,t,s,n=null){const r=super.getUniformFromNode(e,t,s,n),i=this.getDataFromNode(e,s,this.globalCache);if(i.uniformGPU===void 0){let a;const u=e.groupNode,c=u.name,l=this.getBindGroupArray(c,s);if(t==="texture"||t==="cubeTexture"||t==="storageTexture"||t==="texture3D"){let d=null;const h=this.getNodeAccess(e,s);if(t==="texture"||t==="storageTexture"?d=new Oi(r.name,r.node,u,h):t==="cubeTexture"?d=new Ng(r.name,r.node,u,h):t==="texture3D"&&(d=new Sg(r.name,r.node,u,h)),d.store=e.isStorageTextureNode===!0,d.setVisibility(Ir[s]),(s==="fragment"||s==="compute")&&this.isUnfilterable(e.value)===!1&&d.store===!1){const p=new pA(`${r.name}_sampler`,r.node,u);p.setVisibility(Ir[s]),l.push(p,d),a=[p,d]}else l.push(d),a=[d]}else if(t==="buffer"||t==="storageBuffer"||t==="indirectStorageBuffer"){const d=t==="buffer"?_g:mA,h=new d(e,u);h.setVisibility(Ir[s]),l.push(h),a=h,r.name=n||"NodeBuffer_"+r.id}else{const d=this.uniformGroups[s]||(this.uniformGroups[s]={});let h=d[c];h===void 0&&(h=new bg(c,u),h.setVisibility(Ir[s]),d[c]=h,l.push(h)),a=this.getNodeUniform(r,t),h.addUniform(a)}i.uniformGPU=a}return r}getBuiltin(e,t,s,n=this.shaderStage){const r=this.builtins[n]||(this.builtins[n]=new Map);return r.has(e)===!1&&r.set(e,{name:e,property:t,type:s}),t}hasBuiltin(e,t=this.shaderStage){return this.builtins[t]!==void 0&&this.builtins[t].has(e)}getVertexIndex(){return this.shaderStage==="vertex"?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),n=[];for(const i of t.inputs)n.push(i.name+" : "+this.getType(i.type));let r=`fn ${t.name}( ${n.join(", ")} ) -> ${this.getType(t.type)} {
${s.vars}
${s.code}
`;return s.result&&(r+=`	return ${s.result};
`),r+=`
}
`,r}getInstanceIndex(){return this.shaderStage==="vertex"?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],s=this.directives[e];if(s!==void 0)for(const n of s)t.push(`enable ${n};`);return t.join(`
`)}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){const t=[],s=this.builtins[e];if(s!==void 0)for(const{name:n,property:r,type:i}of s.values())t.push(`@builtin( ${n} ) ${r} : ${i}`);return t.join(`,
	`)}getScopedArray(e,t,s,n){return this.scopedArrays.has(e)===!1&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:s,bufferCount:n}),e}getScopedArrays(e){if(e!=="compute")return;const t=[];for(const{name:s,scope:n,bufferType:r,bufferCount:i}of this.scopedArrays.values()){const a=this.getType(r);t.push(`var<${n}> ${s}: array< ${a}, ${i} >;`)}return t.join(`
`)}getAttributes(e){const t=[];if(e==="compute"&&(this.getBuiltin("global_invocation_id","globalId","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),e==="vertex"||e==="compute"){const s=this.getBuiltins("attribute");s&&t.push(s);const n=this.getAttributesArray();for(let r=0,i=n.length;r<i;r++){const a=n[r],u=a.name,c=this.getType(a.type);t.push(`@location( ${r} ) ${u} : ${c}`)}}return t.join(`,
	`)}getStructMembers(e){const t=[];for(const s of e.members){const n=e.output?"@location( "+s.index+" ) ":"";let r=this.getType(s.type);s.atomic&&(r="atomic< "+r+" >"),t.push(`	${n+s.name} : ${r}`)}return t.join(`,
`)}getStructs(e){let t="";const s=this.structs[e];if(s.length>0){const n=[];for(const r of s){let i=`struct ${r.name} {
`;i+=this.getStructMembers(r),i+=`
};`,n.push(i)}t=`
`+n.join(`

`)+`
`}return t}getVar(e,t,s=null){let n=`var ${t} : `;return s!==null?n+=this.generateArrayDeclaration(e,s):n+=this.getType(e),n}getVars(e){const t=[],s=this.vars[e];if(s!==void 0)for(const n of s)t.push(`	${this.getVar(n.type,n.name,n.count)};`);return`
${t.join(`
`)}
`}getVaryings(e){const t=[];if(e==="vertex"&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),e==="vertex"||e==="fragment"){const r=this.varyings,i=this.vars[e];for(let a=0;a<r.length;a++){const u=r[a];if(u.needsInterpolation){let c=`@location( ${a} )`;/^(int|uint|ivec|uvec)/.test(u.type)&&(c+=" @interpolate( flat )"),t.push(`${c} ${u.name} : ${this.getType(u.type)}`)}else e==="vertex"&&i.includes(u)===!1&&i.push(u)}}const s=this.getBuiltins(e);s&&t.push(s);const n=t.join(`,
	`);return e==="vertex"?this._getWGSLStruct("VaryingsStruct","	"+n):n}isCustomStruct(e){return e.value.isStorageBufferAttribute&&e.node.structTypeNode!==null}getUniforms(e){const t=this.uniforms[e],s=[],n=[],r=[],i={};for(const u of t){const c=u.groupNode.name,l=this.bindingsIndexes[c];if(u.type==="texture"||u.type==="cubeTexture"||u.type==="storageTexture"||u.type==="texture3D"){const d=u.node.value;(e==="fragment"||e==="compute")&&this.isUnfilterable(d)===!1&&u.node.isStorageTextureNode!==!0&&(this.isSampleCompare(d)?s.push(`@binding( ${l.binding++} ) @group( ${l.group} ) var ${u.name}_sampler : sampler_comparison;`):s.push(`@binding( ${l.binding++} ) @group( ${l.group} ) var ${u.name}_sampler : sampler;`));let h,p="";const{primarySamples:f}=this.renderer.backend.utils.getTextureSampleData(d);if(f>1&&(p="_multisampled"),d.isCubeTexture===!0)h="texture_cube<f32>";else if(d.isDataArrayTexture===!0||d.isCompressedArrayTexture===!0)h="texture_2d_array<f32>";else if(d.isDepthTexture===!0)h=`texture_depth${p}_2d`;else if(d.isVideoTexture===!0)h="texture_external";else if(d.isData3DTexture===!0)h="texture_3d<f32>";else if(u.node.isStorageTextureNode===!0){const m=la(d),b=this.getStorageAccess(u.node,e);h=`texture_storage_2d<${m}, ${b}>`}else{const m=this.getComponentTypeFromTexture(d).charAt(0);h=`texture${p}_2d<${m}32>`}s.push(`@binding( ${l.binding++} ) @group( ${l.group} ) var ${u.name} : ${h};`)}else if(u.type==="buffer"||u.type==="storageBuffer"||u.type==="indirectStorageBuffer"){const d=u.node,h=this.getType(d.getNodeType(this)),p=d.bufferCount,f=p>0&&u.type==="buffer"?", "+p:"",m=d.isStorageBufferNode?`storage, ${this.getStorageAccess(d,e)}`:"uniform";if(this.isCustomStruct(u))n.push(`@binding( ${l.binding++} ) @group( ${l.group} ) var<${m}> ${u.name} : ${h};`);else{const _=`	value : array< ${d.isAtomic?`atomic<${h}>`:`${h}`}${f} >`;n.push(this._getWGSLStructBinding(u.name,_,m,l.binding++,l.group))}}else{const d=this.getType(this.getVectorType(u.type)),h=u.groupNode.name;(i[h]||(i[h]={index:l.binding++,id:l.group,snippets:[]})).snippets.push(`	${u.name} : ${d}`)}}for(const u in i){const c=i[u];r.push(this._getWGSLStructBinding(u,c.snippets.join(`,
`),"uniform",c.index,c.id))}let a=s.join(`
`);return a+=n.join(`
`),a+=r.join(`
`),a}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){this.shaderStage=t;const s=e[t];s.uniforms=this.getUniforms(t),s.attributes=this.getAttributes(t),s.varyings=this.getVaryings(t),s.structs=this.getStructs(t),s.vars=this.getVars(t),s.codes=this.getCodes(t),s.directives=this.getDirectives(t),s.scopedArrays=this.getScopedArrays(t);let n=`// code

`;n+=this.flowCode[t];const r=this.flowNodes[t],i=r[r.length-1],a=i.outputNode,u=a!==void 0&&a.isOutputStructNode===!0;for(const c of r){const l=this.getFlowData(c),d=c.name;if(d&&(n.length>0&&(n+=`
`),n+=`	// flow -> ${d}
`),n+=`${l.code}
	`,c===i&&t!=="compute"){if(n+=`// result

	`,t==="vertex")n+=`varyings.Vertex = ${l.result};`;else if(t==="fragment")if(u)s.returnType=a.getNodeType(this),s.structs+="var<private> output : "+s.returnType+";",n+=`return ${l.result};`;else{let h="	@location(0) color: vec4<f32>";const p=this.getBuiltins("output");p&&(h+=`,
	`+p),s.returnType="OutputStruct",s.structs+=this._getWGSLStruct("OutputStruct",h),s.structs+=`
var<private> output : OutputStruct;`,n+=`output.color = ${l.result};

	return output;`}}}s.flow=n}this.shaderStage=null,this.material!==null?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e,t=null){let s;return t!==null&&(s=this._getWGSLMethod(e+"_"+t)),s===void 0&&(s=this._getWGSLMethod(e)),s||e}getType(e){return CA[e]||e}isAvailable(e){let t=nl[e];return t===void 0&&(e==="float32Filterable"?t=this.renderer.hasFeature("float32-filterable"):e==="clipDistance"&&(t=this.renderer.hasFeature("clip-distances")),nl[e]=t),t}_getWGSLMethod(e){return st[e]!==void 0&&this._include(e),vn[e]}_include(e){const t=st[e];return t.build(this),this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}
// directives
${e.directives}

// structs
${e.structs}

// uniforms
${e.uniforms}

// varyings
${e.varyings}
var<private> varyings : VaryingsStruct;

// codes
${e.codes}

@vertex
fn main( ${e.attributes} ) -> VaryingsStruct {

	// vars
	${e.vars}

	// flow
	${e.flow}

	return varyings;

}
`}_getWGSLFragmentCode(e){return`${this.getSignature()}
// global
${Ag}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@fragment
fn main( ${e.varyings} ) -> ${e.returnType} {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLComputeCode(e,t){return`${this.getSignature()}
// directives
${e.directives}

// system
var<private> instanceIndex : u32;

// locals
${e.scopedArrays}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@compute @workgroup_size( ${t} )
fn main( ${e.attributes} ) {

	// system
	instanceIndex = globalId.x + globalId.y * numWorkgroups.x * u32(${t}) + globalId.z * numWorkgroups.x * numWorkgroups.y * u32(${t});

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLStruct(e,t){return`
struct ${e} {
${t}
};`}_getWGSLStructBinding(e,t,s,n=0,r=0){const i=e+"Struct";return`${this._getWGSLStruct(i,t)}
@binding( ${n} ) @group( ${r} )
var<${s}> ${e} : ${i};`}}class MA{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return e.depthTexture!==null?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=x.Depth24PlusStencil8:e.depth&&(t=x.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getTextureSampleData(e){let t;if(e.isFramebufferTexture)t=1;else if(e.isDepthTexture&&!e.renderTarget){const r=this.backend.renderer,i=r.getRenderTarget();t=i?i.samples:r.samples}else e.renderTarget&&(t=e.renderTarget.samples);t=t||1;const s=t>1&&e.renderTarget!==null&&e.isDepthTexture!==!0&&e.isFramebufferTexture!==!0;return{samples:t,primarySamples:s?1:t,isMSAA:s}}getCurrentColorFormat(e){let t;return e.textures!==null?t=this.getTextureFormatGPU(e.textures[0]):t=this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return e.textures!==null?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){if(e.isPoints)return Hs.PointList;if(e.isLineSegments||e.isMesh&&t.wireframe===!0)return Hs.LineList;if(e.isLine)return Hs.LineStrip;if(e.isMesh)return Hs.TriangleList}getSampleCount(e){let t=1;return e>1&&(t=Math.pow(2,Math.floor(Math.log2(e))),t===2&&(t=4)),t}getSampleCountRenderContext(e){return e.textures!==null?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){const e=this.backend.parameters.outputType;if(e===void 0)return navigator.gpu.getPreferredCanvasFormat();if(e===_t)return x.BGRA8Unorm;if(e===it)return x.RGBA16Float;throw new Error("Unsupported outputType")}}const BA=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),FA=new Map([[Xl,["float16"]]]),PA=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class UA{constructor(e){this.backend=e}createAttribute(e,t){const s=this._getBufferAttribute(e),n=this.backend,r=n.get(s);let i=r.buffer;if(i===void 0){const a=n.device;let u=s.array;if(e.normalized===!1){if(u.constructor===Int16Array)u=new Int32Array(u);else if(u.constructor===Uint16Array&&(u=new Uint32Array(u),t&GPUBufferUsage.INDEX))for(let l=0;l<u.length;l++)u[l]===65535&&(u[l]=4294967295)}if(s.array=u,(s.isStorageBufferAttribute||s.isStorageInstancedBufferAttribute)&&s.itemSize===3){u=new u.constructor(s.count*4);for(let l=0;l<s.count;l++)u.set(s.array.subarray(l*3,l*3+3),l*4);s.itemSize=4,s.array=u}const c=u.byteLength+(4-u.byteLength%4)%4;i=a.createBuffer({label:s.name,size:c,usage:t,mappedAtCreation:!0}),new u.constructor(i.getMappedRange()).set(u),i.unmap(),r.buffer=i}}updateAttribute(e){const t=this._getBufferAttribute(e),s=this.backend,n=s.device,r=s.get(t).buffer,i=t.array,a=this._isTypedArray(i),u=t.updateRanges;if(u.length===0)n.queue.writeBuffer(r,0,i,0);else{const c=a?1:i.BYTES_PER_ELEMENT;for(let l=0,d=u.length;l<d;l++){const h=u[l],p=h.start*c,f=h.count*c;n.queue.writeBuffer(r,0,i,p,f)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),s=new Map;for(let n=0;n<t.length;n++){const r=t[n],i=r.array.BYTES_PER_ELEMENT,a=this._getBufferAttribute(r);let u=s.get(a);if(u===void 0){let d,h;r.isInterleavedBufferAttribute===!0?(d=r.data.stride*i,h=r.data.isInstancedInterleavedBuffer?Lr.Instance:Lr.Vertex):(d=r.itemSize*i,h=r.isInstancedBufferAttribute?Lr.Instance:Lr.Vertex),r.normalized===!1&&(r.array.constructor===Int16Array||r.array.constructor===Uint16Array)&&(d=4),u={arrayStride:d,attributes:[],stepMode:h},s.set(a,u)}const c=this._getVertexFormat(r),l=r.isInterleavedBufferAttribute===!0?r.offset*i:0;u.attributes.push({shaderLocation:n,offset:l,format:c})}return Array.from(s.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,s=t.device,r=t.get(this._getBufferAttribute(e)).buffer,i=r.size,a=s.createBuffer({label:`${e.name}_readback`,size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),u=s.createCommandEncoder({label:`readback_encoder_${e.name}`});u.copyBufferToBuffer(r,0,a,0,i);const c=u.finish();s.queue.submit([c]),await a.mapAsync(GPUMapMode.READ);const l=a.getMappedRange(),d=new e.array.constructor(l.slice(0));return a.unmap(),d.buffer}_getVertexFormat(e){const{itemSize:t,normalized:s}=e,n=e.array.constructor,r=e.constructor;let i;if(t===1)i=PA.get(n);else{const u=(FA.get(r)||BA.get(n))[s?1:0];if(u){const c=n.BYTES_PER_ELEMENT*t,d=Math.floor((c+3)/4)*4/n.BYTES_PER_ELEMENT;if(d%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");i=`${u}x${d}`}}return i||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),i}_isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class DA{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const t=this.backend,s=t.device,n=[];let r=0;for(const i of e.bindings){const a={binding:r++,visibility:i.visibility};if(i.isUniformBuffer||i.isStorageBuffer){const u={};i.isStorageBuffer&&(i.visibility&4&&(i.access===Ve.READ_WRITE||i.access===Ve.WRITE_ONLY)?u.type=So.Storage:u.type=So.ReadOnlyStorage),a.buffer=u}else if(i.isSampler){const u={};i.texture.isDepthTexture&&i.texture.compareFunction!==null&&(u.type="comparison"),a.sampler=u}else if(i.isSampledTexture&&i.texture.isVideoTexture)a.externalTexture={};else if(i.isSampledTexture&&i.store){const u={};u.format=this.backend.get(i.texture).texture.format;const c=i.access;c===Ve.READ_WRITE?u.access=vo.ReadWrite:c===Ve.WRITE_ONLY?u.access=vo.WriteOnly:u.access=vo.ReadOnly,a.storageTexture=u}else if(i.isSampledTexture){const u={},{primarySamples:c}=t.utils.getTextureSampleData(i.texture);if(c>1&&(u.multisampled=!0,i.texture.isDepthTexture||(u.sampleType=Ds.UnfilterableFloat)),i.texture.isDepthTexture)u.sampleType=Ds.Depth;else if(i.texture.isDataTexture||i.texture.isDataArrayTexture||i.texture.isData3DTexture){const l=i.texture.type;l===ze?u.sampleType=Ds.SInt:l===Fe?u.sampleType=Ds.UInt:l===nt&&(this.backend.hasFeature("float32-filterable")?u.sampleType=Ds.Float:u.sampleType=Ds.UnfilterableFloat)}i.isSampledCubeTexture?u.viewDimension=He.Cube:i.texture.isDataArrayTexture||i.texture.isCompressedArrayTexture?u.viewDimension=He.TwoDArray:i.isSampledTexture3D&&(u.viewDimension=He.ThreeD),a.texture=u}else console.error(`WebGPUBindingUtils: Unsupported binding "${i}".`);n.push(a)}return s.createBindGroupLayout({entries:n})}createBindings(e,t,s,n=0){const{backend:r,bindGroupLayoutCache:i}=this,a=r.get(e);let u=i.get(e.bindingsReference);u===void 0&&(u=this.createBindingsLayout(e),i.set(e.bindingsReference,u));let c;s>0&&(a.groups===void 0&&(a.groups=[],a.versions=[]),a.versions[s]===n&&(c=a.groups[s])),c===void 0&&(c=this.createBindGroup(e,u),s>0&&(a.groups[s]=c,a.versions[s]=n)),a.group=c,a.layout=u}updateBinding(e){const t=this.backend,s=t.device,n=e.buffer,r=t.get(e).buffer;s.queue.writeBuffer(r,0,n,0)}createBindGroupIndex(e,t){const n=this.backend.device,r=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,i=e[0],a=n.createBuffer({label:"bindingCameraIndex_"+i,size:16,usage:r});n.queue.writeBuffer(a,0,e,0);const u=[{binding:0,resource:{buffer:a}}];return n.createBindGroup({label:"bindGroupCameraIndex_"+i,layout:t,entries:u})}createBindGroup(e,t){const s=this.backend,n=s.device;let r=0;const i=[];for(const a of e.bindings){if(a.isUniformBuffer){const u=s.get(a);if(u.buffer===void 0){const c=a.byteLength,l=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,d=n.createBuffer({label:"bindingBuffer_"+a.name,size:c,usage:l});u.buffer=d}i.push({binding:r,resource:{buffer:u.buffer}})}else if(a.isStorageBuffer){const u=s.get(a);if(u.buffer===void 0){const c=a.attribute;u.buffer=s.get(c).buffer}i.push({binding:r,resource:{buffer:u.buffer}})}else if(a.isSampler){const u=s.get(a.texture);i.push({binding:r,resource:u.sampler})}else if(a.isSampledTexture){const u=s.get(a.texture);let c;if(u.externalTexture!==void 0)c=n.importExternalTexture({source:u.externalTexture});else{const l=a.store?1:u.texture.mipLevelCount,d=`view-${u.texture.width}-${u.texture.height}-${l}`;if(c=u[d],c===void 0){const h=dA.All;let p;a.isSampledCubeTexture?p=He.Cube:a.isSampledTexture3D?p=He.ThreeD:a.texture.isDataArrayTexture||a.texture.isCompressedArrayTexture?p=He.TwoDArray:p=He.TwoD,c=u[d]=u.texture.createView({aspect:h,dimension:p,mipLevelCount:l})}}i.push({binding:r,resource:c})}r++}return n.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:i})}}class LA{constructor(e){this.backend=e}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:s,material:n,geometry:r,pipeline:i}=e,{vertexProgram:a,fragmentProgram:u}=i,c=this.backend,l=c.device,d=c.utils,h=c.get(i),p=[];for(const ve of e.getBindings()){const De=c.get(ve);p.push(De.layout)}const f=c.attributeUtils.createShaderVertexBuffers(e);let m;n.transparent===!0&&n.blending!==In&&(m=this._getBlending(n));let b={};n.stencilWrite===!0&&(b={compare:this._getStencilCompare(n),failOp:this._getStencilOperation(n.stencilFail),depthFailOp:this._getStencilOperation(n.stencilZFail),passOp:this._getStencilOperation(n.stencilZPass)});const _=this._getColorWriteMask(n),C=[];if(e.context.textures!==null){const ve=e.context.textures;for(let De=0;De<ve.length;De++){const ut=d.getTextureFormatGPU(ve[De]);C.push({format:ut,blend:m,writeMask:_})}}else{const ve=d.getCurrentColorFormat(e.context);C.push({format:ve,blend:m,writeMask:_})}const M=c.get(a).module,P=c.get(u).module,I=this._getPrimitiveState(s,r,n),B=this._getDepthCompare(n),U=d.getCurrentDepthStencilFormat(e.context),D=this._getSampleCount(e.context),Y={label:`renderPipeline_${n.name||n.type}_${n.id}`,vertex:Object.assign({},M,{buffers:f}),fragment:Object.assign({},P,{targets:C}),primitive:I,multisample:{count:D,alphaToCoverageEnabled:n.alphaToCoverage&&D>1},layout:l.createPipelineLayout({bindGroupLayouts:p})},Q={},Z=e.context.depth,te=e.context.stencil;if((Z===!0||te===!0)&&(Z===!0&&(Q.format=U,Q.depthWriteEnabled=n.depthWrite,Q.depthCompare=B),te===!0&&(Q.stencilFront=b,Q.stencilBack={},Q.stencilReadMask=n.stencilFuncMask,Q.stencilWriteMask=n.stencilWriteMask),Y.depthStencil=Q),t===null)h.pipeline=l.createRenderPipeline(Y);else{const ve=new Promise(De=>{l.createRenderPipelineAsync(Y).then(ut=>{h.pipeline=ut,De()})});t.push(ve)}}createBundleEncoder(e){const t=this.backend,{utils:s,device:n}=t,r=s.getCurrentDepthStencilFormat(e),i=s.getCurrentColorFormat(e),a=this._getSampleCount(e),u={label:"renderBundleEncoder",colorFormats:[i],depthStencilFormat:r,sampleCount:a};return n.createRenderBundleEncoder(u)}createComputePipeline(e,t){const s=this.backend,n=s.device,r=s.get(e.computeProgram).module,i=s.get(e),a=[];for(const u of t){const c=s.get(u);a.push(c.layout)}i.pipeline=n.createComputePipeline({compute:r,layout:n.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(e){let t,s;const n=e.blending,r=e.blendSrc,i=e.blendDst,a=e.blendEquation;if(n===Ml){const u=e.blendSrcAlpha!==null?e.blendSrcAlpha:r,c=e.blendDstAlpha!==null?e.blendDstAlpha:i,l=e.blendEquationAlpha!==null?e.blendEquationAlpha:a;t={srcFactor:this._getBlendFactor(r),dstFactor:this._getBlendFactor(i),operation:this._getBlendOperation(a)},s={srcFactor:this._getBlendFactor(u),dstFactor:this._getBlendFactor(c),operation:this._getBlendOperation(l)}}else{const u=e.premultipliedAlpha,c=(l,d,h,p)=>{t={srcFactor:l,dstFactor:d,operation:ds.Add},s={srcFactor:h,dstFactor:p,operation:ds.Add}};if(u)switch(n){case js:c($.One,$.OneMinusSrcAlpha,$.One,$.OneMinusSrcAlpha);break;case Zr:c($.One,$.One,$.One,$.One);break;case Qr:c($.Zero,$.OneMinusSrc,$.Zero,$.One);break;case Yr:c($.Zero,$.Src,$.Zero,$.SrcAlpha);break}else switch(n){case js:c($.SrcAlpha,$.OneMinusSrcAlpha,$.One,$.OneMinusSrcAlpha);break;case Zr:c($.SrcAlpha,$.One,$.SrcAlpha,$.One);break;case Qr:c($.Zero,$.OneMinusSrc,$.Zero,$.One);break;case Yr:c($.Zero,$.Src,$.Zero,$.Src);break}}if(t!==void 0&&s!==void 0)return{color:t,alpha:s};console.error("THREE.WebGPURenderer: Invalid blending: ",n)}_getBlendFactor(e){let t;switch(e){case wl:t=$.Zero;break;case Cl:t=$.One;break;case El:t=$.Src;break;case Nl:t=$.OneMinusSrc;break;case Al:t=$.SrcAlpha;break;case bl:t=$.OneMinusSrcAlpha;break;case vl:t=$.Dst;break;case _l:t=$.OneMinusDstColor;break;case Sl:t=$.DstAlpha;break;case Tl:t=$.OneMinusDstAlpha;break;case Rl:t=$.SrcAlphaSaturated;break;case C_:t=$.Constant;break;case w_:t=$.OneMinusConstant;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const s=e.stencilFunc;switch(s){case Um:t=Be.Never;break;case Pm:t=Be.Always;break;case Fm:t=Be.Less;break;case Bm:t=Be.LessEqual;break;case Mm:t=Be.Equal;break;case wm:t=Be.GreaterEqual;break;case Cm:t=Be.Greater;break;case Em:t=Be.NotEqual;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",s)}return t}_getStencilOperation(e){let t;switch(e){case zm:t=Xt.Keep;break;case km:t=Xt.Zero;break;case Om:t=Xt.Replace;break;case Gm:t=Xt.Invert;break;case Vm:t=Xt.IncrementClamp;break;case Im:t=Xt.DecrementClamp;break;case Lm:t=Xt.IncrementWrap;break;case Dm:t=Xt.DecrementWrap;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case Is:t=ds.Add;break;case xl:t=ds.Subtract;break;case yl:t=ds.ReverseSubtract;break;case $m:t=ds.Min;break;case Wm:t=ds.Max;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,s){const n={},r=this.backend.utils;switch(n.topology=r.getPrimitiveTopology(e,s),t.index!==null&&e.isLine===!0&&e.isLineSegments!==!0&&(n.stripIndexFormat=t.index.array instanceof Uint16Array?rn.Uint16:rn.Uint32),s.side){case Ro:n.frontFace=_o.CCW,n.cullMode=bo.Back;break;case vt:n.frontFace=_o.CCW,n.cullMode=bo.Front;break;case Xs:n.frontFace=_o.CCW,n.cullMode=bo.None;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",s.side);break}return n}_getColorWriteMask(e){return e.colorWrite===!0?Jc.All:Jc.None}_getDepthCompare(e){let t;if(e.depthTest===!1)t=Be.Always;else{const s=e.depthFunc;switch(s){case Vl:t=Be.Never;break;case Il:t=Be.Always;break;case Ll:t=Be.Less;break;case Dl:t=Be.LessEqual;break;case Ul:t=Be.Equal;break;case Pl:t=Be.GreaterEqual;break;case Fl:t=Be.Greater;break;case Bl:t=Be.NotEqual;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",s)}}return t}}class IA extends Rg{constructor(e,t,s=2048){super(s),this.device=e,this.type=t,this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxQueries,label:`queryset_global_timestamp_${t}`});const n=this.maxQueries*8;this.resolveBuffer=this.device.createBuffer({label:`buffer_timestamp_resolve_${t}`,size:n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=this.device.createBuffer({label:`buffer_timestamp_result_${t}`,size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})}allocateQueriesForContext(e){if(!this.trackTimestamp||this.isDisposed)return null;if(this.currentQueryIndex+2>this.maxQueries)return Dn(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryOffsets.set(e.id,t),t}async resolveQueriesAsync(){if(!this.trackTimestamp||this.currentQueryIndex===0||this.isDisposed)return this.lastValue;if(this.pendingResolve)return this.pendingResolve;this.pendingResolve=this._resolveQueries();try{return await this.pendingResolve}finally{this.pendingResolve=null}}async _resolveQueries(){if(this.isDisposed)return this.lastValue;try{if(this.resultBuffer.mapState!=="unmapped")return this.lastValue;const e=new Map(this.queryOffsets),t=this.currentQueryIndex,s=t*8;this.currentQueryIndex=0,this.queryOffsets.clear();const n=this.device.createCommandEncoder();n.resolveQuerySet(this.querySet,0,t,this.resolveBuffer,0),n.copyBufferToBuffer(this.resolveBuffer,0,this.resultBuffer,0,s);const r=n.finish();if(this.device.queue.submit([r]),this.resultBuffer.mapState!=="unmapped")return this.lastValue;if(await this.resultBuffer.mapAsync(GPUMapMode.READ,0,s),this.isDisposed)return this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue;const i=new BigUint64Array(this.resultBuffer.getMappedRange(0,s));let a=0;for(const[,u]of e){const c=i[u],l=i[u+1],d=Number(l-c)/1e6;a+=d}return this.resultBuffer.unmap(),this.lastValue=a,a}catch(e){return console.error("Error resolving queries:",e),this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue}}async dispose(){if(!this.isDisposed){if(this.isDisposed=!0,this.pendingResolve)try{await this.pendingResolve}catch(e){console.error("Error waiting for pending resolve:",e)}if(this.resultBuffer&&this.resultBuffer.mapState==="mapped")try{this.resultBuffer.unmap()}catch(e){console.error("Error unmapping buffer:",e)}this.querySet&&(this.querySet.destroy(),this.querySet=null),this.resolveBuffer&&(this.resolveBuffer.destroy(),this.resolveBuffer=null),this.resultBuffer&&(this.resultBuffer.destroy(),this.resultBuffer=null),this.queryOffsets.clear(),this.pendingResolve=null}}}class VA extends vg{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=e.alpha===void 0?!0:e.alpha,this.parameters.requiredLimits=e.requiredLimits===void 0?{}:e.requiredLimits,this.trackTimestamp=e.trackTimestamp===!0,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new MA(this),this.attributeUtils=new UA(this),this.bindingUtils=new DA(this),this.pipelineUtils=new LA(this),this.textureUtils=new _A(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let s;if(t.device===void 0){const i={powerPreference:t.powerPreference},a=typeof navigator<"u"?await navigator.gpu.requestAdapter(i):null;if(a===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const u=Object.values(ca),c=[];for(const d of u)a.features.has(d)&&c.push(d);const l={requiredFeatures:c,requiredLimits:t.requiredLimits};s=await a.requestDevice(l)}else s=t.device;s.lost.then(i=>{const a={api:"WebGPU",message:i.message||"Unknown reason",reason:i.reason||null,originalEvent:i};e.onDeviceLost(a)});const n=t.context!==void 0?t.context:e.domElement.getContext("webgpu");this.device=s,this.context=n;const r=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(ca.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:r}),this.updateSize()}get coordinateSystem(){return on}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(e===null){const s=this.renderer;e={colorAttachments:[{view:null}]},(this.renderer.depth===!0||this.renderer.stencil===!0)&&(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(s.depth,s.stencil).createView()});const n=e.colorAttachments[0];this.renderer.samples>0?n.view=this.colorBuffer.createView():n.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_getRenderPassDescriptor(e,t={}){const s=e.renderTarget,n=this.get(s);let r=n.descriptors;if(r===void 0||n.width!==s.width||n.height!==s.height||n.dimensions!==s.dimensions||n.activeMipmapLevel!==s.activeMipmapLevel||n.activeCubeFace!==e.activeCubeFace||n.samples!==s.samples||n.loadOp!==t.loadOp){r={},n.descriptors=r;const u=()=>{s.removeEventListener("dispose",u),this.delete(s)};s.addEventListener("dispose",u)}const i=e.getCacheKey();let a=r[i];if(a===void 0){const u=e.textures,c=[];let l;for(let d=0;d<u.length;d++){const h=this.get(u[d]),p={label:`colorAttachment_${d}`,baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,arrayLayerCount:1,dimension:He.TwoD};s.isRenderTarget3D?(l=e.activeCubeFace,p.baseArrayLayer=0,p.dimension=He.ThreeD,p.depthOrArrayLayers=u[d].image.depth):s.isRenderTargetArray&&(p.dimension=He.TwoDArray,p.depthOrArrayLayers=u[d].image.depth);const f=h.texture.createView(p);let m,b;h.msaaTexture!==void 0?(m=h.msaaTexture.createView(),b=f):(m=f,b=void 0),c.push({view:m,depthSlice:l,resolveTarget:b,loadOp:_e.Load,storeOp:Le.Store,...t})}if(a={colorAttachments:c},e.depth){const h={view:this.get(e.depthTexture).texture.createView()};a.depthStencilAttachment=h}r[i]=a,n.width=s.width,n.height=s.height,n.samples=s.samples,n.activeMipmapLevel=e.activeMipmapLevel,n.activeCubeFace=e.activeCubeFace,n.dimensions=s.dimensions,n.depthSlice=l,n.loadOp=c[0].loadOp}return a}beginRender(e){const t=this.get(e),s=this.device,n=e.occlusionQueryCount;let r;n>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,r=s.createQuerySet({type:"occlusion",count:n,label:`occlusionQuerySet_${e.id}`}),t.occlusionQuerySet=r,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(n),t.lastOcclusionObject=null);let i;e.textures===null?i=this._getDefaultRenderPassDescriptor():i=this._getRenderPassDescriptor(e,{loadOp:_e.Load}),this.initTimestampQuery(e,i),i.occlusionQuerySet=r;const a=i.depthStencilAttachment;if(e.textures!==null){const l=i.colorAttachments;for(let d=0;d<l.length;d++){const h=l[d];e.clearColor?(h.clearValue=d===0?e.clearColorValue:{r:0,g:0,b:0,a:1},h.loadOp=_e.Clear,h.storeOp=Le.Store):(h.loadOp=_e.Load,h.storeOp=Le.Store)}}else{const l=i.colorAttachments[0];e.clearColor?(l.clearValue=e.clearColorValue,l.loadOp=_e.Clear,l.storeOp=Le.Store):(l.loadOp=_e.Load,l.storeOp=Le.Store)}e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=_e.Clear,a.depthStoreOp=Le.Store):(a.depthLoadOp=_e.Load,a.depthStoreOp=Le.Store)),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=_e.Clear,a.stencilStoreOp=Le.Store):(a.stencilLoadOp=_e.Load,a.stencilStoreOp=Le.Store));const u=s.createCommandEncoder({label:"renderContext_"+e.id}),c=u.beginRenderPass(i);if(t.descriptor=i,t.encoder=u,t.currentPass=c,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[],e.viewport&&this.updateViewport(e),e.scissor){const{x:l,y:d,width:h,height:p}=e.scissorValue;c.setScissorRect(l,d,h,p)}}finishRender(e){const t=this.get(e),s=e.occlusionQueryCount;if(t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),s>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),s>0){const n=s*8;let r=this.occludedResolveCache.get(n);r===void 0&&(r=this.device.createBuffer({size:n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(n,r));const i=this.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,s,r,0),t.encoder.copyBufferToBuffer(r,0,i,0,n),t.occlusionQueryBuffer=i,this.resolveOccludedAsync(e)}if(this.device.queue.submit([t.encoder.finish()]),e.textures!==null){const n=e.textures;for(let r=0;r<n.length;r++){const i=n[r];i.generateMipmaps===!0&&this.textureUtils.generateMipmaps(i)}}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:s,currentOcclusionQueryObjects:n}=t;if(s&&n){const r=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await s.mapAsync(GPUMapMode.READ);const i=s.getMappedRange(),a=new BigUint64Array(i);for(let u=0;u<n.length;u++)a[u]===BigInt(0)&&r.add(n[u]);s.destroy(),t.occluded=r}}updateViewport(e){const{currentPass:t}=this.get(e),{x:s,y:n,width:r,height:i,minDepth:a,maxDepth:u}=e.viewportValue;t.setViewport(s,n,r,i,a,u)}clear(e,t,s,n=null){const r=this.device,i=this.renderer;let a=[],u,c,l,d;if(e){const f=this.getClearColor();if(this.renderer.alpha===!0){const m=f.a;c={r:f.r*m,g:f.g*m,b:f.b*m,a:m}}else c={r:f.r,g:f.g,b:f.b,a:f.a}}if(n===null){l=i.depth,d=i.stencil;const f=this._getDefaultRenderPassDescriptor();if(e){a=f.colorAttachments;const m=a[0];m.clearValue=c,m.loadOp=_e.Clear,m.storeOp=Le.Store}(l||d)&&(u=f.depthStencilAttachment)}else l=n.depth,d=n.stencil,e&&(a=this._getRenderPassDescriptor(n,{loadOp:_e.Clear,clearValue:c}).colorAttachments),(l||d)&&(u={view:this.get(n.depthTexture).texture.createView()});l&&(t?(u.depthLoadOp=_e.Clear,u.depthClearValue=i.getClearDepth(),u.depthStoreOp=Le.Store):(u.depthLoadOp=_e.Load,u.depthStoreOp=Le.Store)),d&&(s?(u.stencilLoadOp=_e.Clear,u.stencilClearValue=i.getClearStencil(),u.stencilStoreOp=Le.Store):(u.stencilLoadOp=_e.Load,u.stencilStoreOp=Le.Store));const h=r.createCommandEncoder({label:"clear"});h.beginRenderPass({colorAttachments:a,depthStencilAttachment:u}).end(),r.queue.submit([h.finish()])}beginCompute(e){const t=this.get(e),s={label:"computeGroup_"+e.id};this.initTimestampQuery(e,s),t.cmdEncoderGPU=this.device.createCommandEncoder({label:"computeGroup_"+e.id}),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(s)}compute(e,t,s,n){const{passEncoderGPU:r}=this.get(e),i=this.get(n).pipeline;r.setPipeline(i);for(let l=0,d=s.length;l<d;l++){const h=s[l],p=this.get(h);r.setBindGroup(l,p.group)}const a=this.device.limits.maxComputeWorkgroupsPerDimension,u=this.get(t);u.dispatchSize===void 0&&(u.dispatchSize={x:0,y:1,z:1});const{dispatchSize:c}=u;t.dispatchCount>a?(c.x=Math.min(t.dispatchCount,a),c.y=Math.ceil(t.dispatchCount/a)):c.x=t.dispatchCount,r.dispatchWorkgroups(c.x,c.y,c.z)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.device.queue.submit([t.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,t){const{object:s,context:n,pipeline:r}=e,i=e.getBindings(),a=this.get(n),u=this.get(r).pipeline,c=a.currentSets,l=a.currentPass,d=e.getDrawParameters();if(d===null)return;c.pipeline!==u&&(l.setPipeline(u),c.pipeline=u);const h=c.bindingGroups;for(let _=0,C=i.length;_<C;_++){const M=i[_],P=this.get(M);h[M.index]!==M.id&&(l.setBindGroup(M.index,P.group),h[M.index]=M.id)}const p=e.getIndex(),f=p!==null;if(f===!0&&c.index!==p){const _=this.get(p).buffer,C=p.array instanceof Uint16Array?rn.Uint16:rn.Uint32;l.setIndexBuffer(_,C),c.index=p}const m=e.getVertexBuffers();for(let _=0,C=m.length;_<C;_++){const M=m[_];if(c.attributes[_]!==M){const P=this.get(M).buffer;l.setVertexBuffer(_,P),c.attributes[_]=M}}if(a.occlusionQuerySet!==void 0){const _=a.lastOcclusionObject;_!==s&&(_!==null&&_.occlusionTest===!0&&(l.endOcclusionQuery(),a.occlusionQueryIndex++),s.occlusionTest===!0&&(l.beginOcclusionQuery(a.occlusionQueryIndex),a.occlusionQueryObjects[a.occlusionQueryIndex]=s),a.lastOcclusionObject=s)}const b=()=>{if(s.isBatchedMesh===!0){const _=s._multiDrawStarts,C=s._multiDrawCounts,M=s._multiDrawCount,P=s._multiDrawInstances;for(let I=0;I<M;I++){const B=P?P[I]:1,U=B>1?0:I;f===!0?l.drawIndexed(C[I],B,_[I]/p.array.BYTES_PER_ELEMENT,0,U):l.draw(C[I],B,_[I],U)}}else if(f===!0){const{vertexCount:_,instanceCount:C,firstVertex:M}=d,P=e.getIndirect();if(P!==null){const I=this.get(P).buffer;l.drawIndexedIndirect(I,0)}else l.drawIndexed(_,C,M,0,0);t.update(s,_,C)}else{const{vertexCount:_,instanceCount:C,firstVertex:M}=d,P=e.getIndirect();if(P!==null){const I=this.get(P).buffer;l.drawIndirect(I,0)}else l.draw(_,C,M,0);t.update(s,_,C)}};if(e.camera.isArrayCamera&&e.camera.cameras.length>0){const _=this.get(e.camera),C=e.camera.cameras,M=e.getBindingGroup("cameraIndex");if(_.indexesGPU===void 0||_.indexesGPU.length!==C.length){const I=this.get(M),B=[],U=new Uint32Array([0,0,0,0]);for(let D=0,Y=C.length;D<Y;D++){U[0]=D;const Q=this.bindingUtils.createBindGroupIndex(U,I.layout);B.push(Q)}_.indexesGPU=B}const P=this.renderer.getPixelRatio();for(let I=0,B=C.length;I<B;I++){const U=C[I];if(s.layers.test(U.layers)){const D=U.viewport;l.setViewport(Math.floor(D.x*P),Math.floor(D.y*P),Math.floor(D.width*P),Math.floor(D.height*P),n.viewportValue.minDepth,n.viewportValue.maxDepth),l.setBindGroup(M.index,_.indexesGPU[I]),b()}}}else b()}needsRenderUpdate(e){const t=this.get(e),{object:s,material:n}=e,r=this.utils,i=r.getSampleCountRenderContext(e.context),a=r.getCurrentColorSpace(e.context),u=r.getCurrentColorFormat(e.context),c=r.getCurrentDepthStencilFormat(e.context),l=r.getPrimitiveTopology(s,n);let d=!1;return(t.material!==n||t.materialVersion!==n.version||t.transparent!==n.transparent||t.blending!==n.blending||t.premultipliedAlpha!==n.premultipliedAlpha||t.blendSrc!==n.blendSrc||t.blendDst!==n.blendDst||t.blendEquation!==n.blendEquation||t.blendSrcAlpha!==n.blendSrcAlpha||t.blendDstAlpha!==n.blendDstAlpha||t.blendEquationAlpha!==n.blendEquationAlpha||t.colorWrite!==n.colorWrite||t.depthWrite!==n.depthWrite||t.depthTest!==n.depthTest||t.depthFunc!==n.depthFunc||t.stencilWrite!==n.stencilWrite||t.stencilFunc!==n.stencilFunc||t.stencilFail!==n.stencilFail||t.stencilZFail!==n.stencilZFail||t.stencilZPass!==n.stencilZPass||t.stencilFuncMask!==n.stencilFuncMask||t.stencilWriteMask!==n.stencilWriteMask||t.side!==n.side||t.alphaToCoverage!==n.alphaToCoverage||t.sampleCount!==i||t.colorSpace!==a||t.colorFormat!==u||t.depthStencilFormat!==c||t.primitiveTopology!==l||t.clippingContextCacheKey!==e.clippingContextCacheKey)&&(t.material=n,t.materialVersion=n.version,t.transparent=n.transparent,t.blending=n.blending,t.premultipliedAlpha=n.premultipliedAlpha,t.blendSrc=n.blendSrc,t.blendDst=n.blendDst,t.blendEquation=n.blendEquation,t.blendSrcAlpha=n.blendSrcAlpha,t.blendDstAlpha=n.blendDstAlpha,t.blendEquationAlpha=n.blendEquationAlpha,t.colorWrite=n.colorWrite,t.depthWrite=n.depthWrite,t.depthTest=n.depthTest,t.depthFunc=n.depthFunc,t.stencilWrite=n.stencilWrite,t.stencilFunc=n.stencilFunc,t.stencilFail=n.stencilFail,t.stencilZFail=n.stencilZFail,t.stencilZPass=n.stencilZPass,t.stencilFuncMask=n.stencilFuncMask,t.stencilWriteMask=n.stencilWriteMask,t.side=n.side,t.alphaToCoverage=n.alphaToCoverage,t.sampleCount=i,t.colorSpace=a,t.colorFormat=u,t.depthStencilFormat=c,t.primitiveTopology=l,t.clippingContextCacheKey=e.clippingContextCacheKey,d=!0),d}getRenderCacheKey(e){const{object:t,material:s}=e,n=this.utils,r=e.context;return[s.transparent,s.blending,s.premultipliedAlpha,s.blendSrc,s.blendDst,s.blendEquation,s.blendSrcAlpha,s.blendDstAlpha,s.blendEquationAlpha,s.colorWrite,s.depthWrite,s.depthTest,s.depthFunc,s.stencilWrite,s.stencilFunc,s.stencilFail,s.stencilZFail,s.stencilZPass,s.stencilFuncMask,s.stencilWriteMask,s.side,n.getSampleCountRenderContext(r),n.getCurrentColorSpace(r),n.getCurrentColorFormat(r),n.getCurrentDepthStencilFormat(r),n.getPrimitiveTopology(t,s),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,s,n,r,i){return this.textureUtils.copyTextureToBuffer(e,t,s,n,r,i)}initTimestampQuery(e,t){if(!this.trackTimestamp)return;const s=e.isComputeNode?"compute":"render";this.timestampQueryPool[s]||(this.timestampQueryPool[s]=new IA(this.device,s,2048));const n=this.timestampQueryPool[s],r=n.allocateQueriesForContext(e);t.timestampWrites={querySet:n.querySet,beginningOfPassWriteIndex:r,endOfPassWriteIndex:r+1}}createNodeBuilder(e,t){return new wA(e,t)}createProgram(e){const t=this.get(e);t.module={module:this.device.createShaderModule({code:e.code,label:e.stage+(e.name!==""?`_${e.name}`:"")}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const s=this.get(e),r=s.currentPass.finish();this.get(t).bundleGPU=r,s.currentSets=s._currentSets,s.currentPass=s._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e,t,s,n){this.bindingUtils.createBindings(e,t,s,n)}updateBindings(e,t,s,n){this.bindingUtils.createBindings(e,t,s,n)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,s=null,n=null,r=0){let i=0,a=0,u=0,c=0,l=0,d=0,h=e.image.width,p=e.image.height;s!==null&&(c=s.x,l=s.y,d=s.z||0,h=s.width,p=s.height),n!==null&&(i=n.x,a=n.y,u=n.z||0);const f=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),m=this.get(e).texture,b=this.get(t).texture;f.copyTextureToTexture({texture:m,mipLevel:r,origin:{x:c,y:l,z:d}},{texture:b,mipLevel:r,origin:{x:i,y:a,z:u}},[h,p,1]),this.device.queue.submit([f.finish()])}copyFramebufferToTexture(e,t,s){const n=this.get(t);let r=null;t.renderTarget?e.isDepthTexture?r=this.get(t.depthTexture).texture:r=this.get(t.textures[0]).texture:e.isDepthTexture?r=this.textureUtils.getDepthBuffer(t.depth,t.stencil):r=this.context.getCurrentTexture();const i=this.get(e).texture;if(r.format!==i.format){console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",r.format,i.format);return}let a;if(n.currentPass?(n.currentPass.end(),a=n.encoder):a=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),a.copyTextureToTexture({texture:r,origin:[s.x,s.y,0]},{texture:i},[s.z,s.w]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e),n.currentPass){const{descriptor:u}=n;for(let c=0;c<u.colorAttachments.length;c++)u.colorAttachments[c].loadOp=_e.Load;if(t.depth&&(u.depthStencilAttachment.depthLoadOp=_e.Load),t.stencil&&(u.depthStencilAttachment.stencilLoadOp=_e.Load),n.currentPass=a.beginRenderPass(u),n.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.viewport&&this.updateViewport(t),t.scissor){const{x:c,y:l,width:d,height:h}=t.scissorValue;n.currentPass.setScissorRect(c,l,d,h)}}else this.device.queue.submit([a.finish()])}}class GA extends il{constructor(e,t,s,n,r,i){super(e,t,s,n,r,i),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class OA extends yg{constructor(){super(),this.addMaterial(ET,"MeshPhongMaterial"),this.addMaterial(ff,"MeshStandardMaterial"),this.addMaterial(i_,"MeshPhysicalMaterial"),this.addMaterial(c_,"MeshToonMaterial"),this.addMaterial(_T,"MeshBasicMaterial"),this.addMaterial(RT,"MeshLambertMaterial"),this.addMaterial(fT,"MeshNormalMaterial"),this.addMaterial(h_,"MeshMatcapMaterial"),this.addMaterial(aT,"LineBasicMaterial"),this.addMaterial(cT,"LineDashedMaterial"),this.addMaterial(m_,"PointsMaterial"),this.addMaterial(mf,"SpriteMaterial"),this.addMaterial(T_,"ShadowMaterial"),this.addLight(CS,Bg),this.addLight(_R,Fg),this.addLight(bR,Pg),this.addLight(gg,il),this.addLight(SR,Ug),this.addLight(vR,Dg),this.addLight(RR,Lg),this.addLight(NR,GA),this.addToneMapping(Lf,Ig),this.addToneMapping(If,Vg),this.addToneMapping(Vf,Gg),this.addToneMapping(Gf,Og),this.addToneMapping(Of,kg),this.addToneMapping(kf,zg)}}class $A extends WR{constructor(e={}){let t;e.forceWebGL?t=Zc:(t=VA,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new Zc(e)));const s=new t(e);super(s,e),this.library=new OA,this.isWebGPURenderer=!0}}export{Og as ACESFilmicToneMapping,kx as AONode,Is as AddEquation,qm as AddOperation,Zr as AdditiveBlending,kg as AgXToneMapping,Jg as AlphaFormat,gl as AlwaysCompare,Il as AlwaysDepth,Pm as AlwaysStencilFunc,Ug as AmbientLight,SR as AmbientLightNode,Cs as AnalyticLightNode,XA as ArcCurve,Wg as ArrayCamera,vs as ArrayElementNode,ec as ArrayNode,Ey as AssignNode,Ih as AttributeNode,vt as BackSide,jA as BasicDepthPacking,hu as BasicEnvironmentNode,ey as BasicShadowMap,Ux as BatchNode,KA as Box3,jl as BoxGeometry,kr as BufferAttribute,ky as BufferAttributeNode,Hl as BufferGeometry,Za as BufferNode,Ex as BumpMapNode,$y as BypassNode,Rn as ByteType,YA as Cache,Wy as CacheNode,qg as Camera,QA as CatmullRomCurve3,Gg as CineonToneMapping,ZA as CircleGeometry,fa as ClampToEdgeWrapping,Re as CodeNode,Pt as Color,yt as ColorManagement,ar as ColorSpaceNode,zy as ComputeNode,pt as ConstNode,JA as ConstantAlphaFactor,e0 as ConstantColorFactor,fh as ContextNode,t0 as Controls,nd as ConvertNode,Jm as CubeCamera,Zs as CubeReflectionMapping,Js as CubeRefractionMapping,ql as CubeTexture,fx as CubeTextureNode,Ao as CubeUVReflectionMapping,s0 as CubicBezierCurve,n0 as CubicBezierCurve3,Kg as CullFaceBack,Yg as CullFaceFront,jg as CullFaceNone,r0 as Curve,i0 as CurvePath,Ml as CustomBlending,o0 as CustomToneMapping,a0 as CylinderGeometry,u0 as Data3DTexture,Qm as DataArrayTexture,nm as DataTexture,Im as DecrementStencilOp,Dm as DecrementWrapStencilOp,c0 as DefaultLoadingManager,er as DepthFormat,Jn as DepthStencilFormat,ns as DepthTexture,Fg as DirectionalLight,_R as DirectionalLightNode,Xs as DoubleSide,Sl as DstAlphaFactor,vl as DstColorFactor,Os as DynamicDrawUsage,l0 as EllipseCurve,t_ as EnvironmentNode,pl as EqualCompare,Ul as EqualDepth,Mm as EqualStencilFunc,gT as EquirectUVNode,sr as EquirectangularReflectionMapping,nr as EquirectangularRefractionMapping,Nm as Euler,pa as EventDispatcher,$r as ExpressionNode,d0 as ExtrudeGeometry,Xl as Float16BufferAttribute,ju as Float32BufferAttribute,nt as FloatType,h0 as Fog,kl as FramebufferTexture,px as FrontFacingNode,Ro as FrontSide,Mg as Frustum,Cy as FunctionCallNode,zf as FunctionNode,ub as FunctionOverloadingNode,p0 as GLSL3,MR as GLSLNodeParser,dl as GreaterCompare,Fl as GreaterDepth,hl as GreaterEqualCompare,Pl as GreaterEqualDepth,wm as GreaterEqualStencilFunc,Cm as GreaterStencilFunc,f0 as Group,it as HalfFloatType,Dg as HemisphereLight,vR as HemisphereLightNode,GA as IESSpotLight,NR as IESSpotLightNode,g0 as ImageLoader,m0 as ImageUtils,Vm as IncrementStencilOp,Lm as IncrementWrapStencilOp,ce as IndexNode,Ip as InstanceNode,da as InstancedBufferAttribute,y0 as InstancedBufferGeometry,_m as InstancedInterleavedBuffer,Px as InstancedMeshNode,ze as IntType,xm as InterleavedBuffer,Tm as InterleavedBufferAttribute,Gm as InvertStencilOp,Wx as IrradianceNode,oy as JoinNode,zm as KeepStencilOp,x0 as Layers,ga as LessCompare,Ll as LessDepth,fl as LessEqualCompare,Dl as LessEqualDepth,Bm as LessEqualStencilFunc,Fm as LessStencilFunc,T0 as Light,Lg as LightProbe,RR as LightProbeNode,DR as Lighting,zx as LightingContextNode,Ui as LightingModel,un as LightingNode,Au as LightsNode,_0 as Line,b0 as Line3,dm as LineBasicMaterial,aT as LineBasicNodeMaterial,N0 as LineCurve,S0 as LineCurve3,hm as LineDashedMaterial,cT as LineDashedNodeMaterial,v0 as LineSegments,zt as LinearFilter,Ym as LinearMipMapLinearFilter,xs as LinearMipmapLinearFilter,Eo as LinearMipmapNearestFilter,ys as LinearSRGBColorSpace,Ig as LinearToneMapping,R0 as LinearTransfer,A0 as Loader,E0 as LoadingManager,Lx as LoopNode,tm as LuminanceAlphaFormat,em as LuminanceFormat,C0 as MOUSE,tb as MRTNode,l_ as MatcapUVNode,Iu as Material,v as MaterialNode,mx as MaterialReferenceNode,Wl as MathUtils,zl as Matrix2,Zn as Matrix3,Ie as Matrix4,Wm as MaxEquation,Ky as MaxMipLevelNode,ly as MemberNode,Qs as Mesh,Ol as MeshBasicMaterial,_T as MeshBasicNodeMaterial,w0 as MeshDepthMaterial,M0 as MeshDistanceMaterial,um as MeshLambertMaterial,RT as MeshLambertNodeMaterial,lm as MeshMatcapMaterial,h_ as MeshMatcapNodeMaterial,cm as MeshNormalMaterial,fT as MeshNormalNodeMaterial,rm as MeshPhongMaterial,ET as MeshPhongNodeMaterial,om as MeshPhysicalMaterial,i_ as MeshPhysicalNodeMaterial,im as MeshStandardMaterial,ff as MeshStandardNodeMaterial,am as MeshToonMaterial,c_ as MeshToonNodeMaterial,$m as MinEquation,fi as MirroredRepeatWrapping,Xm as MixOperation,wt as ModelNode,Ox as MorphNode,Yr as MultiplyBlending,jm as MultiplyOperation,Vt as NearestFilter,Ln as NearestMipmapLinearFilter,cl as NearestMipmapNearestFilter,zg as NeutralToneMapping,ml as NeverCompare,Vl as NeverDepth,Um as NeverStencilFunc,In as NoBlending,Vn as NoColorSpace,qs as NoToneMapping,O as Node,Ve as NodeAccess,Bc as NodeAttribute,fg as NodeBuilder,oo as NodeCache,Kv as NodeCode,Gc as NodeFrame,Pu as NodeFunctionInput,Se as NodeMaterial,sy as NodeMaterialObserver,$o as NodeShaderStage,ry as NodeType,Xv as NodeUniform,z as NodeUpdateType,hg as NodeVar,jv as NodeVarying,js as NormalBlending,vx as NormalMapNode,ll as NotEqualCompare,Bl as NotEqualDepth,Em as NotEqualStencilFunc,Km as Object3D,J as Object3DNode,mm as ObjectSpaceNormalMap,Cl as OneFactor,B0 as OneMinusConstantAlphaFactor,F0 as OneMinusConstantColorFactor,Tl as OneMinusDstAlphaFactor,_l as OneMinusDstColorFactor,bl as OneMinusSrcAlphaFactor,Nl as OneMinusSrcColorFactor,ol as OrthographicCamera,bf as OutputStructNode,wg as PCFShadowMap,P0 as PCFSoftShadowMap,mR as PMREMGenerator,ZT as PMREMNode,_f as ParameterNode,Ft as PassNode,U0 as Path,Kr as PerspectiveCamera,ef as PhongLightingModel,lf as PhysicalLightingModel,al as Plane,D0 as PlaneGeometry,Bg as PointLight,CS as PointLightNode,qb as PointUVNode,L0 as Points,pm as PointsMaterial,m_ as PointsNodeMaterial,lN as PosterizeNode,re as PropertyNode,xu as QuadMesh,I0 as QuadraticBezierCurve,V0 as QuadraticBezierCurve3,G0 as Quaternion,$u as RED_GREEN_RGTC2_Format,sm as RED_RGTC1_Format,ul as REVISION,O0 as RGBADepthPacking,es as RGBAFormat,_a as RGBAIntegerFormat,ko as RGBA_ASTC_10x10_Format,Vo as RGBA_ASTC_10x5_Format,Go as RGBA_ASTC_10x6_Format,Oo as RGBA_ASTC_10x8_Format,zo as RGBA_ASTC_12x10_Format,Wo as RGBA_ASTC_12x12_Format,Mo as RGBA_ASTC_4x4_Format,Bo as RGBA_ASTC_5x4_Format,Fo as RGBA_ASTC_5x5_Format,Po as RGBA_ASTC_6x5_Format,Uo as RGBA_ASTC_6x6_Format,Do as RGBA_ASTC_8x5_Format,Lo as RGBA_ASTC_8x6_Format,Io as RGBA_ASTC_8x8_Format,zi as RGBA_BPTC_Format,wo as RGBA_ETC2_EAC_Format,ku as RGBA_PVRTC_2BPPV1_Format,Ou as RGBA_PVRTC_4BPPV1_Format,Vr as RGBA_S3TC_DXT1_Format,Gr as RGBA_S3TC_DXT3_Format,Or as RGBA_S3TC_DXT5_Format,ma as RGBFormat,Hm as RGBIntegerFormat,k0 as RGB_BPTC_SIGNED_Format,z0 as RGB_BPTC_UNSIGNED_Format,zu as RGB_ETC1_Format,Co as RGB_ETC2_Format,Gu as RGB_PVRTC_2BPPV1_Format,Vu as RGB_PVRTC_4BPPV1_Format,ki as RGB_S3TC_DXT1_Format,Gn as RGFormat,Ta as RGIntegerFormat,Fb as RTTNode,PN as RangeNode,W0 as Ray,Pg as RectAreaLight,bR as RectAreaLightNode,ya as RedFormat,xa as RedIntegerFormat,Bi as ReferenceNode,yu as ReflectorNode,Vg as ReinhardToneMapping,Fh as RemapNode,qy as RenderOutputNode,ss as RenderTarget,Gy as RendererReferenceNode,gi as RepeatWrapping,Om as ReplaceStencilOp,yl as ReverseSubtractEquation,p_ as RotateNode,Hu as SIGNED_RED_GREEN_RGTC2_Format,Wu as SIGNED_RED_RGTC1_Format,q as SRGBColorSpace,qu as SRGBTransfer,ha as Scene,Xe as SceneNode,Ae as ScreenNode,wN as ScriptableNode,EN as ScriptableValueNode,uy as SetNode,$0 as ShaderMaterial,aS as ShadowBaseNode,gm as ShadowMaterial,Zf as ShadowNode,T_ as ShadowNodeMaterial,H0 as Shape,q0 as ShapePath,X0 as ShapeUtils,An as ShortType,Op as SkinningNode,j0 as Source,K0 as Sphere,Hg as SphereGeometry,Y0 as Spherical,Q0 as SphericalHarmonics3,Z0 as SplineCurve,Xo as SplitNode,il as SpotLight,gg as SpotLightNode,fm as SpriteMaterial,mf as SpriteNodeMaterial,Nb as SpriteSheetUVNode,Al as SrcAlphaFactor,Rl as SrcAlphaSaturateFactor,El as SrcColorFactor,K_ as StackNode,ym as StaticDrawUsage,Vb as StorageArrayElementNode,Ib as StorageBufferAttribute,Ob as StorageBufferNode,Lb as StorageInstancedBufferAttribute,jb as StorageTextureNode,Z_ as StructNode,Q_ as StructTypeNode,xl as SubtractEquation,Qr as SubtractiveBlending,J0 as TOUCH,WA as TSL,Xu as TangentSpaceNormalMap,Te as TempNode,$l as Texture,b_ as Texture3DNode,eE as TextureLoader,Ct as TextureNode,jy as TextureSizeNode,Oy as ToneMappingNode,mN as ToonOutlinePassNode,tE as Triangle,sE as TriangleFanDrawMode,nE as TriangleStripDrawMode,rE as TrianglesDrawMode,vb as TriplanarTexturesNode,iE as TubeGeometry,bm as UVMapping,Rm as Uint16BufferAttribute,vm as Uint32BufferAttribute,Gh as UniformArrayNode,Td as UniformGroupNode,ir as UniformNode,_t as UnsignedByteType,tr as UnsignedInt248Type,Gl as UnsignedInt5999Type,Fe as UnsignedIntType,Qg as UnsignedShort4444Type,Zg as UnsignedShort5551Type,ks as UnsignedShortType,Yb as UserDataNode,_r as VSMShadowMap,Wr as VarNode,Dy as VaryingNode,We as Vector2,j as Vector3,he as Vector4,$b as VertexColorNode,qe as ViewportDepthNode,Kx as ViewportDepthTextureNode,lT as ViewportSharedTextureNode,Pi as ViewportTextureNode,Un as WebGLCoordinateSystem,Zm as WebGLCubeRenderTarget,oE as WebGLRenderTarget,on as WebGPUCoordinateSystem,$A as WebGPURenderer,$g as WebXRController,aE as WireframeGeometry,wl as ZeroFactor,km as ZeroStencilOp,Xg as createCanvasElement,Ho as defaultBuildStages,sd as defaultShaderStages,qo as shaderStages,Ss as vectorComponents};
