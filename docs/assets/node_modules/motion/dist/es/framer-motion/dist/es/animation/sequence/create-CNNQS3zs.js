import{progress as U}from"../../../../../motion-utils/dist/es/progress-DdCORKJ-.js";import{secondsToMilliseconds as W}from"../../../../../motion-utils/dist/es/time-conversion-Dn12LHp6.js";import{createGeneratorEasing as X}from"../../../../../motion-dom/dist/es/animation/generators/utils/create-generator-easing-Deu7C_45.js";import{isGenerator as Y}from"../../../../../motion-dom/dist/es/animation/generators/utils/is-generator--ETSp9aW.js";import{getEasingForSegment as Z}from"../../easing/utils/get-easing-for-segment-CjLZliBQ.js";import{defaultOffset as _}from"../../utils/offsets/default-RQMwUpan.js";import{fillOffset as $}from"../../utils/offsets/fill-B1HmytcM.js";import{isMotionValue as ee}from"../../value/utils/is-motion-value-BbIbbK3h.js";import{resolveSubjects as te}from"../animate/resolve-subjects-DAvfhSPC.js";import{calculateRepeatDuration as ne}from"./utils/calc-repeat-duration-Dg70FpA9.js";import{calcNextTime as z}from"./utils/calc-time-7JONikZM.js";import{addKeyframes as oe}from"./utils/edit-JWsG2u2_.js";import{normalizeTimes as re}from"./utils/normalize-times-Q3RDtPuX.js";import{compareByTime as se}from"./utils/sort-BMHOiyIh.js";const ie="easeInOut";function Ee(e,{defaultTransition:n={},...R}={},H,k){const J=n.duration||.3,x=new Map,O=new Map,P={},D=new Map;let K=0,p=0,M=0;for(let h=0;h<e.length;h++){const i=e[h];if(typeof i=="string"){D.set(i,p);continue}else if(!Array.isArray(i)){D.set(i.name,z(p,i.at,K,D));continue}let[g,a,o={}]=i;o.at!==void 0&&(p=z(p,o.at,K,D));let r=0;const d=(f,u,m,y=0,b=0)=>{const t=ae(f),{delay:I=0,times:c=_(t),type:V="keyframes",repeat:j,repeatType:me,repeatDelay:le=0,...Q}=u;let{ease:l=n.ease||"easeOut",duration:s}=u;const w=typeof I=="function"?I(y,b):I,G=t.length,L=Y(V)?V:k==null?void 0:k[V];if(G<=2&&L){let S=100;if(G===2&&ce(t)){const A=t[1]-t[0];S=Math.abs(A)}const v={...Q};s!==void 0&&(v.duration=W(s));const E=X(v,S,L);l=E.ease,s=E.duration}s??(s=J);const N=p+w;c.length===1&&c[0]===0&&(c[1]=1);const q=c.length-t.length;if(q>0&&$(c,q),t.length===1&&t.unshift(null),j){s=ne(s,j);const S=[...t],v=[...c];l=Array.isArray(l)?[...l]:[l];const E=[...l];for(let A=0;A<j;A++){t.push(...S);for(let T=0;T<S.length;T++)c.push(v[T]+(A+1)),l.push(T===0?"linear":Z(E,T-1))}re(c,j)}const F=N+s;oe(m,t,l,c,N,F),r=Math.max(w+s,r),M=Math.max(F,M)};if(ee(g)){const f=B(g,O);d(a,o,C("default",f))}else{const f=te(g,a,H,P),u=f.length;for(let m=0;m<u;m++){a=a,o=o;const y=f[m],b=B(y,O);for(const t in a)d(a[t],fe(o,t),C(t,b),m,u)}}K=p,p+=r}return O.forEach((h,i)=>{for(const g in h){const a=h[g];a.sort(se);const o=[],r=[],d=[];for(let u=0;u<a.length;u++){const{at:m,value:y,easing:b}=a[u];o.push(y),r.push(U(0,M,m)),d.push(b||"easeOut")}r[0]!==0&&(r.unshift(0),o.unshift(o[0]),d.unshift(ie)),r[r.length-1]!==1&&(r.push(1),o.push(null)),x.has(i)||x.set(i,{keyframes:{},transition:{}});const f=x.get(i);f.keyframes[g]=o,f.transition[g]={...n,duration:M,ease:d,times:r,...R}}}),x}function B(e,n){return!n.has(e)&&n.set(e,{}),n.get(e)}function C(e,n){return n[e]||(n[e]=[]),n[e]}function ae(e){return Array.isArray(e)?e:[e]}function fe(e,n){return e&&e[n]?{...e,...e[n]}:{...e}}const ue=e=>typeof e=="number",ce=e=>e.every(ue);export{Ee as createAnimationsFromSequence,fe as getValueTransition};
