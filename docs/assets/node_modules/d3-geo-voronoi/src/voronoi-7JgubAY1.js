import{excess as y,geoDelaunay as d}from"./delaunay-DGzRslDA.js";import p from"../../d3-geo/src/centroid-DvYSmC5V.js";import c from"../../d3-geo/src/distance-BiWJ7apk.js";function h(s){const e=function(n){if(e.delaunay=null,e._data=n,typeof e._data=="object"&&e._data.type==="FeatureCollection"&&(e._data=e._data.features),typeof e._data=="object"){const t=e._data.map(o=>[e._vx(o),e._vy(o),o]).filter(o=>isFinite(o[0]+o[1]));e.points=t.map(o=>[o[0],o[1]]),e.valid=t.map(o=>o[2]),e.delaunay=d(e.points)}return e};return e._vx=function(n){if(typeof n=="object"&&"type"in n)return p(n)[0];if(0 in n)return n[0]},e._vy=function(n){if(typeof n=="object"&&"type"in n)return p(n)[1];if(1 in n)return n[1]},e.x=function(n){return n?(e._vx=n,e):e._vx},e.y=function(n){return n?(e._vy=n,e):e._vy},e.polygons=function(n){if(n!==void 0&&e(n),!e.delaunay)return!1;const t={type:"FeatureCollection",features:[]};return e.valid.length===0||(e.delaunay.polygons.forEach((o,r)=>t.features.push({type:"Feature",geometry:o?{type:"Polygon",coordinates:[[...o,o[0]].map(i=>e.delaunay.centers[i])]}:null,properties:{site:e.valid[r],sitecoordinates:e.points[r],neighbours:e.delaunay.neighbors[r]}})),e.valid.length===1&&t.features.push({type:"Feature",geometry:{type:"Sphere"},properties:{site:e.valid[0],sitecoordinates:e.points[0],neighbours:[]}})),t},e.triangles=function(n){return n!==void 0&&e(n),e.delaunay?{type:"FeatureCollection",features:e.delaunay.triangles.map((t,o)=>(t=t.map(r=>e.points[r]),t.center=e.delaunay.centers[o],t)).filter(t=>y(t)>0).map(t=>({type:"Feature",properties:{circumcenter:t.center},geometry:{type:"Polygon",coordinates:[[...t,t[0]]]}}))}:!1},e.links=function(n){if(n!==void 0&&e(n),!e.delaunay)return!1;const t=e.delaunay.edges.map(r=>c(e.points[r[0]],e.points[r[1]])),o=e.delaunay.urquhart(t);return{type:"FeatureCollection",features:e.delaunay.edges.map((r,i)=>({type:"Feature",properties:{source:e.valid[r[0]],target:e.valid[r[1]],length:t[i],urquhart:!!o[i]},geometry:{type:"LineString",coordinates:[e.points[r[0]],e.points[r[1]]]}}))}},e.mesh=function(n){return n!==void 0&&e(n),e.delaunay?{type:"MultiLineString",coordinates:e.delaunay.edges.map(t=>[e.points[t[0]],e.points[t[1]]])}:!1},e.cellMesh=function(n){if(n!==void 0&&e(n),!e.delaunay)return!1;const{centers:t,polygons:o}=e.delaunay,r=[];for(const i of o)if(i)for(let f=i.length,a=i[f-1],u=i[0],l=0;l<f;a=u,u=i[++l])u>a&&r.push([t[a],t[u]]);return{type:"MultiLineString",coordinates:r}},e._found=void 0,e.find=function(n,t,o){if(e._found=e.delaunay.find(n,t,e._found),!o||c([n,t],e.points[e._found])<o)return e._found},e.hull=function(n){n!==void 0&&e(n);const t=e.delaunay.hull,o=e.points;return t.length===0?null:{type:"Polygon",coordinates:[[...t.map(r=>o[r]),o[t[0]]]]}},s?e(s):e}export{h as geoVoronoi};
