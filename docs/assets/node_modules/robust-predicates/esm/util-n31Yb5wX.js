const a=11102230246251565e-32,p=134217729,Q=(3+8*a)*a;function b(f,s,d,o,x){let e,t,r,l,i=s[0],n=o[0],u=0,c=0;n>i==n>-i?(e=i,i=s[++u]):(e=n,n=o[++c]);let w=0;if(u<f&&c<d)for(n>i==n>-i?(t=i+e,r=e-(t-i),i=s[++u]):(t=n+e,r=e-(t-n),n=o[++c]),e=t,r!==0&&(x[w++]=r);u<f&&c<d;)n>i==n>-i?(t=e+i,l=t-e,r=e-(t-l)+(i-l),i=s[++u]):(t=e+n,l=t-e,r=e-(t-l)+(n-l),n=o[++c]),e=t,r!==0&&(x[w++]=r);for(;u<f;)t=e+i,l=t-e,r=e-(t-l)+(i-l),i=s[++u],e=t,r!==0&&(x[w++]=r);for(;c<d;)t=e+n,l=t-e,r=e-(t-l)+(n-l),n=o[++c],e=t,r!==0&&(x[w++]=r);return(e!==0||w===0)&&(x[w++]=e),w}function h(f,s){let d=s[0];for(let o=1;o<f;o++)d+=s[o];return d}function m(f){return new Float64Array(f)}export{a as epsilon,h as estimate,Q as resulterrbound,p as splitter,b as sum,m as vec};
